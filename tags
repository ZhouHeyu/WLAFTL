!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.6	//
ALLEQUAL	disksim_ioqueue.c	168;"	d	file:
ALLOCSIZE	disksim_global.h	143;"	d
ANGLE_ENTRIES	syssim_driver2.c	230;"	d	file:
ASATF_OPT	disksim_ioqueue.c	132;"	d	file:
ASC	disksim_ioqueue.c	179;"	d	file:
ASCII	disksim_global.h	160;"	d
ASIS	disksim_logorg.h	106;"	d
ASPCTF_OPT	disksim_ioqueue.c	131;"	d	file:
ASPTF_OPT	disksim_ioqueue.c	130;"	d	file:
ASSERT	disksim_assertlib.h	108;"	d
ASSERT	disksim_assertlib.h	116;"	d
ASSERT	fsim_types.h	16;"	d
ASSERT	fsim_types.h	23;"	d
ASSERT1	disksim_assertlib.h	109;"	d
ASSERT1	disksim_assertlib.h	124;"	d
ASSERT1D	disksim_assertlib.h	110;"	d
ASSERT1D	disksim_assertlib.h	133;"	d
ASSERT2	disksim_assertlib.h	111;"	d
ASSERT2	disksim_assertlib.h	142;"	d
ASSERT2p	disksim_assertlib.h	112;"	d
ASSERT2p	disksim_assertlib.h	152;"	d
ASYNCHRONOUS	disksim_global.h	192;"	d
ATABUS	disksim_global.h	165;"	d
BASETIMEOUT	disksim_ioqueue.c	174;"	d	file:
BITMAP_CHECK	syssim_driver2.c	266;"	d	file:
BITMAP_CLEAR	syssim_driver2.c	268;"	d	file:
BITMAP_SET	syssim_driver2.c	267;"	d	file:
BITS_PER_INT_MASK	disksim_global.h	152;"	d
BLK_BITS	nand.h	18;"	d
BLK_BITS_SECT	nand.h	48;"	d
BLK_F_SECT	nand.h	52;"	d
BLK_MASK_IN_PAGE	nand.h	28;"	d
BLK_MASK_IN_SECT	nand.h	26;"	d
BLK_MASK_SECT	nand.h	44;"	d
BLK_NO_PAGE	nand.h	40;"	d
BLK_NO_SECT	nand.h	35;"	d
BLK_PAGE_NO_SECT	nand.h	38;"	d
BLK_SIZE_B	nand.h	32;"	d
BLK_SIZE_KB	nand.h	33;"	d
BLOCK	syssim_driver.c	54;"	d	file:
BLOCK	syssim_driver2.c	114;"	d	file:
BLOCK2SECTOR	syssim_driver.c	56;"	d	file:
BLOCK2SECTOR	syssim_driver2.c	116;"	d	file:
BLOCKINGMAX	disksim_logorg.h	142;"	d
BLOCK_ERASE	ssd_interface.h	80;"	d
BMT	fast.c	/^int *BMT;               \/\/ block mapping table for data blocks$/;"	v
BMT	fast.youkim.c	/^int *BMT;               \/\/ block mapping table for data blocks$/;"	v
BMT	fast_bk.c	/^int *BMT;               \/\/ block mapping table for data blocks$/;"	v
BMT	last.c	/^int *BMT;               \/\/ block mapping table for data blocks$/;"	v
BUFFER_APPEND	disksim_disk.h	/^  BUFFER_APPEND            = 4     \/\/ write $/;"	e	enum:__anon8
BUFFER_BACKGROUND	disksim_disk.h	144;"	d
BUFFER_CLEAN	disksim_disk.h	/^  BUFFER_CLEAN             = 2,$/;"	e	enum:__anon7
BUFFER_COLLISION	disksim_disk.h	/^  BUFFER_COLLISION         = -1,$/;"	e	enum:__anon8
BUFFER_CONTACTING	disksim_disk.h	/^  BUFFER_CONTACTING        = 8,$/;"	e	enum:__anon7
BUFFER_DEC_PREFETCH_SCHEME	disksim_disk.h	/^  BUFFER_DEC_PREFETCH_SCHEME    = 4$/;"	e	enum:__anon9
BUFFER_DIRTY	disksim_disk.h	/^  BUFFER_DIRTY             = 3,$/;"	e	enum:__anon7
BUFFER_EMPTY	disksim_disk.h	/^  BUFFER_EMPTY             = 1,$/;"	e	enum:__anon7
BUFFER_IDLE	disksim_disk.h	/^  BUFFER_IDLE              = 7,$/;"	e	enum:__anon7
BUFFER_NOMATCH	disksim_disk.h	/^  BUFFER_NOMATCH	   = 0,$/;"	e	enum:__anon8
BUFFER_NO_READ_AHEAD	disksim_disk.h	/^  BUFFER_NO_READ_AHEAD		= 0,$/;"	e	enum:__anon9
BUFFER_PARTIAL	disksim_disk.h	/^  BUFFER_PARTIAL	   = 2,     \/\/ read $/;"	e	enum:__anon8
BUFFER_PREEMPT	disksim_disk.h	/^  BUFFER_PREEMPT           = 6,$/;"	e	enum:__anon7
BUFFER_PREPEND	disksim_disk.h	/^  BUFFER_PREPEND           = 3,     \/\/ write $/;"	e	enum:__anon8
BUFFER_READING	disksim_disk.h	/^  BUFFER_READING           = 4,$/;"	e	enum:__anon7
BUFFER_READ_UNTIL_CYL_END	disksim_disk.h	/^  BUFFER_READ_UNTIL_CYL_END	= 2,$/;"	e	enum:__anon9
BUFFER_READ_UNTIL_SEG_END	disksim_disk.h	/^  BUFFER_READ_UNTIL_SEG_END	= 3,$/;"	e	enum:__anon9
BUFFER_READ_UNTIL_TRACK_END	disksim_disk.h	/^  BUFFER_READ_UNTIL_TRACK_END	= 1,$/;"	e	enum:__anon9
BUFFER_TRANSFERING	disksim_disk.h	/^  BUFFER_TRANSFERING       = 9$/;"	e	enum:__anon7
BUFFER_WHOLE	disksim_disk.h	/^  BUFFER_WHOLE	           = 1,     \/\/ read $/;"	e	enum:__anon8
BUFFER_WRITING	disksim_disk.h	/^  BUFFER_WRITING           = 5,$/;"	e	enum:__anon7
BUS	disksim_ioface.h	117;"	d
BUS_ARB_TYPE_MAX	disksim_bus.c	125;"	d	file:
BUS_ARB_TYPE_MIN	disksim_bus.c	122;"	d	file:
BUS_DELAY_COMPLETE	disksim_iosim.h	139;"	d
BUS_FREE	disksim_bus.c	129;"	d	file:
BUS_OWNED	disksim_bus.c	130;"	d	file:
BUS_OWNERSHIP_GRANTED	disksim_iosim.h	138;"	d
BUS_TYPE_MAX	disksim_bus.c	118;"	d	file:
BUS_TYPE_MIN	disksim_bus.c	115;"	d	file:
CACHE_ALLOCATE_MAX	disksim_cachemem.c	164;"	d	file:
CACHE_ALLOCATE_MIN	disksim_cachemem.c	162;"	d	file:
CACHE_ALLOCATE_NONDIRTY	disksim_cachemem.c	163;"	d	file:
CACHE_ATOMFLUSH	disksim_cachemem.c	131;"	d	file:
CACHE_DEVICE	disksim_cache.h	109;"	d
CACHE_DEVICE	disksim_cachedev.c	123;"	d	file:
CACHE_DIRTY	disksim_cachemem.c	128;"	d	file:
CACHE_EVENT_ALLOCATE	disksim_cachemem.c	143;"	d	file:
CACHE_EVENT_FLUSH	disksim_cachedev.c	139;"	d	file:
CACHE_EVENT_IDLEFLUSH_FLUSH	disksim_cachedev.c	141;"	d	file:
CACHE_EVENT_IDLEFLUSH_READ	disksim_cachedev.c	140;"	d	file:
CACHE_EVENT_IDLESYNC	disksim_cachemem.c	150;"	d	file:
CACHE_EVENT_IOREQ	disksim_cachedev.c	134;"	d	file:
CACHE_EVENT_IOREQ	disksim_cachemem.c	142;"	d	file:
CACHE_EVENT_POPULATE_ALSO	disksim_cachedev.c	137;"	d	file:
CACHE_EVENT_POPULATE_ONLY	disksim_cachedev.c	136;"	d	file:
CACHE_EVENT_READ	disksim_cachedev.c	135;"	d	file:
CACHE_EVENT_READ	disksim_cachemem.c	144;"	d	file:
CACHE_EVENT_READEXTRA	disksim_cachemem.c	148;"	d	file:
CACHE_EVENT_SYNC	disksim_cachemem.c	146;"	d	file:
CACHE_EVENT_SYNCPART	disksim_cachemem.c	147;"	d	file:
CACHE_EVENT_WRITE	disksim_cachedev.c	138;"	d	file:
CACHE_EVENT_WRITE	disksim_cachemem.c	145;"	d	file:
CACHE_EVENT_WRITEFILLEXTRA	disksim_cachemem.c	149;"	d	file:
CACHE_FLAG_LINELOCKED_ALLOCATE	disksim_cachemem.c	138;"	d	file:
CACHE_FLAG_WASBLOCKED	disksim_cachemem.c	137;"	d	file:
CACHE_FLUSH_DEMANDONLY	disksim_cachedev.c	154;"	d	file:
CACHE_FLUSH_DEMANDONLY	disksim_cachemem.c	178;"	d	file:
CACHE_FLUSH_MAX	disksim_cachedev.c	156;"	d	file:
CACHE_FLUSH_MAX	disksim_cachemem.c	180;"	d	file:
CACHE_FLUSH_MIN	disksim_cachedev.c	153;"	d	file:
CACHE_FLUSH_MIN	disksim_cachemem.c	177;"	d	file:
CACHE_FLUSH_PERIODIC	disksim_cachedev.c	155;"	d	file:
CACHE_FLUSH_PERIODIC	disksim_cachemem.c	179;"	d	file:
CACHE_HASHMASK	disksim_cachemem.c	114;"	d	file:
CACHE_HASHSIZE	disksim_cachemem.c	113;"	d	file:
CACHE_INVALID	opagemap.h	13;"	d
CACHE_INVALID	pagemap.h	14;"	d
CACHE_LOCKDOWN	disksim_cachemem.c	129;"	d	file:
CACHE_LOCKED	disksim_cachemem.c	130;"	d	file:
CACHE_LOCKSPERSTRUCT	disksim_cachemem.c	183;"	d	file:
CACHE_MAX	disksim_cache.h	110;"	d
CACHE_MAXSEGMENTS	disksim_cachemem.c	111;"	d	file:
CACHE_MAX_ENTRIES	ssd_interface.c	93;"	d	file:
CACHE_MAX_ENTRIES	ssd_interface_noopt.c	52;"	d	file:
CACHE_MAX_ENTRIES	ssd_interface_opt.c	55;"	d	file:
CACHE_MEMORY	disksim_cache.h	108;"	d
CACHE_MEMORY	disksim_cachemem.c	102;"	d	file:
CACHE_MIN	disksim_cache.h	107;"	d
CACHE_NUM_ENTRIES	opagemap.h	/^int CACHE_NUM_ENTRIES;$/;"	v
CACHE_NUM_ENTRIES	pagemap.h	/^int CACHE_NUM_ENTRIES;$/;"	v
CACHE_PREFETCH_ALLOFLINE	disksim_cachemem.c	172;"	d	file:
CACHE_PREFETCH_FRONTOFLINE	disksim_cachemem.c	170;"	d	file:
CACHE_PREFETCH_MAX	disksim_cachemem.c	173;"	d	file:
CACHE_PREFETCH_MIN	disksim_cachemem.c	168;"	d	file:
CACHE_PREFETCH_NONE	disksim_cachemem.c	169;"	d	file:
CACHE_PREFETCH_RESTOFLINE	disksim_cachemem.c	171;"	d	file:
CACHE_REALLOCATE_WRITE	disksim_cachemem.c	132;"	d	file:
CACHE_REPLACE_FIFO	disksim_cachemem.c	119;"	d	file:
CACHE_REPLACE_LIFO	disksim_cachemem.c	122;"	d	file:
CACHE_REPLACE_MAX	disksim_cachemem.c	123;"	d	file:
CACHE_REPLACE_MIN	disksim_cachemem.c	118;"	d	file:
CACHE_REPLACE_RANDOM	disksim_cachemem.c	121;"	d	file:
CACHE_REPLACE_SLRU	disksim_cachemem.c	120;"	d	file:
CACHE_SEGNUM	disksim_cachemem.c	133;"	d	file:
CACHE_VALID	disksim_cachemem.c	127;"	d	file:
CACHE_VALID	opagemap.h	14;"	d
CACHE_VALID	pagemap.h	15;"	d
CACHE_WRITE_BACK	disksim_cachedev.c	148;"	d	file:
CACHE_WRITE_BACK	disksim_cachemem.c	157;"	d	file:
CACHE_WRITE_MAX	disksim_cachedev.c	149;"	d	file:
CACHE_WRITE_MAX	disksim_cachemem.c	158;"	d	file:
CACHE_WRITE_MIN	disksim_cachedev.c	145;"	d	file:
CACHE_WRITE_MIN	disksim_cachemem.c	154;"	d	file:
CACHE_WRITE_SYNCONLY	disksim_cachedev.c	146;"	d	file:
CACHE_WRITE_SYNCONLY	disksim_cachemem.c	155;"	d	file:
CACHE_WRITE_THRU	disksim_cachedev.c	147;"	d	file:
CACHE_WRITE_THRU	disksim_cachemem.c	156;"	d	file:
CFLAGS	disksim.mak	/^CFLAGS = $(DEBUG_OFLAGS)$/;"	m
CHECKPOINT	disksim_global.h	207;"	d
CLEAN	cache.h	75;"	d
CLOCK_INTERRUPT	disksim_global.h	215;"	d
COMPLETE	disksim_orgface.h	106;"	d
COMPLETION	disksim_iosim.h	/^  COMPLETION		= -1,$/;"	e	enum:__anon19
COMPLETION_PENDING	disksim_ctlr.h	122;"	d
COMPLETION_RECEIVED	disksim_disk.h	160;"	d
COMPLETION_SENT	disksim_disk.h	159;"	d
CONTROLLER	disksim_ioface.h	116;"	d
CONTROLLER	disksim_iosim.h	171;"	d
CONTROLLER_DATA_TRANSFER_COMPLETE	disksim_iosim.h	140;"	d
COUNT_THRSHLD	raw_layout.c	86;"	d	file:
CPUMHZ	syssim_driver2.c	3783;"	d	file:
CPUSWAP_INTERRUPT	disksim_global.h	218;"	d
CPU_EVENT	disksim_pfsim.h	113;"	d
CPU_IDLE	disksim_pfsim.h	127;"	d
CPU_IDLE_WORK	disksim_pfsim.h	129;"	d
CPU_INTR	disksim_pfsim.h	130;"	d
CPU_PROCESS	disksim_pfsim.h	128;"	d
CSWITCH_EVENT	disksim_pfsim.h	116;"	d
CTLR_BASED_ON_53C700	disksim_ctlr.h	113;"	d
CTLR_PASSTHRU	disksim_ctlr.h	112;"	d
CTLR_SMART	disksim_ctlr.h	114;"	d
CYCLES_PER_MS	syssim_driver2.c	393;"	d	file:
CYCLE_CYL	disksim_ioqueue.c	122;"	d	file:
CYCLE_LBN	disksim_ioqueue.c	119;"	d	file:
CYL_DIST_MEAN	syssim_driver2.c	251;"	d	file:
CYL_RANGE	syssim_driver2.c	967;"	d	file:
DEBUG_OFLAGS	disksim.mak	/^DEBUG_OFLAGS = \/Zi \/DASSERTS$/;"	m
DEBUG_TRACE	disksim_simos_interface.c	146;"	d	file:
DEBUG_TRACE	disksim_simos_interface.c	148;"	d	file:
DEC	disksim_global.h	162;"	d
DEC_RAMAKR	hplcomb.c	68;"	d	file:
DEFAULT	disksim_global.h	169;"	d
DEFAULT	hplcomb.c	69;"	d	file:
DELETE	cache.h	24;"	d
DESC	disksim_ioqueue.c	180;"	d	file:
DEVICE	disksim_ioface.h	115;"	d
DEVICE	disksim_iosim.h	170;"	d
DEVICETYPE_DISK	disksim_device.h	/^  DEVICETYPE_DISK	= 1,$/;"	e	enum:__anon5
DEVICETYPE_MAX	disksim_device.h	76;"	d
DEVICETYPE_MEMS	disksim_device.h	/^  DEVICETYPE_MEMS      = 3,$/;"	e	enum:__anon5
DEVICETYPE_MIN	disksim_device.h	75;"	d
DEVICETYPE_SIMPLEDISK	disksim_device.h	/^  DEVICETYPE_SIMPLEDISK	= 2,$/;"	e	enum:__anon5
DEVICETYPE_SIMPLEFLASH	disksim_device.h	/^  DEVICETYPE_SIMPLEFLASH = 4,$/;"	e	enum:__anon5
DEVICE_ACCESS_COMPLETE	disksim_iosim.h	130;"	d
DEVICE_BUFFER_SECTOR_DONE	disksim_iosim.h	135;"	d
DEVICE_BUFFER_SEEKDONE	disksim_iosim.h	133;"	d
DEVICE_BUFFER_TRACKACC_DONE	disksim_iosim.h	134;"	d
DEVICE_DATA_TRANSFER_COMPLETE	disksim_iosim.h	132;"	d
DEVICE_GOTO_REMAPPED_SECTOR	disksim_iosim.h	137;"	d
DEVICE_GOT_REMAPPED_SECTOR	disksim_iosim.h	136;"	d
DEVICE_OVERHEAD_COMPLETE	disksim_iosim.h	129;"	d
DEVICE_PREPARE_FOR_DATA_TRANSFER	disksim_iosim.h	131;"	d
DEVICE_SERVICE_TIME	disksim_global.h	/^double DEVICE_SERVICE_TIME;$/;"	v
DEV_DISK	disksim_global.h	565;"	d
DEV_FLASH	disksim_global.h	564;"	d
DIRTY	cache.h	76;"	d
DISCONNECT	disksim_iosim.h	/^  DISCONNECT		= -3,$/;"	e	enum:__anon19
DISCONNECT_PENDING	disksim_ctlr.h	123;"	d
DISK	cache.h	15;"	d
DISKACCESS	disksim_iosim.h	177;"	d
DISKACCTIME	disksim_iosim.h	178;"	d
DISKPOS	disksim_iosim.h	179;"	d
DISKPOSTIME	disksim_iosim.h	180;"	d
DISKSEEK	disksim_iosim.h	181;"	d
DISKSEEKTIME	disksim_iosim.h	182;"	d
DISKSERVTIME	disksim_iosim.h	183;"	d
DISKSIM	raw_layout.c	56;"	d	file:
DISKSIM_ASSERTLIB_H	disksim_assertlib.h	102;"	d
DISKSIM_BUS_H	disksim_bus.h	105;"	d
DISKSIM_CACHEDEV_H	disksim_cachedev.h	102;"	d
DISKSIM_CACHEMEM_H	disksim_cachemem.h	102;"	d
DISKSIM_CACHE_H	disksim_cache.h	102;"	d
DISKSIM_CONTROLLER_H	disksim_controller.h	102;"	d
DISKSIM_CTLR_H	disksim_ctlr.h	102;"	d
DISKSIM_DEVICE_H	disksim_device.h	59;"	d
DISKSIM_DISKMAP_H	disksim_diskmap.h	102;"	d
DISKSIM_DISK_H	disksim_disk.h	102;"	d
DISKSIM_EVENT_SIZE	disksim_global.h	244;"	d
DISKSIM_EVENT_SPACESIZE	disksim_global.h	245;"	d
DISKSIM_GLOBAL_H	disksim_global.h	102;"	d
DISKSIM_IODRIVER_H	disksim_iodriver.h	102;"	d
DISKSIM_IOFACE_H	disksim_ioface.h	102;"	d
DISKSIM_IOQUEUE_H	disksim_ioqueue.h	102;"	d
DISKSIM_IOSIM_H	disksim_iosim.h	102;"	d
DISKSIM_IOTRACE_H	disksim_iotrace.h	59;"	d
DISKSIM_LOGORG_H	disksim_logorg.h	102;"	d
DISKSIM_MALLOC_H	disksim_malloc.h	59;"	d
DISKSIM_MASTER	disksim_global.h	/^  enum { DISKSIM_MASTER, DISKSIM_SLAVE, DISKSIM_NONE } trace_mode;$/;"	e	enum:disksim::__anon14
DISKSIM_NONE	disksim_global.h	/^  enum { DISKSIM_MASTER, DISKSIM_SLAVE, DISKSIM_NONE } trace_mode;$/;"	e	enum:disksim::__anon14
DISKSIM_OBJ	disksim.mak	/^DISKSIM_OBJ = disksim_intr.obj disksim_cache.obj disksim_pfsim.obj disksim_pfdisp.obj\\$/;"	m
DISKSIM_ORGFACE_H	disksim_orgface.h	102;"	d
DISKSIM_PFFACE_H	disksim_pfface.h	102;"	d
DISKSIM_PFSIM_H	disksim_pfsim.h	102;"	d
DISKSIM_RAND48_H	disksim_rand48.h	59;"	d
DISKSIM_SIMPLEDISK_H	disksim_simpledisk.h	59;"	d
DISKSIM_SIMPLEFLASH_H	disksim_simpleflash.h	63;"	d
DISKSIM_SLAVE	disksim_global.h	/^  enum { DISKSIM_MASTER, DISKSIM_SLAVE, DISKSIM_NONE } trace_mode;$/;"	e	enum:disksim::__anon14
DISKSIM_STAT_H	disksim_stat.h	102;"	d
DISKSIM_SYNTHIO_H	disksim_synthio.h	102;"	d
DISKSIM_TIME_THRESHOLD	disksim_global.h	227;"	d
DISKSIM__dorand48	disksim_rand48.c	/^DISKSIM__dorand48(unsigned short xseed[3])$/;"	f	file:
DISKSIM_drand48	disksim_rand48.c	/^DISKSIM_drand48(void)$/;"	f
DISKSIM_erand48	disksim_rand48.c	/^DISKSIM_erand48(unsigned short xseed[3])$/;"	f	file:
DISKSIM_jrand48	disksim_rand48.c	/^DISKSIM_jrand48(unsigned short xseed[3])$/;"	f
DISKSIM_ldexp	disksim_rand48.c	/^DISKSIM_ldexp (double x, int exp)$/;"	f	file:
DISKSIM_lrand48	disksim_rand48.c	/^DISKSIM_lrand48(void)$/;"	f
DISKSIM_malloc	disksim_malloc.c	/^void *DISKSIM_malloc (int size)$/;"	f
DISKSIM_mrand48	disksim_rand48.c	/^DISKSIM_mrand48(void)$/;"	f
DISKSIM_nrand48	disksim_rand48.c	/^DISKSIM_nrand48(unsigned short xseed[3])$/;"	f
DISKSIM_srand48	disksim_rand48.c	/^DISKSIM_srand48(long seed)$/;"	f
DISKSIM_time	disksim_global.h	135;"	d
DISK_IDLE	disksim_disk.h	/^  DISK_IDLE                = 1,$/;"	e	enum:__anon6
DISK_SERVICE_TIME	disksim_global.h	/^double DISK_SERVICE_TIME;$/;"	v
DISK_TRANSFERING	disksim_disk.h	/^  DISK_TRANSFERING         = 2,$/;"	e	enum:__anon6
DISK_WAIT_FOR_CONTROLLER	disksim_disk.h	/^  DISK_WAIT_FOR_CONTROLLER = 3$/;"	e	enum:__anon6
DISTSIZE	disksim_stat.h	104;"	d
DM_MGR_SIZE	disksim_global.h	563;"	d
DOWN	disksim_ctlr.h	130;"	d
DRIVER_C700	disksim_iodriver.h	118;"	d
DRIVER_CTLR_BUSY	disksim_iodriver.h	119;"	d
D_AVG_RESP	disksim_global.h	539;"	d
DiskSimInternalCallback	disksim_simos_interface.c	/^typedef struct DiskSimInternalCallback {$/;"	s	file:
DiskSimInternalCallback	disksim_simos_interface.c	/^} DiskSimInternalCallback;$/;"	t	typeref:struct:DiskSimInternalCallback	file:
ELEVATOR_CYL	disksim_ioqueue.c	121;"	d	file:
ELEVATOR_LBN	disksim_ioqueue.c	118;"	d	file:
EMCSYMM	disksim_global.h	168;"	d
ERASE_DELAY	ssd_interface.h	46;"	d
EVICT_FROM_FLASH	cache.h	25;"	d
EVICT_INTO_DISK	cache.h	26;"	d
EXCLUSIVE	disksim_bus.c	116;"	d	file:
EXIT	fsim_types.h	17;"	d
EXIT	fsim_types.h	24;"	d
EXIT_DISKSIM	disksim_global.h	209;"	d
EXTRA_SEEK_STAT	syssim_driver2.c	236;"	d	file:
EXTRA_WRITE_DISCONNECT	disksim_disk.h	158;"	d
FALSE	disksim_global.h	149;"	d
FALSE	hplcomb.c	59;"	d	file:
FB_weight	syssim_driver2.c	/^static float FB_weight=1;$/;"	v	file:
FCFS	disksim_ioqueue.c	117;"	d	file:
FETCH_MISS_FROM_DISK	cache.h	27;"	d
FETCH_MISS_INTO_FLASH	cache.h	28;"	d
FIFO_ARB	disksim_bus.c	124;"	d	file:
FINAL_WRITE_RECONNECTION_1	disksim_disk.h	161;"	d
FINAL_WRITE_RECONNECTION_2	disksim_disk.h	162;"	d
FLASH	cache.h	16;"	d
FREE	disksim_ctlr.h	119;"	d
FREE_BANDWIDTH_STAT	syssim_driver2.c	237;"	d	file:
FREE_COUNT_STAT	syssim_driver2.c	242;"	d	file:
FREE_CYL_POP_STAT	syssim_driver2.c	246;"	d	file:
FREE_CYL_STAT	syssim_driver2.c	247;"	d	file:
FREE_DEMAND_COUNT_STAT	syssim_driver2.c	243;"	d	file:
FREE_POP_STAT	syssim_driver2.c	245;"	d	file:
FSIM_DBG	fsim_types.h	14;"	d
FSIM_DBG	fsim_types.h	21;"	d
FSIM_ERR	fsim_types.h	8;"	d
FSIM_INFO	fsim_types.h	7;"	d
FSIM_TEST	fsim_types.h	15;"	d
FSIM_TEST	fsim_types.h	22;"	d
FULL_FASTWRITE	disksim_disk.h	/^  FULL_FASTWRITE	        = 2$/;"	e	enum:__anon11
F_COEFF_DS_PREV_T	disksim_global.h	535;"	d
F_COEFF_INTARR_T	disksim_global.h	532;"	d
F_COEFF_REQ_SIZE_T	disksim_global.h	536;"	d
F_COEFF_RW_T	disksim_global.h	533;"	d
F_COEFF_SEQ_T	disksim_global.h	534;"	d
F_INTERCEPT	disksim_global.h	537;"	d
GC_PAGE_READ	ssd_interface.h	81;"	d
GC_PAGE_WRITE	ssd_interface.h	82;"	d
GC_READ_DELAY	ssd_interface.h	71;"	d
GC_WRITE_DELAY	ssd_interface.h	72;"	d
GC_data	disksim_main.c	/^int GC_data;$/;"	v
GC_data	opagemap.c	/^int GC_data;$/;"	v
GC_map	disksim_main.c	/^int GC_map;$/;"	v
GC_map	opagemap.c	/^int GC_map;$/;"	v
GHOST	cache.h	78;"	d
GREEDY_AREA_FIRST_ALG	syssim_driver2.c	106;"	d	file:
GREEDY_BLOCK_ALG	syssim_driver2.c	97;"	d	file:
GREEDY_BLOCK_COIN_ALG	syssim_driver2.c	91;"	d	file:
GREEDY_BW_ALG	syssim_driver2.c	90;"	d	file:
GREEDY_BW_COIN_ALG	syssim_driver2.c	101;"	d	file:
GREEDY_BW_EDGE_COIN_ALG	syssim_driver2.c	95;"	d	file:
GREEDY_BW_MAX_DEST_ALG	syssim_driver2.c	100;"	d	file:
GREEDY_BW_PROB_COIN_ALG	syssim_driver2.c	94;"	d	file:
GREEDY_BW_SOURCE_ALG	syssim_driver2.c	96;"	d	file:
GREEDY_BW_SOURCE_DIST_ALG	syssim_driver2.c	102;"	d	file:
GREEDY_BW_SOURCE_WEIGHT_ALG	syssim_driver2.c	98;"	d	file:
GREEDY_BW_TIME_DIST_ALG	syssim_driver2.c	103;"	d	file:
GREEDY_BW_TRACK_ALG	syssim_driver2.c	105;"	d	file:
GREEDY_BW_TRACK_DIST_ALG	syssim_driver2.c	107;"	d	file:
GREEDY_UNIFORM_RATE_ALG	syssim_driver2.c	104;"	d	file:
HALFTIMEOUT	disksim_ioqueue.c	175;"	d	file:
HALF_OUT	disksim_global.h	188;"	d
HASH_OUTSTAND	disksim_logorg.h	140;"	d
HAVE_X86	syssim_driver2.c	77;"	d	file:
HDA_OWNED	disksim_disk.h	157;"	d
HPL	disksim_global.h	161;"	d
HPL_ASYNC	disksim_hptrace.h	175;"	d
HPL_BAD	disksim_hptrace.h	190;"	d
HPL_BDWRITEFS	disksim_hptrace.h	145;"	d
HPL_BREADAAFS	disksim_hptrace.h	144;"	d
HPL_BREADAFS	disksim_hptrace.h	143;"	d
HPL_BREADFS	disksim_hptrace.h	142;"	d
HPL_BUSY	disksim_hptrace.h	168;"	d
HPL_BWRITEFS	disksim_hptrace.h	146;"	d
HPL_CACHE	disksim_hptrace.h	183;"	d
HPL_CALL	disksim_hptrace.h	191;"	d
HPL_CREATE_OPENFS	disksim_hptrace.h	147;"	d
HPL_DELWRITE	disksim_hptrace.h	176;"	d
HPL_DONE	disksim_hptrace.h	166;"	d
HPL_DUX_REM_REQ	disksim_hptrace.h	192;"	d
HPL_END_OF_DATA	disksim_hptrace.h	171;"	d
HPL_ERROR	disksim_hptrace.h	167;"	d
HPL_FSYSIO	disksim_hptrace.h	188;"	d
HPL_HEAD	disksim_hptrace.h	187;"	d
HPL_INVAL	disksim_hptrace.h	185;"	d
HPL_LOCKED	disksim_hptrace.h	186;"	d
HPL_LONGIO	disksim_hptrace.h	139;"	d
HPL_NDELAY	disksim_hptrace.h	173;"	d
HPL_NETBUF	disksim_hptrace.h	197;"	d
HPL_NOCACHE	disksim_hptrace.h	193;"	d
HPL_ORDWRI	disksim_hptrace.h	177;"	d
HPL_PFTIMEOUT	disksim_hptrace.h	182;"	d
HPL_PHYS	disksim_hptrace.h	170;"	d
HPL_PRIVATE	disksim_hptrace.h	180;"	d
HPL_RAW	disksim_hptrace.h	196;"	d
HPL_READ	disksim_hptrace.h	165;"	d
HPL_REWRITE	disksim_hptrace.h	178;"	d
HPL_SHORTIO	disksim_hptrace.h	138;"	d
HPL_SRT	hplcomb.c	67;"	d	file:
HPL_SUSPECTIO	disksim_hptrace.h	141;"	d
HPL_SYNC	disksim_hptrace.h	195;"	d
HPL_TEXTIO	disksim_hptrace.h	140;"	d
HPL_UNKNOWN	disksim_hptrace.h	137;"	d
HPL_WANTED	disksim_hptrace.h	172;"	d
HPL_WRITE	disksim_hptrace.h	164;"	d
HPL_WRITEV	disksim_hptrace.h	181;"	d
HPTRACE_H	disksim_hptrace.h	102;"	d
HYBRIDSTORE	disksim_logorg.h	111;"	d
IDEAL	disksim_logorg.h	107;"	d
IDLELOOP_EVENT	disksim_pfsim.h	115;"	d
INDEX_K	opagemap.c	25;"	d	file:
INDUCED	cache.h	31;"	d
INDUCED_FETCH_MISS	cache.h	34;"	d
INDUCED_HEAPIFY	cache.h	33;"	d
IND_BITS_SECT	nand.h	51;"	d
IND_F_SECT	nand.h	56;"	d
IND_MASK_SECT	nand.h	47;"	d
INIT_SEPTF_POS	syssim_driver2.c	2288;"	d	file:
INLINE	inline.h	38;"	d
INLINE	inline.h	40;"	d
INTDISTMAX	disksim_logorg.h	144;"	d
INTEND_EVENT	disksim_global.h	203;"	d
INTERFEREMAX	disksim_logorg.h	143;"	d
INTERLEAVED	disksim_bus.c	117;"	d	file:
INTR_EVENT	disksim_global.h	202;"	d
INV_BITS_PER_INT_MASK	disksim_global.h	153;"	d
IOACC_EVENT	disksim_pfsim.h	111;"	d
IODRIVER	disksim_ioface.h	113;"	d
IODRIVER	disksim_iosim.h	169;"	d
IODRIVER_BASE_COMPLETION_TIME	disksim_iodriver.h	127;"	d
IODRIVER_COMPLETION_RESPTODEV_TIME	disksim_iodriver.h	129;"	d
IODRIVER_COMPLETION_RESPTOREQ_TIME	disksim_iodriver.h	135;"	d
IODRIVER_COMPLETION_RESPTOSCHED_TIME	disksim_iodriver.h	130;"	d
IODRIVER_COMPLETION_RESPTOWAKEUP_TIME	disksim_iodriver.h	134;"	d
IODRIVER_COMPLETION_SCHEDTOEND_TIME	disksim_iodriver.h	131;"	d
IODRIVER_COMPLETION_SCHEDTOWAKEUP_TIME	disksim_iodriver.h	132;"	d
IODRIVER_COMPLETION_WAKEUPTOEND_TIME	disksim_iodriver.h	133;"	d
IODRIVER_IMMEDSCHED_TIME	disksim_iodriver.h	123;"	d
IODRIVER_READ_DISCONNECT_TIME	disksim_iodriver.h	125;"	d
IODRIVER_RECONNECT_TIME	disksim_iodriver.h	126;"	d
IODRIVER_TRACED_ACCESS_TIMES	disksim_iodriver.h	139;"	d
IODRIVER_TRACED_BOTH_TIMES	disksim_iodriver.h	141;"	d
IODRIVER_TRACED_QUEUE_TIMES	disksim_iodriver.h	140;"	d
IODRIVER_WRITE_DISCONNECT_TIME	disksim_iodriver.h	124;"	d
IOQUEUE_BASE	disksim_ioqueue.c	157;"	d	file:
IOQUEUE_CONCAT_BOTH	disksim_ioqueue.c	150;"	d	file:
IOQUEUE_CONCAT_READS	disksim_ioqueue.c	148;"	d	file:
IOQUEUE_CONCAT_WRITES	disksim_ioqueue.c	149;"	d	file:
IOQUEUE_PRIORITY	disksim_ioqueue.c	159;"	d	file:
IOQUEUE_SEQSTREAM_EITHER	disksim_ioqueue.c	153;"	d	file:
IOQUEUE_SEQSTREAM_READS	disksim_ioqueue.c	151;"	d	file:
IOQUEUE_SEQSTREAM_WRITES	disksim_ioqueue.c	152;"	d	file:
IOQUEUE_TIMEOUT	disksim_ioqueue.c	158;"	d	file:
IOREQ_EVENT	disksim_pfsim.h	110;"	d
IOSIM	disksim_ioface.h	112;"	d
IO_ACCESS_ARRIVE	disksim_iosim.h	124;"	d
IO_ACCESS_COMPLETE	disksim_iosim.h	127;"	d
IO_FLAG_PAGEIO	disksim_global.h	193;"	d
IO_INTERRUPT	disksim_global.h	217;"	d
IO_INTERRUPT_ARRIVE	disksim_iosim.h	125;"	d
IO_INTERRUPT_COMPLETE	disksim_iosim.h	128;"	d
IO_MAX_EVENT	disksim_global.h	205;"	d
IO_MIN_EVENT	disksim_global.h	204;"	d
IO_QLEN_MAXCHECK	disksim_iosim.h	143;"	d
IO_REQUEST_ARRIVE	disksim_ioface.h	108;"	d
IO_RESPOND_TO_DEVICE	disksim_iosim.h	126;"	d
IO_TRACE_REQUEST_START	disksim_iosim.h	142;"	d
IOwaiters	disksim_cachemem.c	/^   cache_event *IOwaiters;$/;"	m	struct:cache_def	file:
IPEAK	disksim_global.h	166;"	d
IS_SAME_BLK	nand.h	57;"	d
IS_SAME_PAGE	nand.h	58;"	d
InternalCallback	disksim_simos_interface.c	/^DiskSimInternalCallback *InternalCallback;$/;"	v
LATENCY_STAT	syssim_driver2.c	238;"	d	file:
LATENCY_WEIGHT	syssim_driver2.c	249;"	d	file:
LAYOUT_CYLSWITCHONSURF1	disksim_diskmap.h	130;"	d
LAYOUT_CYLSWITCHONSURF2	disksim_diskmap.h	132;"	d
LAYOUT_MAX	disksim_diskmap.h	136;"	d
LAYOUT_NORMAL	disksim_diskmap.h	129;"	d
LAYOUT_RAWFILE	disksim_diskmap.h	135;"	d
LAYOUT_SERPENTINE	disksim_diskmap.h	134;"	d
LB_SIZE_1024	nand.h	7;"	d
LB_SIZE_2048	nand.h	8;"	d
LB_SIZE_512	nand.h	6;"	d
LEAST_LATENCY_ALG	syssim_driver2.c	99;"	d	file:
LFU_ACCESS	cache.h	7;"	d
LFU_METRIC	cache.h	/^ double LFU_METRIC;  \/\/The lowest metric value gets evicted first ..$/;"	m	struct:flash_cache_line
LFU_NORMALIZED_RATIO	cache.h	10;"	d
LFU_READS	cache.h	8;"	d
LFU_WRITES	cache.h	9;"	d
LIMITED_FASTWRITE	disksim_disk.h	/^  LIMITED_FASTWRITE		= 1,$/;"	e	enum:__anon11
LINELEN	raw_layout.c	240;"	d	file:
LOCAL	disksim_global.h	195;"	d
LOGORG_PARITY_SEQGIVE	disksim_logorg.h	137;"	d
LRU_ACCESS	cache.h	11;"	d
LRU_READS	cache.h	12;"	d
LRU_WRITES	cache.h	13;"	d
LRU_at_seg_list_head	disksim_disk.h	/^   int LRU_at_seg_list_head;$/;"	m	struct:disk_info
LRU_at_seg_list_head	disksim_disk.h	542;"	d
LogMap	fast.c	/^struct LogMap{$/;"	s	file:
LogMap	fast.youkim.c	/^struct LogMap{$/;"	s	file:
LogMap	fast_bk.c	/^struct LogMap{$/;"	s	file:
LogMap	last.c	/^struct LogMap{$/;"	s	file:
MAPPED	disksim_global.h	189;"	d
MAP_ENTRIES_PER_PAGE	opagemap.h	52;"	d
MAP_ENTRIES_PER_PAGE	pagemap.h	50;"	d
MAP_GHOST	opagemap.h	10;"	d
MAP_GHOST	pagemap.h	11;"	d
MAP_GHOST_MAX_ENTRIES	ssd_interface.c	72;"	d	file:
MAP_GHOST_MAX_ENTRIES	ssd_interface_noopt.c	38;"	d	file:
MAP_GHOST_MAX_ENTRIES	ssd_interface_opt.c	41;"	d	file:
MAP_GHOST_NUM_ENTRIES	opagemap.h	/^int MAP_GHOST_NUM_ENTRIES;$/;"	v
MAP_GHOST_NUM_ENTRIES	pagemap.h	/^int MAP_GHOST_NUM_ENTRIES;$/;"	v
MAP_INVALID	opagemap.h	8;"	d
MAP_INVALID	pagemap.h	9;"	d
MAP_REAL	opagemap.h	9;"	d
MAP_REAL	pagemap.h	10;"	d
MAP_REAL_MAX_ENTRIES	ssd_interface.c	38;"	d	file:
MAP_REAL_MAX_ENTRIES	ssd_interface_noopt.c	22;"	d	file:
MAP_REAL_MAX_ENTRIES	ssd_interface_opt.c	25;"	d	file:
MAP_REAL_NUM_ENTRIES	opagemap.h	/^int MAP_REAL_NUM_ENTRIES;$/;"	v
MAP_REAL_NUM_ENTRIES	pagemap.h	/^int MAP_REAL_NUM_ENTRIES;$/;"	v
MAXCOPIES	disksim_logorg.h	138;"	d
MAXCPUS	disksim_pfsim.h	118;"	d
MAXCTLTYPE	disksim_ctlr.h	115;"	d
MAXDEFECTS	disksim_diskmap.h	108;"	d
MAXDEPTH	disksim_iosim.h	111;"	d
MAXDEVICES	disksim_iosim.h	110;"	d
MAXDISKS	disksim_disk.h	185;"	d
MAXINBUSES	disksim_iosim.h	112;"	d
MAXINT	disksim_global.h	138;"	d
MAXLOGORGS	disksim_iosim.h	115;"	d
MAXOUTBUSES	disksim_iosim.h	113;"	d
MAXSCHED	disksim_ioqueue.c	144;"	d	file:
MAXSECTORS	raw_layout.c	83;"	d	file:
MAXSLIPS	disksim_diskmap.h	107;"	d
MAXSLOTS	disksim_iosim.h	114;"	d
MAXSPARESCHEME	disksim_diskmap.h	124;"	d
MAXSTATS	disksim_disk.h	184;"	d
MAX_ALG	syssim_driver2.c	110;"	d	file:
MAX_ANGLE	syssim_driver2.c	231;"	d	file:
MAX_ASSGN_BLK_NUM	blockmap.c	14;"	d	file:
MAX_ASSGN_BLK_NUM	blockmap_aayush.c	14;"	d	file:
MAX_COUNT_WEIGHT	syssim_driver2.c	250;"	d	file:
MAX_CYL_DIST	syssim_driver2.c	1402;"	d	file:
MAX_FAIL	syssim_driver2.c	2289;"	d	file:
MAX_POINTS	rms.c	107;"	d	file:
MAX_QUEUE_LENGTH	disksim_logorg.c	116;"	d	file:
MAX_REQ	syssim_driver2.c	227;"	d	file:
MAX_SECTORS	syssim_driver2.c	232;"	d	file:
MAX_TIME	syssim_driver2.c	79;"	d	file:
MAX_TSPS	disksim_ioqueue.c	1474;"	d	file:
MEMS_BUS_INITIATE	disksim_iosim.h	152;"	d
MEMS_BUS_TRANSFER	disksim_iosim.h	153;"	d
MEMS_BUS_UPDATE	disksim_iosim.h	154;"	d
MEMS_MAX_EVENT	disksim_global.h	211;"	d
MEMS_MIN_EVENT	disksim_global.h	210;"	d
MEMS_SLED_DATA	disksim_iosim.h	150;"	d
MEMS_SLED_SCHEDULE	disksim_iosim.h	147;"	d
MEMS_SLED_SEEK	disksim_iosim.h	148;"	d
MEMS_SLED_SERVO	disksim_iosim.h	149;"	d
MEMS_SLED_UPDATE	disksim_iosim.h	151;"	d
MICRO	disksim_global.h	174;"	d
MICROMULT	syssim_driver2.c	229;"	d	file:
MILLI	disksim_global.h	173;"	d
MIN	fsim_types.h	28;"	d
MINCTLTYPE	disksim_ctlr.h	111;"	d
MINFRAGMENT	syssim_driver2.c	3784;"	d	file:
MINSCHED	disksim_ioqueue.c	116;"	d	file:
MIN_ALG	syssim_driver2.c	89;"	d	file:
MIN_CYL_DISTANCE	raw_layout.c	91;"	d	file:
MIN_ERASE	nand.c	/^int MIN_ERASE;$/;"	v
MIN_ERASE_BLK_NO	ssd_interface.c	/^int MIN_ERASE_BLK_NO = 0;$/;"	v
MSECS_PER_MIN	disksim_global.h	220;"	d
MSECperTICS	disksim_simos_interface.h	63;"	d
MSECtoTICS	disksim_simos_interface.c	/^unsigned long MSECtoTICS(double MSEC) {$/;"	f
MS_TO_SYSSIMTIME	syssim_driver.h	66;"	d
NAND_STATE_FREE	nand.h	20;"	d
NAND_STATE_INVALID	nand.h	21;"	d
NANO	disksim_global.h	175;"	d
NCR_ASCII	hplcomb.c	66;"	d	file:
NOTIMEOUT	disksim_ioqueue.c	173;"	d	file:
NOT_COMPLETE	disksim_orgface.h	107;"	d
NOVAL	raw_layout.c	93;"	d	file:
NO_FASTWRITE	disksim_disk.h	/^  NO_FASTWRITE			= 0,$/;"	e	enum:__anon11
NO_PRESEEK	disksim_disk.h	/^  NO_PRESEEK                     = 0,$/;"	e	enum:__anon10
NO_REDUN	disksim_logorg.h	115;"	d
NO_SPARING	disksim_diskmap.h	113;"	d
NULL_EVENT	disksim_global.h	199;"	d
NUMGENS	disksim_logorg.h	139;"	d
OFF_BITS_SECT	nand.h	50;"	d
OFF_F_SECT	nand.h	54;"	d
OFF_MASK_SECT	nand.h	46;"	d
OOB_READ	ssd_interface.h	78;"	d
OOB_READ_DELAY	ssd_interface.h	53;"	d
OOB_WRITE	ssd_interface.h	79;"	d
OOB_WRITE_DELAY	ssd_interface.h	54;"	d
ORIGINAL	cache.h	30;"	d
PAGE_BITS	nand.h	16;"	d
PAGE_BITS_IN_PAGE	nand.h	27;"	d
PAGE_MASK_IN_SECT	nand.h	24;"	d
PAGE_NO_PAGE	nand.h	41;"	d
PAGE_NO_SECT	nand.h	36;"	d
PAGE_NUM_PER_BLK	nand.h	11;"	d
PAGE_READ	ssd_interface.h	76;"	d
PAGE_SECT_BITS	nand.h	17;"	d
PAGE_SECT_MASK_IN_SECT	nand.h	25;"	d
PAGE_SECT_NO_SECT	nand.h	39;"	d
PAGE_SIZE_B	nand.h	30;"	d
PAGE_SIZE_KB	nand.h	31;"	d
PAGE_WRITE	ssd_interface.h	77;"	d
PARITY_DISK	disksim_logorg.h	117;"	d
PARITY_LEFT_ASYM	disksim_logorg.h	133;"	d
PARITY_LEFT_SYM	disksim_logorg.h	132;"	d
PARITY_RIGHT_ASYM	disksim_logorg.h	134;"	d
PARITY_RIGHT_SYM	disksim_logorg.h	135;"	d
PARITY_ROTATED	disksim_logorg.h	118;"	d
PARITY_TABLE	disksim_logorg.h	119;"	d
PASSTHRU_DELAY	disksim_ctlrdumb.c	110;"	d	file:
PENDING	disksim_ioqueue.c	164;"	d	file:
PERCENT	raw_layout.c	88;"	d	file:
PERIOD	syssim_driver2.c	228;"	d	file:
PF_BUF_WANTED	disksim_pfsim.h	123;"	d
PF_CSWITCH_TIME	disksim_pfsim.h	144;"	d
PF_IDLE_CHECK_DISPQ_TIME	disksim_pfsim.h	145;"	d
PF_INTER_CLOCK_TIME	disksim_pfsim.h	140;"	d
PF_INTER_LONG_CLOCKS	disksim_pfsim.h	141;"	d
PF_IO_WAKEUP_TIME	disksim_pfsim.h	146;"	d
PF_LONG_CLOCK_TIME	disksim_pfsim.h	142;"	d
PF_MAX_EVENT	disksim_global.h	201;"	d
PF_MIN_EVENT	disksim_global.h	200;"	d
PF_SHORT_CLOCK_TIME	disksim_pfsim.h	143;"	d
PF_SLEEP_FLAG	disksim_pfsim.h	120;"	d
PF_WAKED	disksim_pfsim.h	121;"	d
PGE_BITS_SECT	nand.h	49;"	d
PGE_F_SECT	nand.h	53;"	d
PGE_MASK_SECT	nand.h	45;"	d
PMT	fast.c	/^struct LogMap *PMT;     \/\/ page mapping table for log blocks$/;"	v	typeref:struct:LogMap
PMT	fast.youkim.c	/^struct LogMap *PMT;     \/\/ page mapping table for log blocks$/;"	v	typeref:struct:LogMap
PMT	fast_bk.c	/^struct LogMap *PMT;     \/\/ page mapping table for log blocks$/;"	v	typeref:struct:LogMap
PMT	last.c	/^struct LogMap *PMT;     \/\/ page mapping table for log blocks$/;"	v	typeref:struct:LogMap
PNI_F_SECT	nand.h	55;"	d
POSTGRES	disksim_global.h	167;"	d
PRESEEK_BEFORE_COMPLETION	disksim_disk.h	/^  PRESEEK_BEFORE_COMPLETION      = 2        \/* implies 1 as well *\/$/;"	e	enum:__anon10
PRESEEK_DURING_COMPLETION	disksim_disk.h	/^  PRESEEK_DURING_COMPLETION      = 1,$/;"	e	enum:__anon10
PRINTTRACESTATS	disksim_iosim.c	118;"	d	file:
PRINT_TRACEFILE_HEADER	disksim.c	126;"	d	file:
PRI_ASPCTF_OPT	disksim_ioqueue.c	137;"	d	file:
PRI_ASPTF_OPT	disksim_ioqueue.c	136;"	d	file:
PRI_VSCAN_LBN	disksim_ioqueue.c	135;"	d	file:
PROC_ONPROC	disksim_pfsim.h	136;"	d
PROC_RUN	disksim_pfsim.h	135;"	d
PROC_SLEEP	disksim_pfsim.h	134;"	d
PacketHeap	heap.h	/^}PacketHeap;$/;"	t	typeref:struct:__anon37
RAND48_ADD	disksim_rand48.c	84;"	d	file:
RAND48_MULT_0	disksim_rand48.c	81;"	d	file:
RAND48_MULT_1	disksim_rand48.c	82;"	d	file:
RAND48_MULT_2	disksim_rand48.c	83;"	d	file:
RAND48_SEED_0	disksim_rand48.c	78;"	d	file:
RAND48_SEED_1	disksim_rand48.c	79;"	d	file:
RAND48_SEED_2	disksim_rand48.c	80;"	d	file:
RANDOM	disksim_logorg.h	108;"	d
RAW	disksim_global.h	164;"	d
READ	cache.h	22;"	d
READ	disksim_global.h	184;"	d
READY_TO_GO	disksim_ioqueue.c	111;"	d	file:
READY_TO_TRANSFER	disksim_iosim.h	/^  READY_TO_TRANSFER	= -4$/;"	e	enum:__anon19
READ_AFTR_WRITE	disksim_global.h	190;"	d
READ_DATA_TRANSFER	disksim_ctlr.h	120;"	d
READ_DELAY	ssd_interface.h	23;"	d
REAL	cache.h	77;"	d
RECONNECT	disksim_iosim.h	/^  RECONNECT		= -2,$/;"	e	enum:__anon19
RECONNECTING	disksim_ctlr.h	124;"	d
REQUEST_PENDING	disksim_ctlr.h	125;"	d
RMS_INCR	rms.c	105;"	d	file:
Request	disksim_simos_interface.h	/^} Request;$/;"	t	typeref:struct:__anon32
Request	syssim_driver.h	/^} Request;$/;"	t	typeref:struct:__anon41
SATF_OPT	disksim_ioqueue.c	126;"	d	file:
SCHED_INIT	syssim_driver2.c	86;"	d	file:
SCHED_OUT_VALID	syssim_driver2.c	87;"	d	file:
SDF_APPROX	disksim_ioqueue.c	138;"	d	file:
SDF_EXACT	disksim_ioqueue.c	139;"	d	file:
SEARCH_COUNT_STAT	syssim_driver2.c	235;"	d	file:
SECONDS_PER_DAY	disksim_global.h	179;"	d
SECONDS_PER_HOUR	disksim_global.h	178;"	d
SECONDS_PER_MINUTE	disksim_global.h	177;"	d
SECTATEND_SPARING	disksim_diskmap.h	120;"	d
SECTOR	nand.h	42;"	d
SECTOR	syssim_driver.c	55;"	d	file:
SECTOR	syssim_driver2.c	115;"	d	file:
SECTPERCYL_SPARING	disksim_diskmap.h	115;"	d
SECTPERCYL_SPARING_ATFRONT	disksim_diskmap.h	118;"	d
SECTPERCYL_SPARING_ATFRONT_SLIPTOEND	disksim_diskmap.h	119;"	d
SECTPERCYL_SPARING_SLIPTOEND	disksim_diskmap.h	117;"	d
SECTPERRANGE_SPARING	disksim_diskmap.h	121;"	d
SECTPERTRACK_SPARING	disksim_diskmap.h	116;"	d
SECTSPERZONE_SPARING	disksim_diskmap.h	122;"	d
SECTSPERZONE_SPARING_SLIPTOEND	disksim_diskmap.h	123;"	d
SECT_BITS	nand.h	15;"	d
SECT_MASK_IN_SECT	nand.h	23;"	d
SECT_NO_SECT	nand.h	37;"	d
SECT_NUM_PER_BLK	nand.h	12;"	d
SECT_NUM_PER_PAGE	nand.h	10;"	d
SECT_SIZE_B	nand.h	13;"	d
SEEK_DIST_STAT	syssim_driver2.c	241;"	d	file:
SEEK_STAT	syssim_driver2.c	240;"	d	file:
SEG_OWNED	disksim_disk.h	156;"	d
SEPTF_ALG	syssim_driver2.c	93;"	d	file:
SEPTF_FRAGMENT_ALG	syssim_driver2.c	109;"	d	file:
SEPTF_TRACK_ALG	syssim_driver2.c	108;"	d	file:
SEQ	disksim_global.h	194;"	d
SHADOWED	disksim_logorg.h	116;"	d
SHADOW_PRIMARY	disksim_logorg.h	123;"	d
SHADOW_RANDOM	disksim_logorg.h	124;"	d
SHADOW_ROUNDROBIN	disksim_logorg.h	125;"	d
SHADOW_SHORTDIST	disksim_logorg.h	126;"	d
SHADOW_SHORTQUEUE	disksim_logorg.h	127;"	d
SHADOW_SHORTQUEUE2	disksim_logorg.h	128;"	d
SLEEP_EVENT	disksim_pfsim.h	108;"	d
SLOTPRIORITY_ARB	disksim_bus.c	123;"	d	file:
SPCTF_OPT	disksim_ioqueue.c	125;"	d	file:
SPTF_OPT	disksim_ioqueue.c	124;"	d	file:
SPTF_ROT_OPT	disksim_ioqueue.c	140;"	d	file:
SPTF_ROT_WEIGHT	disksim_ioqueue.c	141;"	d	file:
SPTF_SEEK_WEIGHT	disksim_ioqueue.c	142;"	d	file:
SSTF_ALG	syssim_driver2.c	92;"	d	file:
SSTF_CYL	disksim_ioqueue.c	123;"	d	file:
SSTF_LBN	disksim_ioqueue.c	120;"	d	file:
STANDALONE	disksim_iodriver.h	111;"	d
STAT_FILENAME	syssim_driver2.c	248;"	d	file:
STOP_SIM	disksim_global.h	208;"	d
STRIPED	disksim_logorg.h	109;"	d
STRMAX	syssim_driver2.c	117;"	d	file:
SUBCLOCK_INTERRUPT	disksim_global.h	216;"	d
SUPPORT_CHECKPOINTS	disksim_global.h	127;"	d
SYNCHRONOUS	disksim_global.h	191;"	d
SYNC_NUM	opagemap.h	/^static int SYNC_NUM;$/;"	v
SYNC_NUM	pagemap.h	/^static int SYNC_NUM;$/;"	v
SYNTHIO	disksim_interface.c	149;"	d	file:
SYNTHIO_EVENT	disksim_pfsim.h	114;"	d
SYNTHIO_EXPONENTIAL	disksim_synthio.c	111;"	d	file:
SYNTHIO_NORMAL	disksim_synthio.c	110;"	d	file:
SYNTHIO_OVERRIDE	disksim_pfface.h	106;"	d
SYNTHIO_PARETO	disksim_synthio.c	115;"	d	file:
SYNTHIO_POISSON	disksim_synthio.c	112;"	d	file:
SYNTHIO_TWOVALUE	disksim_synthio.c	113;"	d	file:
SYNTHIO_UNIFORM	disksim_synthio.c	109;"	d	file:
SYSORG	disksim_ioface.h	114;"	d
SYSSIMTIME_TO_MS	syssim_driver.h	65;"	d
Stat	syssim_driver.c	/^} Stat;$/;"	t	typeref:struct:__anon40	file:
Stat	syssim_driver2.c	/^} Stat;$/;"	t	typeref:struct:__anon39	file:
StaticAssert	disksim_global.h	234;"	d
SysTime	syssim_driver.h	/^typedef	double SysTime;		\/* system time in seconds.usec *\/$/;"	t
TAKE_FREE_TIME_STAT	syssim_driver2.c	244;"	d	file:
THRESHOLD	ssd_interface.c	732;"	d	file:
TICS	disksim_simos_interface.h	/^typedef uint64 TICS;$/;"	t
TICSperMSEC	disksim_simos_interface.h	62;"	d
TICStoMSEC	disksim_simos_interface.c	/^double TICStoMSEC(unsigned long TICS) {$/;"	f
TIMED_OUT	disksim_global.h	187;"	d
TIMER_EXPIRED	disksim_global.h	206;"	d
TIMESTAMP_LOGORG	disksim_iosim.h	141;"	d
TIME_CRITICAL	disksim_global.h	185;"	d
TIME_LIMITED	disksim_global.h	186;"	d
TOTAL_MAP_ENTRIES	opagemap.h	/^int TOTAL_MAP_ENTRIES; $/;"	v
TOTAL_MAP_ENTRIES	pagemap.h	/^int TOTAL_MAP_ENTRIES; $/;"	v
TOTAL_MAP_SIZE	heap.h	9;"	d
TRACEBATCHSIZE	syssim_driver2.c	234;"	d	file:
TRACEMAPPINGS	disksim_iosim.c	116;"	d	file:
TRACK_SPARING	disksim_diskmap.h	114;"	d
TRANSFER_STAT	syssim_driver2.c	239;"	d	file:
TRUE	disksim_global.h	146;"	d
TRUE	hplcomb.c	58;"	d	file:
TSPS	disksim_ioqueue.c	143;"	d	file:
TWOQUEUE	disksim_ioqueue.c	169;"	d	file:
UP	disksim_ctlr.h	129;"	d
VALIDATE	disksim_global.h	163;"	d
VSCAN_CYL	disksim_ioqueue.c	134;"	d	file:
VSCAN_LBN	disksim_ioqueue.c	133;"	d	file:
WAITING	disksim_ioqueue.c	163;"	d	file:
WAKEUP_EVENT	disksim_pfsim.h	109;"	d
WATF_OPT	disksim_ioqueue.c	129;"	d	file:
WEAR_LEVEL_THRESHOLD	nand.h	124;"	d
WORKLOAD_SIZE	ssd_interface.c	27;"	d	file:
WPCTF_OPT	disksim_ioqueue.c	128;"	d	file:
WPTF_OPT	disksim_ioqueue.c	127;"	d	file:
WRITE	cache.h	23;"	d
WRITE	disksim_global.h	183;"	d
WRITE_DATA_TRANSFER	disksim_ctlr.h	121;"	d
WRITE_DELAY	ssd_interface.h	36;"	d
_BIG_ENDIAN	disksim_global.h	155;"	d
_BIG_ENDIAN	hplcomb.c	61;"	d	file:
_BITSTRING_H_	disksim_bitstring.h	59;"	d
_DISKSIM_INLINE_H	inline.h	35;"	d
_LITTLE_ENDIAN	disksim_global.h	156;"	d
_LITTLE_ENDIAN	hplcomb.c	62;"	d	file:
__BLOCKMAP_H__	blockmap.h	2;"	d
__BLOCKMAP_H__	fast.h	2;"	d
__FSIM_TYPES_H__	fsim_types.h	2;"	d
__FTL_H__	ftl.h	2;"	d
__NAND_H__	nand.h	2;"	d
__OPAGEMAP_H__	opagemap.h	2;"	d
__PAGEMAP_H__	pagemap.h	2;"	d
_bit_byte	disksim_bitstring.h	72;"	d
_bit_mask	disksim_bitstring.h	76;"	d
_rand48_add	disksim_rand48.c	/^   unsigned short _rand48_add;$/;"	m	struct:rand48_info	file:
_rand48_add	disksim_rand48.c	98;"	d	file:
_rand48_mult	disksim_rand48.c	/^   unsigned short _rand48_mult[3];$/;"	m	struct:rand48_info	file:
_rand48_mult	disksim_rand48.c	97;"	d	file:
_rand48_seed	disksim_rand48.c	/^   unsigned short _rand48_seed[3];$/;"	m	struct:rand48_info	file:
_rand48_seed	disksim_rand48.c	96;"	d	file:
_s16	fsim_types.h	/^typedef int_least16_t _s16;$/;"	t
_s32	fsim_types.h	/^typedef int_least32_t _s32;$/;"	t
_s8	fsim_types.h	/^typedef int_least8_t _s8;$/;"	t
_u16	fsim_types.h	/^typedef uint_least16_t _u16;$/;"	t
_u32	fsim_types.h	/^typedef uint_least32_t _u32;$/;"	t
_u8	fsim_types.h	/^typedef uint_least8_t _u8;$/;"	t
aayush_flag1	ssd_interface.c	/^int aayush_flag1=0;$/;"	v
aayush_flag1	ssd_interface_noopt.c	/^int aayush_flag1=0;$/;"	v
aayush_flag1	ssd_interface_opt.c	/^int aayush_flag1=0;$/;"	v
accblkno	disksim_cachemem.c	/^   int accblkno;		\/* start blkno of waited for ioacc *\/$/;"	m	struct:cacheevent	file:
access	disksim_disk.h	/^   ioreq_event *access;                 \/* copy of the active ioreq$/;"	m	struct:seg
accessTime	disksim_simpleflash.c	/^static double accessTime = 0.0;$/;"	v	file:
accstats	disksim_ioqueue.c	/^   statgen	accstats;$/;"	m	struct:subq	file:
acctime	disksim_disk.h	/^  double          acctime;$/;"	m	struct:disk
acctime	disksim_simpledisk.c	/^   double acctime;$/;"	m	struct:simpledisk	file:
acctime	disksim_simpleflash.c	/^   double acctime;$/;"	m	struct:simpleflash	file:
acctimestats	disksim_disk.h	/^   statgen acctimestats;$/;"	m	struct:__anon12
acctimestats	disksim_simpledisk.c	/^   statgen acctimestats;$/;"	m	struct:__anon33	file:
acctimestats	disksim_simpleflash.c	/^   statgen acctimestats;$/;"	m	struct:__anon34	file:
accumulated_event_time	disksim_iotrace.h	/^   double accumulated_event_time;$/;"	m	struct:iotrace_info
accumulated_event_time	disksim_iotrace.h	120;"	d
active	disksim_pfsim.h	/^   int	active;$/;"	m	struct:process
active_requests	syssim_driver2.c	/^static int active_requests=0;$/;"	v	file:
actualblksperpart	disksim_logorg.h	/^   int    actualblksperpart;$/;"	m	struct:logorg
actualnumdisks	disksim_logorg.h	/^   int    actualnumdisks;$/;"	m	struct:logorg
add_driver	disksim_iodriver.c	/^static void add_driver(iodriver *d) {$/;"	f	file:
add_flash_cache_container	cache.c	/^struct flash_cache_container* add_flash_cache_container(struct flash_cache_container* ds, unsigned long arr_len,struct flash_cache_line* fcl)$/;"	f
add_induced_subevent_to_existing_event	cache.c	/^void add_induced_subevent_to_existing_event(int induced_code, int disk_id, int operation, unsigned long sectorid)$/;"	f
add_new_induced_subevent	cache.c	/^void add_new_induced_subevent(int induced_code, int disk_id, int operation, unsigned long sectorid)$/;"	f
add_statistics	syssim_driver.c	/^add_statistics(Stat *s, double x)$/;"	f
add_statistics	syssim_driver2.c	/^void add_statistics(Stat *s, double x)$/;"	f
addlisttoextraq	disksim.c	/^void addlisttoextraq (event **headptr)$/;"	f
addrbyparts	disksim_logorg.h	/^   int    addrbyparts;$/;"	m	struct:logorg
addtoextraq	disksim.c	/^INLINE void addtoextraq (event *temp)$/;"	f
addtointq	disksim.c	/^INLINE void addtointq (event *newint)$/;"	f
addtolatency	disksim_disk.h	/^   double addtolatency;$/;"	m	struct:disk_info
addtolatency	disksim_disk.h	532;"	d
age	heap.h	/^  int age;                     $/;"	m	struct:__anon36
age_lfu_metrics	cache.c	/^void age_lfu_metrics(double aging_fraction)$/;"	f
alg_args_s	syssim_driver2.c	/^typedef struct alg_args_s{$/;"	s	file:
alg_args_t	syssim_driver2.c	/^} alg_args_t;$/;"	t	typeref:struct:alg_args_s	file:
alg_count	syssim_driver2.c	/^static long alg_count=0;$/;"	v	file:
algorithm	syssim_driver2.c	/^static int algorithm = 0;$/;"	v	file:
aligned	disksim_logorg.h	/^   int          *aligned;$/;"	m	struct:__anon22
allocateextra	disksim.c	/^static void allocateextra ()$/;"	f	file:
allocatepolicy	disksim_cachemem.c	/^   int allocatepolicy;$/;"	m	struct:cache_def	file:
allocstop	disksim_cachemem.c	/^   int allocstop;$/;"	m	struct:cacheevent	file:
almostreadhits	disksim_disk.h	/^  int		almostreadhits;$/;"	m	struct:disk
amount_background	syssim_driver2.c	/^static int amount_background = 1000;$/;"	v	file:
angle	syssim_driver2.c	/^  float angle;$/;"	m	struct:bucket_s	file:
appendhits	disksim_disk.h	/^   int     appendhits;$/;"	m	struct:__anon12
arbtime	disksim_bus.c	/^  double        arbtime;$/;"	m	struct:bus	file:
arbtype	disksim_bus.c	/^  int           arbtype;$/;"	m	struct:bus	file:
arbwaitstats	disksim_bus.c	/^  statgen	arbwaitstats;$/;"	m	struct:bus	file:
arbwinner	disksim_bus.c	/^  bus_event    *arbwinner;$/;"	m	struct:bus	file:
area_firstcyl	syssim_driver2.c	/^static int area_firstcyl=1;$/;"	v	file:
area_lastcyl	syssim_driver2.c	/^static int area_lastcyl=2;$/;"	v	file:
arr_rate_term	disksim_logorg.c	/^double arr_rate_term;$/;"	v
arraydisk	disksim_logorg.h	/^   int    arraydisk;$/;"	m	struct:logorg
arrtime	disksim_logorg.h	/^   double arrtime;$/;"	m	struct:os
async	syssim_driver.h	/^        int async;$/;"	m	struct:__anon41
asyncreads	disksim_iotrace.h	/^   int asyncreads;$/;"	m	struct:iotrace_info
asyncreads	disksim_iotrace.h	99;"	d
asyncwrites	disksim_iotrace.h	/^   int asyncwrites;$/;"	m	struct:iotrace_info
asyncwrites	disksim_iotrace.h	100;"	d
atomsize	disksim_cachemem.c	/^   int atomsize;$/;"	m	struct:cache_def	file:
atomsperbit	disksim_cachemem.c	/^   int atomsperbit;$/;"	m	struct:cache_def	file:
ave_sectors	syssim_driver2.c	/^static int ave_sectors = 10;$/;"	v	file:
avg_temp	disksim_diskctlr2.c	/^  double avg_temp[MAX_DEVICE_NUM];$/;"	v
background	syssim_driver.h	/^        int background;$/;"	m	struct:__anon41
background_outstanding	syssim_driver2.c	/^static int background_outstanding[MAXDISKS];$/;"	v	file:
band	raw_layout.c	/^typedef band_t band;$/;"	t	file:
bandstart	disksim_disk.h	/^   int bandstart;$/;"	m	struct:disk_info
bandstart	disksim_disk.h	529;"	d
base	disksim_ioqueue.c	/^   subqueue	base;$/;"	m	struct:ioq	file:
base	disksim_synthio.c	/^   double base;$/;"	m	struct:dist	file:
basebigtime	disksim_iotrace.h	/^   int basebigtime;$/;"	m	struct:iotrace_info
basebigtime	disksim_iotrace.h	111;"	d
baseday	disksim_iotrace.h	/^   int baseday;$/;"	m	struct:iotrace_info
baseday	disksim_iotrace.h	109;"	d
baseday	hplcomb.c	/^int baseday = 0;$/;"	v
basehighshort	disksim_iotrace.h	/^   int basehighshort;$/;"	m	struct:iotrace_info
basehighshort	disksim_iotrace.h	104;"	d
basehighshort2	disksim_iotrace.h	/^   int basehighshort2;$/;"	m	struct:iotrace_info
basehighshort2	disksim_iotrace.h	105;"	d
basesecond	disksim_iotrace.h	/^   int basesecond;$/;"	m	struct:iotrace_info
basesecond	disksim_iotrace.h	110;"	d
basesecond	hplcomb.c	/^int basesecond = 0;$/;"	v
basesimtime	disksim_iotrace.h	/^   double basesimtime;$/;"	m	struct:iotrace_info
basesimtime	disksim_iotrace.h	113;"	d
basesmalltime	disksim_iotrace.h	/^   int basesmalltime;$/;"	m	struct:iotrace_info
basesmalltime	disksim_iotrace.h	112;"	d
baseyear	disksim_iotrace.h	/^   int baseyear;$/;"	m	struct:iotrace_info
baseyear	disksim_iotrace.h	108;"	d
baseyear	hplcomb.c	/^int baseyear = 0;$/;"	v
bcount	disksim_global.h	/^   int    bcount;$/;"	m	struct:ioreq_ev
bcount	disksim_logorg.h	/^   u_int  bcount;$/;"	m	struct:os
best_cyl	syssim_driver2.c	/^  unsigned short best_cyl;$/;"	m	struct:alg_args_s	file:
bigqueue	disksim_ioqueue.c	/^   struct ioq *	bigqueue;$/;"	m	struct:subq	typeref:struct:subq::ioq	file:
bit_alloc	disksim_bitstring.h	85;"	d
bit_clear	disksim_bitstring.h	101;"	d
bit_decl	disksim_bitstring.h	89;"	d
bit_ffc	disksim_bitstring.h	125;"	d
bit_ffs	disksim_bitstring.h	137;"	d
bit_nclear	disksim_bitstring.h	105;"	d
bit_nset	disksim_bitstring.h	115;"	d
bit_set	disksim_bitstring.h	97;"	d
bit_test	disksim_bitstring.h	93;"	d
bitmap	syssim_driver2.c	/^static unsigned int ****bitmap;$/;"	v	file:
bitstr_size	disksim_bitstring.h	81;"	d
bitstr_t	disksim_bitstring.h	/^typedef	unsigned char bitstr_t;$/;"	t
blk_state	nand.h	/^struct blk_state {$/;"	s
blk_t	fsim_types.h	/^typedef uint_fast32_t blk_t;$/;"	t
blkno	disksim_global.h	/^   int    blkno;$/;"	m	struct:ioreq_ev
blkno	disksim_ioqueue.c	/^   int       blkno;$/;"	m	struct:iob	file:
blkno	disksim_logorg.h	/^   int    blkno;$/;"	m	struct:__anon24
blkno	disksim_logorg.h	/^   int    blkno;$/;"	m	struct:dep
blkno	disksim_logorg.h	/^   u_int  blkno;$/;"	m	struct:os
blkno	syssim_driver.h	/^        unsigned long blkno;$/;"	m	struct:__anon41
blksdone	disksim_disk.h	/^  int	       blksdone;$/;"	m	struct:disk
blksperdisk	disksim_synthio.c	/^   int            blksperdisk;$/;"	m	struct:gen	file:
blksperpart	disksim_logorg.h	/^   int    blksperpart;$/;"	m	struct:logorg
blktranstime	disksim_ctlr.h	/^   double	blktranstime;$/;"	m	struct:controller
blktranstime	disksim_disk.h	/^  double       blktranstime;$/;"	m	struct:disk
blktranstime	disksim_simpledisk.c	/^   double blktranstime;$/;"	m	struct:simpledisk	file:
blktranstime	disksim_simpleflash.c	/^   double blktranstime;$/;"	m	struct:simpleflash	file:
block_dead_flag	ssd_interface.h	/^int block_dead_flag[20000];$/;"	v
block_er_flag	ssd_interface.h	/^int block_er_flag[20000];$/;"	v
block_num	disksim_simos_interface.h	/^  unsigned long block_num;$/;"	m	struct:__anon32
block_s	syssim_driver2.c	/^typedef struct block_s {$/;"	s	file:
block_t	syssim_driver2.c	/^} block_t;$/;"	t	typeref:struct:block_s	file:
blocked	disksim_logorg.h	/^   int          *blocked;$/;"	m	struct:__anon22
blockmap	blockmap.c	/^static struct blockmap_entry *blockmap;$/;"	v	typeref:struct:blockmap_entry	file:
blockmap	blockmap_aayush.c	/^static struct blockmap_entry *blockmap;$/;"	v	typeref:struct:blockmap_entry	file:
blockmap_entry	blockmap.c	/^struct blockmap_entry $/;"	s	file:
blockmap_entry	blockmap_aayush.c	/^struct blockmap_entry $/;"	s	file:
blockmap_num	blockmap.c	/^static sect_t blockmap_num;$/;"	v	file:
blockmap_num	blockmap_aayush.c	/^static sect_t blockmap_num;$/;"	v	file:
blocksize	disksim_synthio.c	/^   int            blocksize;$/;"	m	struct:gen	file:
bm_end	blockmap.c	/^void bm_end()$/;"	f
bm_end	blockmap_aayush.c	/^void bm_end()$/;"	f
bm_init	blockmap.c	/^int bm_init(_u32 blk_num,  blk_t extra_num)$/;"	f
bm_init	blockmap_aayush.c	/^int bm_init(_u32 blk_num,  blk_t extra_num)$/;"	f
bm_operation	blockmap.c	/^struct ftl_operation bm_operation = {$/;"	v	typeref:struct:ftl_operation
bm_operation	blockmap_aayush.c	/^struct ftl_operation bm_operation = {$/;"	v	typeref:struct:ftl_operation
bm_read	blockmap.c	/^size_t bm_read(sect_t lsn, sect_t size, int mapdir_flag)$/;"	f
bm_read	blockmap_aayush.c	/^size_t bm_read(sect_t lsn, sect_t size)$/;"	f
bm_setup	blockmap.c	/^struct ftl_operation * bm_setup()$/;"	f
bm_setup	blockmap_aayush.c	/^struct ftl_operation * bm_setup()$/;"	f
bm_write	blockmap.c	/^size_t bm_write(sect_t lsn, sect_t size, int mapdir_flag)$/;"	f
bm_write	blockmap_aayush.c	/^size_t bm_write(sect_t lsn, sect_t size)$/;"	f
break_point	nand.c	/^void break_point()$/;"	f
bucket_s	syssim_driver2.c	/^typedef struct bucket_s {$/;"	s	file:
bucket_t	syssim_driver2.c	/^} bucket_t;$/;"	t	typeref:struct:bucket_s	file:
buf	disksim_global.h	/^   void  *buf;$/;"	m	struct:ioreq_ev
buf	disksim_logorg.h	/^   void  *buf;$/;"	m	struct:os
buffer_partial_servtime	disksim_disk.h	/^   double buffer_partial_servtime;$/;"	m	struct:disk_info
buffer_partial_servtime	disksim_disk.h	547;"	d
buffer_whole_servtime	disksim_disk.h	/^   double buffer_whole_servtime;$/;"	m	struct:disk_info
buffer_whole_servtime	disksim_disk.h	549;"	d
bufferspace	disksim_cachedev.c	/^   int bufferspace;$/;"	m	struct:cache_def	file:
bus	disksim_bus.c	/^typedef struct bus {$/;"	s	file:
bus	disksim_bus.c	/^} bus;$/;"	t	typeref:struct:bus	file:
bus_arbitrate_for_ownership	disksim_bus.c	/^static bus_event * bus_arbitrate_for_ownership(bus *currbus)$/;"	f	file:
bus_cleanstats	disksim_bus.c	/^void bus_cleanstats()$/;"	f
bus_copy	disksim_bus.c	/^bus *bus_copy(bus *orig) {$/;"	f
bus_delay	disksim_bus.c	/^void bus_delay(int busno, int devtype, int devno, double delay, ioreq_event *curr)$/;"	f
bus_delay_complete	disksim_device.h	/^  void    (*bus_delay_complete)(int devno, $/;"	m	struct:device_header
bus_deliver_event	disksim_bus.c	/^void bus_deliver_event(int busno, int slotno, ioreq_event *curr)$/;"	f
bus_ev	disksim_bus.c	/^typedef struct bus_ev {$/;"	s	file:
bus_event	disksim_bus.c	/^} bus_event;$/;"	t	typeref:struct:bus_ev	file:
bus_event_arrive	disksim_bus.c	/^void bus_event_arrive(ioreq_event *ptr)$/;"	f
bus_fifo_arbitration	disksim_bus.c	/^static bus_event * bus_fifo_arbitration(bus *currbus)$/;"	f	file:
bus_get_controller_slot	disksim_bus.c	/^int bus_get_controller_slot (int busno, int ctlno)$/;"	f
bus_get_data_transfered	disksim_bus.c	/^int bus_get_data_transfered(ioreq_event *curr, int depth)$/;"	f
bus_get_transfer_time	disksim_bus.c	/^double bus_get_transfer_time(int busno, int bcount, int read)$/;"	f
bus_initialize	disksim_bus.c	/^void bus_initialize()$/;"	f
bus_next	disksim_disk.h	/^   struct diskreq_t    *bus_next;$/;"	m	struct:diskreq_t	typeref:struct:diskreq_t::diskreq_t
bus_ownership_get	disksim_bus.c	/^int bus_ownership_get(int busno, int slotno, ioreq_event *curr)$/;"	f
bus_ownership_grant	disksim_device.h	/^  void    (*bus_ownership_grant)(int devno, $/;"	m	struct:device_header
bus_ownership_release	disksim_bus.c	/^void bus_ownership_release(int busno)$/;"	f
bus_printarbwaitstats	disksim_bus.c	/^   int bus_printarbwaitstats;$/;"	m	struct:businfo	file:
bus_printidlestats	disksim_bus.c	/^   int bus_printidlestats;$/;"	m	struct:businfo	file:
bus_printstats	disksim_bus.c	/^void bus_printstats()$/;"	f
bus_remove_from_arbitration	disksim_bus.c	/^void bus_remove_from_arbitration(int busno, ioreq_event *curr)$/;"	f
bus_resetstats	disksim_bus.c	/^void bus_resetstats()$/;"	f
bus_set_depths	disksim_bus.c	/^void bus_set_depths()$/;"	f
bus_set_to_zero_depth	disksim_bus.c	/^void bus_set_to_zero_depth (int busno)$/;"	f
bus_setcallbacks	disksim_bus.c	/^void bus_setcallbacks ()$/;"	f
bus_slotpriority_arbitration	disksim_bus.c	/^static bus_event * bus_slotpriority_arbitration(bus *currbus)$/;"	f	file:
bus_transaction_latency	disksim_simpledisk.c	/^   double bus_transaction_latency;$/;"	m	struct:simpledisk	file:
bus_transaction_latency	disksim_simpleflash.c	/^   double bus_transaction_latency;$/;"	m	struct:simpleflash	file:
buses	disksim_bus.c	/^   struct bus **buses;$/;"	m	struct:businfo	typeref:struct:businfo::bus	file:
buses_len	disksim_bus.c	/^   int buses_len; \/* allocated size of buses array *\/$/;"	m	struct:businfo	file:
busidlestats	disksim_bus.c	/^  statgen	busidlestats;$/;"	m	struct:bus	file:
businfo	disksim_bus.c	/^typedef struct businfo {$/;"	s	file:
businfo	disksim_global.h	/^   struct businfo *businfo;$/;"	m	struct:disksim	typeref:struct:disksim::businfo
businfo_t	disksim_bus.c	/^} businfo_t;$/;"	t	typeref:struct:businfo	file:
busno	disksim_bus.c	/^   int busno;$/;"	m	struct:bus_ev	file:
busno	disksim_cachemem.c	/^   int busno;$/;"	m	struct:cacheatom	file:
busno	disksim_global.h	/^   u_int  busno;$/;"	m	struct:ioreq_ev
busno	disksim_logorg.h	/^   u_int  busno;$/;"	m	struct:os
busowned	disksim_disk.h	/^  int	       busowned;$/;"	m	struct:disk
busowned	disksim_simpledisk.c	/^   int busowned;$/;"	m	struct:simpledisk	file:
busowned	disksim_simpleflash.c	/^   int busowned;$/;"	m	struct:simpleflash	file:
buspath	disksim_iosim.h	/^   intchar      buspath;$/;"	m	struct:__anon20
buspath	disksim_iosim.h	/^   intchar      buspath;$/;"	m	struct:__anon21
buswait	disksim_ctlr.h	/^   ioreq_event *buswait;$/;"	m	struct:controller
buswait	disksim_disk.h	/^  ioreq_event *buswait;$/;"	m	struct:disk
buswait	disksim_simpledisk.c	/^   ioreq_event *buswait;$/;"	m	struct:simpledisk	file:
buswait	disksim_simpleflash.c	/^   ioreq_event *buswait;$/;"	m	struct:simpleflash	file:
busy	disksim_disk.h	/^  int           busy;$/;"	m	struct:disk
busy	disksim_iosim.h	/^   int          busy;$/;"	m	struct:__anon21
byte	disksim_global.h	/^   char		byte[4];$/;"	m	union:__anon13
byte	hplcomb.c	/^   char		byte[4];$/;"	m	union:__anon38	file:
bytecount	disksim_simos_interface.h	/^  int bytecount;$/;"	m	struct:__anon32
bytecount	syssim_driver.h	/^        int bytecount;$/;"	m	struct:__anon41
bzero	disksim_global.h	431;"	d
cache	disksim_ctlr.h	/^   struct cache_def *cache;$/;"	m	struct:controller	typeref:struct:controller::cache_def
cache_access	disksim_cachemem.c	/^static void cache_access (cache_def *cache, cache_atom *line)$/;"	f	file:
cache_add_to_lockstruct	disksim_cachemem.c	/^static void cache_add_to_lockstruct (struct cachelockw **head, void *identifier)$/;"	f	file:
cache_add_to_lrulist	disksim_cachemem.c	/^static void cache_add_to_lrulist (cache_mapentry *map, $/;"	f	file:
cache_age	opagemap.h	/^  int  cache_age;$/;"	m	struct:opm_entry
cache_age	pagemap.h	/^  int  cache_age;$/;"	m	struct:pm_entry
cache_algorithm	cache.c	/^int cache_algorithm = LRU_ACCESS;$/;"	v
cache_allocate_space	disksim_cachemem.c	/^static cache_event * cache_allocate_space (cache_def *cache, int lbn, int size, cache_event *rwdesc)$/;"	f	file:
cache_allocate_space_continue	disksim_cachemem.c	/^static cache_event *cache_allocate_space_continue (cache_def *cache, cache_event *allocdesc)$/;"	f	file:
cache_arr	ssd_interface.c	/^int cache_arr[CACHE_MAX_ENTRIES];$/;"	v
cache_arr	ssd_interface_noopt.c	/^int cache_arr[CACHE_MAX_ENTRIES];$/;"	v
cache_arr	ssd_interface_opt.c	/^int cache_arr[CACHE_MAX_ENTRIES];$/;"	v
cache_atom	disksim_cachemem.c	/^} cache_atom;$/;"	t	typeref:struct:cacheatom	file:
cache_atom_islocked	disksim_cachemem.c	/^static int cache_atom_islocked (cache_def *cache, cache_atom *target)$/;"	f	file:
cache_atom_iswritelocked	disksim_cachemem.c	/^static int cache_atom_iswritelocked (cache_def *cache, cache_atom *target)$/;"	f	file:
cache_cleanstats	disksim_cache.c	/^void cache_cleanstats (struct cache_def *cache)$/;"	f
cache_cleanup_flushdesc	disksim_cachemem.c	/^static void cache_cleanup_flushdesc (cache_event *flushdesc)$/;"	f	file:
cache_concatok	disksim_cachemem.c	/^static int cache_concatok (void *concatokparam, int blkno1, int bcount1, int blkno2, int bcount2)$/;"	f	file:
cache_copy	disksim_cache.c	/^struct cache_def * cache_copy (struct cache_def *cache)$/;"	f
cache_count_dirty_atoms	disksim_cachemem.c	/^static int cache_count_dirty_atoms (cache_def *cache)$/;"	f	file:
cache_def	disksim_cachedev.c	/^typedef struct cache_def {$/;"	s	file:
cache_def	disksim_cachedev.c	/^} cache_def;$/;"	t	typeref:struct:cache_def	file:
cache_def	disksim_cachemem.c	/^typedef struct cache_def {$/;"	s	file:
cache_def	disksim_cachemem.c	/^} cache_def;$/;"	t	typeref:struct:cache_def	file:
cache_devno	disksim_cachedev.c	/^   int cache_devno;				\/* device used for cache *\/$/;"	m	struct:cache_def	file:
cache_disk_access_complete	disksim_cache.c	/^struct cacheevent *cache_disk_access_complete (struct cache_def *cache, ioreq_event *curr)$/;"	f
cache_empty_donefunc	disksim_cachemem.c	/^static void cache_empty_donefunc (void *doneparam, ioreq_event *req)$/;"	f	file:
cache_event	disksim_cachedev.c	/^} cache_event;$/;"	t	typeref:struct:cacheevent	file:
cache_event	disksim_cachemem.c	/^} cache_event;$/;"	t	typeref:struct:cacheevent	file:
cache_find_atom	disksim_cachemem.c	/^static cache_atom * cache_find_atom (cache_def *cache, int devno, int lbn)$/;"	f	file:
cache_flush_cluster	disksim_cachemem.c	/^static int cache_flush_cluster (cache_def *cache, int devno, int blkno, int linecnt, int dir)$/;"	f	file:
cache_free_block_clean	disksim_cache.c	/^void cache_free_block_clean (struct cache_def *cache, ioreq_event *req)$/;"	f
cache_free_block_dirty	disksim_cache.c	/^int cache_free_block_dirty (struct cache_def *cache, ioreq_event *req, void (**donefunc)(void *, ioreq_event *), void *doneparam)$/;"	f
cache_free_read_lock	disksim_cachemem.c	/^static int cache_free_read_lock (cache_def *cache, cache_atom *target, ioreq_event *owner)$/;"	f	file:
cache_free_write_lock	disksim_cachemem.c	/^static int cache_free_write_lock (cache_def *cache, cache_atom *target, ioreq_event *owner)$/;"	f	file:
cache_get_block	disksim_cache.c	/^int cache_get_block (struct cache_def *cache, ioreq_event *req, void (**donefunc)(void *, ioreq_event *), void *doneparam)$/;"	f
cache_get_flushdesc	disksim_cachemem.c	/^static cache_event *cache_get_flushdesc()$/;"	f	file:
cache_get_free_atom	disksim_cachemem.c	/^static int cache_get_free_atom (cache_def *cache, int lbn, cache_atom **ret, cache_event *allocdesc)$/;"	f	file:
cache_get_maxreqsize	disksim_cache.c	/^int cache_get_maxreqsize (struct cache_def *cache)$/;"	f
cache_get_read_lock	disksim_cachemem.c	/^static int cache_get_read_lock (cache_def *cache, cache_atom *target, cache_event *rwdesc)$/;"	f	file:
cache_get_read_lock_range	disksim_cachemem.c	/^static void cache_get_read_lock_range (cache_def *cache, int start, int end, cache_atom *startatom, cache_event *waiter)$/;"	f	file:
cache_get_replace_startpoint	disksim_cachemem.c	/^static cache_atom *cache_get_replace_startpoint (cache_def *cache, int set)$/;"	f	file:
cache_get_rw_lock	disksim_cachemem.c	/^static int cache_get_rw_lock (cache_def *cache, int locktype, cache_event *rwdesc, cache_atom *line, int i, int stop)$/;"	f	file:
cache_get_write_lock	disksim_cachemem.c	/^static int cache_get_write_lock (cache_def *cache, cache_atom *target, cache_event *rwdesc)$/;"	f	file:
cache_hit	pagemap.h	/^int cache_hit;$/;"	v
cache_hit	ssd_interface.c	/^int cache_hit, rqst_cnt;$/;"	v
cache_idletime_detected	disksim_cachemem.c	/^static void cache_idletime_detected (void *idleworkparam, int idledevno)$/;"	f	file:
cache_initialize	disksim_cache.c	/^void cache_initialize (struct cache_def *cache, $/;"	f
cache_initiate_dirty_block_flush	disksim_cachemem.c	/^static int cache_initiate_dirty_block_flush (cache_def *cache, cache_atom *dirtyline, cache_event *allocdesc)$/;"	f	file:
cache_insert_new_into_hash	disksim_cachemem.c	/^static void cache_insert_new_into_hash (cache_def *cache, cache_atom *new)$/;"	f	file:
cache_issue_fillreq	disksim_cachemem.c	/^static int cache_issue_fillreq (cache_def *cache, int start, int end, cache_event *rwdesc, int prefetchtype)$/;"	f	file:
cache_issue_flushreq	disksim_cachemem.c	/^static int cache_issue_flushreq (cache_def *cache, int start, int end, cache_atom *startatom, cache_event *waiter)$/;"	f	file:
cache_line_size	cache.c	/^int cache_line_size = 16;$/;"	v
cache_lock_free	disksim_cachemem.c	/^static void cache_lock_free (cache_def *cache, cache_atom *target)$/;"	f	file:
cache_lockholders	disksim_cachemem.c	/^} cache_lockholders;$/;"	t	typeref:struct:cachelockh	file:
cache_lockwaiters	disksim_cachemem.c	/^} cache_lockwaiters;$/;"	t	typeref:struct:cachelockw	file:
cache_mapentry	disksim_cachemem.c	/^} cache_mapentry;$/;"	t	typeref:struct:__anon4	file:
cache_max	ssd_interface.c	/^int cache_max = 0;$/;"	v
cache_max	ssd_interface_noopt.c	/^int cache_max = 0;$/;"	v
cache_max	ssd_interface_opt.c	/^int cache_max = 0;$/;"	v
cache_min	ssd_interface.c	/^int cache_min = -1;$/;"	v
cache_min	ssd_interface_noopt.c	/^int cache_min = -1;$/;"	v
cache_min	ssd_interface_opt.c	/^int cache_min = -1;$/;"	v
cache_periodic_flush	disksim_cachemem.c	/^static void cache_periodic_flush (timer_event *timereq)$/;"	f	file:
cache_printstats	disksim_cache.c	/^void cache_printstats (struct cache_def *cache, char *prefix)$/;"	f
cache_read_continue	disksim_cachemem.c	/^static int cache_read_continue (cache_def *cache, cache_event *readdesc)$/;"	f	file:
cache_remove_entry_from_hash	disksim_cachemem.c	/^static void cache_remove_entry_from_hash (cache_def *cache, cache_atom *old)$/;"	f	file:
cache_remove_from_lrulist	disksim_cachemem.c	/^static void cache_remove_from_lrulist (cache_mapentry *map, cache_atom *line, int segnum)$/;"	f	file:
cache_replace	disksim_cachemem.c	/^static int cache_replace (cache_def *cache, int set, cache_event *allocdesc)$/;"	f	file:
cache_replace_waitforline	disksim_cachemem.c	/^static void cache_replace_waitforline (cache_def *cache, cache_event *allocdesc)$/;"	f	file:
cache_resetstats	disksim_cache.c	/^void cache_resetstats (struct cache_def *cache)$/;"	f
cache_setcallbacks	disksim_cache.c	/^void cache_setcallbacks ()$/;"	f
cache_stats	disksim_cachedev.c	/^} cache_stats;$/;"	t	typeref:struct:__anon2	file:
cache_stats	disksim_cachemem.c	/^} cache_stats;$/;"	t	typeref:struct:__anon3	file:
cache_status	opagemap.h	/^  int  cache_status;$/;"	m	struct:opm_entry
cache_status	pagemap.h	/^  int  cache_status;$/;"	m	struct:pm_entry
cache_sync	disksim_cache.c	/^int cache_sync (struct cache_def *cache)$/;"	f
cache_unlock_attached_prefetch	disksim_cachemem.c	/^static void cache_unlock_attached_prefetch (cache_def *cache, cache_event *rwdesc)$/;"	f	file:
cache_unmap_line	disksim_cachemem.c	/^static void cache_unmap_line (cache_def *cache, cache_atom *line, int set)$/;"	f	file:
cache_waitfor_IO	disksim_cachemem.c	/^static void cache_waitfor_IO (cache_def *cache, int waitcnt, cache_event *cachereq, ioreq_event *ioacc)$/;"	f	file:
cache_wakeup_complete	disksim_cache.c	/^void cache_wakeup_complete (struct cache_def *cache, struct cacheevent *desc)$/;"	f
cache_write_continue	disksim_cachemem.c	/^static int cache_write_continue (cache_def *cache, cache_event *writedesc)$/;"	f	file:
cache_write_line_by_line	disksim_cachemem.c	/^static void cache_write_line_by_line (cache_def *cache, ioreq_event *flushreq, cache_event *writedesc, int reqdone)$/;"	f	file:
cacheatom	disksim_cachemem.c	/^typedef struct cacheatom {$/;"	s	file:
cachedev_add_ongoing_request	disksim_cachedev.c	/^static void cachedev_add_ongoing_request (cache_def *cache, cache_event *cachereq)$/;"	f	file:
cachedev_cleanstats	disksim_cachedev.c	/^void cachedev_cleanstats (cache_def *cache)$/;"	f
cachedev_clearbits	disksim_cachedev.c	/^static void cachedev_clearbits (bitstr_t *bitmap, ioreq_event *req)$/;"	f	file:
cachedev_copy	disksim_cachedev.c	/^cache_def * cachedev_copy (cache_def *cache)$/;"	f
cachedev_count_dirty_blocks	disksim_cachedev.c	/^static int cachedev_count_dirty_blocks (cache_def *cache)$/;"	f	file:
cachedev_disk_access_complete	disksim_cachedev.c	/^struct cacheevent *cachedev_disk_access_complete (cache_def *cache, ioreq_event *curr)$/;"	f
cachedev_empty_donefunc	disksim_cachedev.c	/^static void cachedev_empty_donefunc (void *doneparam, ioreq_event *req)$/;"	f	file:
cachedev_find_dirty_cache_blocks	disksim_cachedev.c	/^static int cachedev_find_dirty_cache_blocks (cache_def *cache, int *blknoPtr, int *bcountPtr)$/;"	f	file:
cachedev_find_ongoing_request	disksim_cachedev.c	/^static cache_event * cachedev_find_ongoing_request (cache_def *cache, ioreq_event *req)$/;"	f	file:
cachedev_free_block_clean	disksim_cachedev.c	/^void cachedev_free_block_clean (cache_def *cache, ioreq_event *req)$/;"	f
cachedev_free_block_dirty	disksim_cachedev.c	/^int cachedev_free_block_dirty (cache_def *cache, ioreq_event *req, void (**donefunc)(void *, ioreq_event *), void *doneparam)$/;"	f
cachedev_get_block	disksim_cachedev.c	/^int cachedev_get_block (cache_def *cache, ioreq_event *req, void (**donefunc)(void *, ioreq_event *), void *doneparam)$/;"	f
cachedev_get_cachetype	disksim_cachedev.c	/^int cachedev_get_cachetype (cache_def *cache)$/;"	f
cachedev_get_maxreqsize	disksim_cachedev.c	/^int cachedev_get_maxreqsize (cache_def *cache)$/;"	f
cachedev_idlework_callback	disksim_cachedev.c	/^static void cachedev_idlework_callback (void *idleworkparam, int idledevno)$/;"	f	file:
cachedev_initialize	disksim_cachedev.c	/^void cachedev_initialize (cache_def *cache, $/;"	f
cachedev_isreadhit	disksim_cachedev.c	/^static int cachedev_isreadhit (cache_def *cache, ioreq_event *req)$/;"	f	file:
cachedev_iswritehit	disksim_cachedev.c	/^static int cachedev_iswritehit (cache_def *cache, ioreq_event *req)$/;"	f	file:
cachedev_periodic_callback	disksim_cachedev.c	/^static void cachedev_periodic_callback (timer_event *timereq)$/;"	f	file:
cachedev_printstats	disksim_cachedev.c	/^void cachedev_printstats (cache_def *cache, char *prefix)$/;"	f
cachedev_remove_ongoing_request	disksim_cachedev.c	/^static void cachedev_remove_ongoing_request (cache_def *cache, cache_event *cachereq)$/;"	f	file:
cachedev_resetstats	disksim_cachedev.c	/^void cachedev_resetstats (cache_def *cache)$/;"	f
cachedev_setbits	disksim_cachedev.c	/^static void cachedev_setbits (bitstr_t *bitmap, ioreq_event *req)$/;"	f	file:
cachedev_setcallbacks	disksim_cachedev.c	/^void cachedev_setcallbacks ()$/;"	f
cachedev_sync	disksim_cachedev.c	/^int cachedev_sync (cache_def *cache)$/;"	f
cachedev_wakeup_complete	disksim_cachedev.c	/^void cachedev_wakeup_complete (cache_def *cache, cache_event *desc)$/;"	f
cacheevent	disksim_cachedev.c	/^typedef struct cacheevent {$/;"	s	file:
cacheevent	disksim_cachemem.c	/^typedef struct cacheevent {$/;"	s	file:
cachelockh	disksim_cachemem.c	/^typedef struct cachelockh {$/;"	s	file:
cachelockw	disksim_cachemem.c	/^typedef struct cachelockw {$/;"	s	file:
cachemem_cleanstats	disksim_cachemem.c	/^void cachemem_cleanstats (cache_def *cache)$/;"	f
cachemem_copy	disksim_cachemem.c	/^cache_def * cachemem_copy (cache_def *cache)$/;"	f
cachemem_disk_access_complete	disksim_cachemem.c	/^struct cacheevent *cachemem_disk_access_complete (cache_def *cache, ioreq_event *curr)$/;"	f
cachemem_free_block_clean	disksim_cachemem.c	/^void cachemem_free_block_clean (cache_def *cache, ioreq_event *req)$/;"	f
cachemem_free_block_dirty	disksim_cachemem.c	/^int cachemem_free_block_dirty (cache_def *cache, ioreq_event *req, void (**donefunc)(void *, ioreq_event *), void *doneparam)$/;"	f
cachemem_get_block	disksim_cachemem.c	/^int cachemem_get_block (cache_def *cache, ioreq_event *req, void (**donefunc)(void *, ioreq_event *), void *doneparam)$/;"	f
cachemem_get_cachetype	disksim_cachemem.c	/^int cachemem_get_cachetype (cache_def *cache)$/;"	f
cachemem_get_maxreqsize	disksim_cachemem.c	/^int cachemem_get_maxreqsize (cache_def *cache)$/;"	f
cachemem_initialize	disksim_cachemem.c	/^void cachemem_initialize (cache_def *cache, void (**issuefunc)(void *,ioreq_event *), void *issueparam, struct ioq * (**queuefind)(void *,int), void *queuefindparam, void (**wakeupfunc)(void *,struct cacheevent *), void *wakeupparam, int numdevs)$/;"	f
cachemem_printstats	disksim_cachemem.c	/^void cachemem_printstats (cache_def *cache, char *prefix)$/;"	f
cachemem_resetstats	disksim_cachemem.c	/^void cachemem_resetstats (cache_def *cache)$/;"	f
cachemem_setcallbacks	disksim_cachemem.c	/^void cachemem_setcallbacks ()$/;"	f
cachemem_setup_segs	disksim_cachemem.c	/^void cachemem_setup_segs(cache_def *result, struct lp_list *l) {$/;"	f
cachemem_sync	disksim_cachemem.c	/^int cachemem_sync (cache_def *cache)$/;"	f
cachemem_wakeup_complete	disksim_cachemem.c	/^void cachemem_wakeup_complete (cache_def *cache, cache_event *desc)$/;"	f
cachetype	disksim_cachedev.c	/^   int cachetype;       \/* all caches must start with an integer type *\/$/;"	m	struct:cache_def	file:
cachetype	disksim_cachemem.c	/^   int cachetype;	\/* all caches must start with an integer type *\/$/;"	m	struct:cache_def	file:
calc_sp	disksim_ioqueue.c	/^static void calc_sp(iobuf **array, subqueue *queue, int checkcache, int no_requests){$/;"	f	file:
calculate_delay_flash	ssd_interface.c	/^double calculate_delay_flash()$/;"	f
calculate_delay_flash	ssd_interface_noopt.c	/^double calculate_delay_flash()$/;"	f
calculate_delay_flash	ssd_interface_opt.c	/^double calculate_delay_flash()$/;"	f
calculate_erase_rate	disksim_logorg.c	/^void calculate_erase_rate(int seq, int req_size, double int_arr_time)$/;"	f
calculate_flash_resp	disksim_logorg.c	/^double calculate_flash_resp(ioreq_event *curr)$/;"	f
callFsim	ssd_interface.c	/^double callFsim(unsigned int secno, int scount, int operation)$/;"	f
callFsim	ssd_interface_noopt.c	/^double callFsim(unsigned int secno, int scount, int operation)$/;"	f
callFsim	ssd_interface_opt.c	/^double callFsim(unsigned int secno, int scount, int operation)$/;"	f
call_wearleveling	ssd_interface.c	/^void call_wearleveling(int least_worn_out_blk_no, int most_worn_out_blk_no)$/;"	f
cause	disksim_global.h	/^   int    cause;$/;"	m	struct:ioreq_ev
chan	disksim_pfsim.h	/^   void  *chan;$/;"	m	struct:__anon30
chan	disksim_pfsim.h	/^   void  *chan;$/;"	m	struct:__anon31
chan	disksim_pfsim.h	/^   void *chan;$/;"	m	struct:process
check_send_out_request	disksim_iodriver.c	/^static int check_send_out_request (iodriver *curriodriver, int devno)$/;"	f	file:
checkpoint_disable	disksim_global.h	/^   int    checkpoint_disable;$/;"	m	struct:disksim
checkpoint_event	disksim_global.h	/^   event *checkpoint_event;$/;"	m	struct:disksim
checkpoint_interval	disksim_global.h	/^   double checkpoint_interval;$/;"	m	struct:disksim
checkpoint_iocnt	disksim_global.h	/^   int    checkpoint_iocnt;$/;"	m	struct:disksim
checkpointfilename	disksim_global.h	/^   char   checkpointfilename[256];$/;"	m	struct:disksim
cleaned	disksim_cachemem.c	/^   cache_atom *cleaned;$/;"	m	struct:cacheevent	file:
clockintrs	disksim_pfsim.h	/^   int        clockintrs;$/;"	m	struct:__anon26
closedios	disksim_global.h	/^   int    closedios;$/;"	m	struct:disksim
closedthinktime	disksim_global.h	/^   double closedthinktime;$/;"	m	struct:disksim
cnt_delete	ssd_interface.c	/^unsigned int cnt_delete = 0;$/;"	v
cnt_delete	ssd_interface_noopt.c	/^unsigned int cnt_delete = 0;$/;"	v
cnt_delete	ssd_interface_opt.c	/^unsigned int cnt_delete = 0;$/;"	v
cnt_evict_from_flash	ssd_interface.c	/^unsigned int cnt_evict_from_flash = 0;$/;"	v
cnt_evict_from_flash	ssd_interface_noopt.c	/^unsigned int cnt_evict_from_flash = 0;$/;"	v
cnt_evict_from_flash	ssd_interface_opt.c	/^unsigned int cnt_evict_from_flash = 0;$/;"	v
cnt_evict_into_disk	ssd_interface.c	/^unsigned int cnt_evict_into_disk = 0;$/;"	v
cnt_evict_into_disk	ssd_interface_noopt.c	/^unsigned int cnt_evict_into_disk = 0;$/;"	v
cnt_evict_into_disk	ssd_interface_opt.c	/^unsigned int cnt_evict_into_disk = 0;$/;"	v
cnt_fetch_miss_from_disk	ssd_interface.c	/^unsigned int cnt_fetch_miss_from_disk = 0;$/;"	v
cnt_fetch_miss_from_disk	ssd_interface_noopt.c	/^unsigned int cnt_fetch_miss_from_disk = 0;$/;"	v
cnt_fetch_miss_from_disk	ssd_interface_opt.c	/^unsigned int cnt_fetch_miss_from_disk = 0;$/;"	v
cnt_fetch_miss_into_flash	ssd_interface.c	/^unsigned int cnt_fetch_miss_into_flash = 0;$/;"	v
cnt_fetch_miss_into_flash	ssd_interface_noopt.c	/^unsigned int cnt_fetch_miss_into_flash = 0;$/;"	v
cnt_fetch_miss_into_flash	ssd_interface_opt.c	/^unsigned int cnt_fetch_miss_into_flash = 0;$/;"	v
cnt_io_req	disksim_diskctlr2.c	/^  int cnt_io_req[MAX_DEVICE_NUM];$/;"	v
cnt_read	ssd_interface.c	/^unsigned int cnt_read = 0;$/;"	v
cnt_read	ssd_interface_noopt.c	/^unsigned int cnt_read = 0;$/;"	v
cnt_read	ssd_interface_opt.c	/^unsigned int cnt_read = 0;$/;"	v
cnt_write	ssd_interface.c	/^unsigned int cnt_write = 0;$/;"	v
cnt_write	ssd_interface_noopt.c	/^unsigned int cnt_write = 0;$/;"	v
cnt_write	ssd_interface_opt.c	/^unsigned int cnt_write = 0;$/;"	v
comboverlaps	disksim_ioqueue.c	/^   int		comboverlaps;$/;"	m	struct:ioq	file:
completed	syssim_driver.c	/^static int completed = 0;	\/* last request was completed *\/$/;"	v	file:
completed	syssim_driver2.c	/^  unsigned char completed;$/;"	m	struct:node_s	file:
compute_rms	rms.c	/^double compute_rms(x1, y1, x2, y2)$/;"	f
concat	disksim_ioqueue.c	/^         ioreq_event *concat;$/;"	m	struct:iob::__anon17::__anon18	file:
concatmax	disksim_ioqueue.c	/^   int		concatmax;$/;"	m	struct:ioq	file:
concatok	disksim_ioqueue.c	/^   int		(**concatok)(void *,int,int,int,int);$/;"	m	struct:ioq	file:
concatok_cachemem	disksim_global.h	/^   int          (*concatok_cachemem)       (void *, int, int, int, int);$/;"	m	struct:disksim
concatokparam	disksim_ioqueue.c	/^   void *	concatokparam;$/;"	m	struct:ioq	file:
connections	disksim_ctlr.h	/^   ioreq_event *connections;$/;"	m	struct:controller
conservative	syssim_driver2.c	/^static double conservative = 0.0;$/;"	v	file:
const_acctime	disksim_disk.h	/^  int       const_acctime; $/;"	m	struct:disk
const_seektime	disksim_disk.h	/^  int       const_seektime;$/;"	m	struct:disk
constintarrtime	disksim_iosim.c	/^   double  constintarrtime;$/;"	m	struct:iosim_info	file:
constintarrtime	disksim_iosim.c	161;"	d	file:
consttime	disksim_iodriver.h	/^   double	consttime;     \/* Use value if positive, or traced if neg. *\/$/;"	m	struct:iodriver
cont	disksim_logorg.h	/^   struct dep *cont;$/;"	m	struct:dep	typeref:struct:dep::dep
contread	disksim_disk.h	/^  int		contread;$/;"	m	struct:disk
controller	disksim_ctlr.h	/^typedef struct controller {$/;"	s
controller	disksim_ctlr.h	/^} controller;$/;"	t	typeref:struct:controller
controller_53c700_data_transfer	disksim_ctlrdumb.c	/^static void controller_53c700_data_transfer (controller *currctlr, ioreq_event *curr)$/;"	f	file:
controller_53c700_data_transfer_complete	disksim_ctlrdumb.c	/^static void controller_53c700_data_transfer_complete (controller *currctlr, ioreq_event *curr)$/;"	f	file:
controller_53c700_disconnect	disksim_ctlrdumb.c	/^static void controller_53c700_disconnect (controller *currctlr, ioreq_event *curr)$/;"	f	file:
controller_53c700_event_arrive	disksim_ctlrdumb.c	/^void controller_53c700_event_arrive (controller *currctlr, ioreq_event *curr)$/;"	f
controller_53c700_interrupt_arrive	disksim_ctlrdumb.c	/^static void controller_53c700_interrupt_arrive (controller *currctlr, ioreq_event *curr)$/;"	f	file:
controller_53c700_interrupt_complete	disksim_ctlrdumb.c	/^static void controller_53c700_interrupt_complete (controller *currctlr, ioreq_event *curr)$/;"	f	file:
controller_53c700_printstats	disksim_ctlrdumb.c	/^void controller_53c700_printstats (controller *currctlr, char *prefix)$/;"	f
controller_53c700_ready_to_transfer	disksim_ctlrdumb.c	/^static void controller_53c700_ready_to_transfer (controller *currctlr, ioreq_event *curr)$/;"	f	file:
controller_53c700_reconnect_to_transfer	disksim_ctlrdumb.c	/^static void controller_53c700_reconnect_to_transfer (controller *currctlr, ioreq_event *curr)$/;"	f	file:
controller_53c700_reconnection_complete	disksim_ctlrdumb.c	/^static void controller_53c700_reconnection_complete (controller *currctlr, ioreq_event *curr)$/;"	f	file:
controller_53c700_request_arrive	disksim_ctlrdumb.c	/^static void controller_53c700_request_arrive (controller *currctlr, ioreq_event *curr)$/;"	f	file:
controller_53c700_request_complete	disksim_ctlrdumb.c	/^static void controller_53c700_request_complete (controller *currctlr, ioreq_event *curr)$/;"	f	file:
controller_53c700_reset_complete	disksim_ctlrdumb.c	/^static void controller_53c700_reset_complete (controller *currctlr, ioreq_event *curr)$/;"	f	file:
controller_C700_based	disksim_controller.c	/^int controller_C700_based (int ctlno)$/;"	f
controller_bus_delay_complete	disksim_controller.c	/^void controller_bus_delay_complete(int ctlno, ioreq_event *curr, int busno)$/;"	f
controller_bus_ownership_grant	disksim_controller.c	/^void controller_bus_ownership_grant (int ctlno, ioreq_event *curr, int busno, double arbdelay)$/;"	f
controller_cleanstats	disksim_controller.c	/^void controller_cleanstats()$/;"	f
controller_copy	disksim_controller.c	/^controller *controller_copy(controller *orig) {$/;"	f
controller_disown_busno	disksim_controller.c	/^static void controller_disown_busno (controller *currctlr, int busno)$/;"	f	file:
controller_event_arrive	disksim_controller.c	/^void controller_event_arrive (int ctlno, ioreq_event *curr)$/;"	f
controller_get_bus_master	disksim_controller.c	/^int controller_get_bus_master (int busno)$/;"	f
controller_get_data_transfered	disksim_controller.c	/^int controller_get_data_transfered(int ctlno, int devno)$/;"	f
controller_get_depth	disksim_controller.c	/^int controller_get_depth (int ctlno)$/;"	f
controller_get_downward_busno	disksim_controller.c	/^int controller_get_downward_busno (controller *currctlr, ioreq_event *curr, int *slotnoptr)$/;"	f
controller_get_inbus	disksim_controller.c	/^int controller_get_inbus (int ctlno)$/;"	f
controller_get_maxoutstanding	disksim_controller.c	/^int controller_get_maxoutstanding (int ctlno)$/;"	f
controller_get_numcontrollers	disksim_controller.c	/^int controller_get_numcontrollers ()$/;"	f
controller_get_outslot	disksim_controller.c	/^int controller_get_outslot (int ctlno, int busno)$/;"	f
controller_get_slotno	disksim_controller.c	/^int controller_get_slotno (int ctlno)$/;"	f
controller_get_upward_busno	disksim_controller.c	/^static int controller_get_upward_busno (controller *currctlr, ioreq_event *curr, int *slotnoptr)$/;"	f	file:
controller_initialize	disksim_controller.c	/^void controller_initialize()$/;"	f
controller_passthru_event_arrive	disksim_ctlrdumb.c	/^void controller_passthru_event_arrive (controller *currctlr, ioreq_event *curr)$/;"	f
controller_passthru_printstats	disksim_ctlrdumb.c	/^void controller_passthru_printstats (controller *currctlr, char *prefix)$/;"	f
controller_printstats	disksim_controller.c	/^void controller_printstats()$/;"	f
controller_read_logorg	disksim_controller.c	/^void controller_read_logorg (FILE *parfile)$/;"	f
controller_remove_type_from_buswait	disksim_controller.c	/^void controller_remove_type_from_buswait (controller *currctlr, int type)$/;"	f
controller_resetstats	disksim_controller.c	/^void controller_resetstats()$/;"	f
controller_send_event_down_path	disksim_controller.c	/^void controller_send_event_down_path (controller *currctlr, ioreq_event *curr, double delay)$/;"	f
controller_send_event_up_path	disksim_controller.c	/^void controller_send_event_up_path (controller *currctlr, ioreq_event *curr, double delay)$/;"	f
controller_set_depth	disksim_controller.c	/^int controller_set_depth (int ctlno, int inbusno, int depth, int slotno)$/;"	f
controller_setcallbacks	disksim_controller.c	/^void controller_setcallbacks ()$/;"	f
controller_smart_access_complete	disksim_ctlrsmart.c	/^static void controller_smart_access_complete (controller *currctlr, ioreq_event *curr)$/;"	f	file:
controller_smart_disconnect	disksim_ctlrsmart.c	/^static void controller_smart_disconnect (controller *currctlr, ioreq_event *curr)$/;"	f	file:
controller_smart_disk_data_transfer	disksim_ctlrsmart.c	/^static void controller_smart_disk_data_transfer (controller *currctlr, ioreq_event *curr)$/;"	f	file:
controller_smart_disk_data_transfer_complete	disksim_ctlrsmart.c	/^static void controller_smart_disk_data_transfer_complete (controller *currctlr, ioreq_event *curr)$/;"	f	file:
controller_smart_event_arrive	disksim_ctlrsmart.c	/^void controller_smart_event_arrive (controller *currctlr, ioreq_event *curr)$/;"	f
controller_smart_host_data_transfer	disksim_ctlrsmart.c	/^static void controller_smart_host_data_transfer (void *donefuncparam, ioreq_event *curr)$/;"	f	file:
controller_smart_host_data_transfer_complete	disksim_ctlrsmart.c	/^static void controller_smart_host_data_transfer_complete (controller *currctlr, ioreq_event *curr)$/;"	f	file:
controller_smart_initialize	disksim_ctlrsmart.c	/^void controller_smart_initialize (controller *currctlr)$/;"	f
controller_smart_interrupt_arrive	disksim_ctlrsmart.c	/^static void controller_smart_interrupt_arrive (controller *currctlr, ioreq_event *curr)$/;"	f	file:
controller_smart_interrupt_complete	disksim_ctlrsmart.c	/^static void controller_smart_interrupt_complete (controller *currctlr, ioreq_event *curr)$/;"	f	file:
controller_smart_issue_access	disksim_ctlrsmart.c	/^static void controller_smart_issue_access (void *issuefuncparam, ioreq_event *curr)$/;"	f	file:
controller_smart_printstats	disksim_ctlrsmart.c	/^void controller_smart_printstats (controller *currctlr, char *prefix)$/;"	f
controller_smart_queuefind	disksim_ctlrsmart.c	/^static struct ioq * controller_smart_queuefind (void *queuefindparam, int devno)$/;"	f	file:
controller_smart_ready_to_transfer	disksim_ctlrsmart.c	/^static void controller_smart_ready_to_transfer (controller *currctlr, ioreq_event *curr)$/;"	f	file:
controller_smart_reconnect_to_transfer	disksim_ctlrsmart.c	/^static void controller_smart_reconnect_to_transfer (controller *currctlr, ioreq_event *curr)$/;"	f	file:
controller_smart_request_arrive	disksim_ctlrsmart.c	/^static void controller_smart_request_arrive (controller *currctlr, ioreq_event *curr)$/;"	f	file:
controller_smart_request_complete	disksim_ctlrsmart.c	/^static void controller_smart_request_complete (void *donefuncparam, ioreq_event *curr)$/;"	f	file:
controller_smart_resetstats	disksim_ctlrsmart.c	/^void controller_smart_resetstats (controller *currctlr)$/;"	f
controller_smart_setcallbacks	disksim_ctlrsmart.c	/^void controller_smart_setcallbacks ()$/;"	f
controller_smart_wakeup	disksim_ctlrsmart.c	/^static void controller_smart_wakeup (void *wakeupfuncparam, struct cacheevent *cacheevent)$/;"	f	file:
controllers	disksim_ctlr.h	/^   controller **controllers;$/;"	m	struct:ctlrinfo
copies	disksim_logorg.h	/^   int    copies;$/;"	m	struct:logorg
copychoice	disksim_logorg.h	/^   int    copychoice;$/;"	m	struct:logorg
count	disksim_stat.h	/^   int     count;$/;"	m	struct:__anon35
count	raw_layout.c	/^  int count,cyls;$/;"	m	struct:sfreq	file:
count	ssd_interface.c	/^int count = 0;$/;"	v
count	ssd_interface_noopt.c	/^int count = 0;$/;"	v
count	ssd_interface_opt.c	/^int count = 0;$/;"	v
count_blocks	syssim_driver2.c	/^inline void count_blocks(unsigned short stop_sector,$/;"	f
count_valid	ssd_interface.c	/^int count_valid = 0;$/;"	v
cpu	disksim_pfsim.h	/^} cpu;$/;"	t	typeref:struct:__anon26
cpu_event	disksim_pfsim.h	/^} cpu_event;$/;"	t	typeref:struct:__anon25
cpunum	disksim_pfsim.h	/^   int         cpunum;$/;"	m	struct:__anon25
cpus	disksim_pfsim.h	/^   cpu *cpus;$/;"	m	struct:pf_info
cpus	disksim_pfsim.h	289;"	d
critreads	disksim_logorg.h	/^   int		critreads;$/;"	m	struct:__anon22
critreadstats	disksim_ioqueue.c	/^   statgen	critreadstats;$/;"	m	struct:subq	file:
critwrites	disksim_logorg.h	/^   int		critwrites;$/;"	m	struct:__anon22
critwritestats	disksim_ioqueue.c	/^   statgen	critwritestats;$/;"	m	struct:subq	file:
cswitch_event	disksim_pfsim.h	/^} cswitch_event;$/;"	t	typeref:struct:__anon28
cswitches	disksim_pfsim.h	/^   int        cswitches;$/;"	m	struct:__anon26
cswitches	disksim_pfsim.h	/^   int  cswitches;$/;"	m	struct:process
ctl	disksim_iosim.h	/^   ctlr         *ctl;$/;"	m	struct:__anon21
ctl_printblockingstats	disksim_ctlr.h	/^   int ctl_printblockingstats;$/;"	m	struct:ctlrinfo
ctl_printcachestats	disksim_ctlr.h	/^   int ctl_printcachestats;$/;"	m	struct:ctlrinfo
ctl_printcritstats	disksim_ctlr.h	/^   int ctl_printcritstats;$/;"	m	struct:ctlrinfo
ctl_printidlestats	disksim_ctlr.h	/^   int ctl_printidlestats;$/;"	m	struct:ctlrinfo
ctl_printintarrstats	disksim_ctlr.h	/^   int ctl_printintarrstats;$/;"	m	struct:ctlrinfo
ctl_printinterferestats	disksim_ctlr.h	/^   int ctl_printinterferestats;$/;"	m	struct:ctlrinfo
ctl_printlocalitystats	disksim_ctlr.h	/^   int ctl_printlocalitystats;$/;"	m	struct:ctlrinfo
ctl_printperdiskstats	disksim_ctlr.h	/^   int ctl_printperdiskstats;$/;"	m	struct:ctlrinfo
ctl_printqueuestats	disksim_ctlr.h	/^   int ctl_printqueuestats;$/;"	m	struct:ctlrinfo
ctl_printsizestats	disksim_ctlr.h	/^   int ctl_printsizestats;$/;"	m	struct:ctlrinfo
ctl_printstampstats	disksim_ctlr.h	/^   int ctl_printstampstats;$/;"	m	struct:ctlrinfo
ctl_printstreakstats	disksim_ctlr.h	/^   int ctl_printstreakstats;$/;"	m	struct:ctlrinfo
ctlno	disksim_ctlr.h	/^   int		ctlno;$/;"	m	struct:controller
ctlno	disksim_iosim.h	/^   int          ctlno;$/;"	m	struct:__anon20
ctlorgs	disksim_ctlr.h	/^   struct logorg *ctlorgs;$/;"	m	struct:ctlrinfo	typeref:struct:ctlrinfo::logorg
ctlr	disksim_iosim.h	/^} ctlr;$/;"	t	typeref:struct:__anon20
ctlrinfo	disksim_ctlr.h	/^typedef struct ctlrinfo {$/;"	s
ctlrinfo	disksim_global.h	/^   struct ctlrinfo *ctlrinfo;$/;"	m	struct:disksim	typeref:struct:disksim::ctlrinfo
ctlrinfo_t	disksim_ctlr.h	/^} ctlrinfo_t;$/;"	t	typeref:struct:ctlrinfo
ctlrs	disksim_iodriver.h	/^   ctlr *	ctlrs;$/;"	m	struct:iodriver
ctlrs_len	disksim_ctlr.h	/^  int ctlrs_len; \/* allocated size of array *\/$/;"	m	struct:ctlrinfo
cum_inter_arr	disksim_logorg.c	/^double cum_inter_arr;$/;"	v
cum_size	disksim_logorg.c	/^int cum_size;$/;"	v
cumulative_possible	syssim_driver2.c	/^  unsigned char cumulative_possible;$/;"	m	struct:node_s	file:
curlbolt	disksim_pfsim.h	/^   int  curlbolt;$/;"	m	struct:pf_info
curlbolt	disksim_pfsim.h	294;"	d
curr_acctime	disksim_diskctlr2.c	/^double curr_acctime[MAX_DEVICE_NUM];		\/\/ curr acctime $/;"	v
curr_req_arr	disksim_logorg.c	/^double curr_req_arr = 0.0;$/;"	v
curr_req_arr_time	disksim_logorg.c	/^double curr_req_arr_time = 0.0;$/;"	v
curr_seektime	disksim_diskctlr2.c	/^double curr_seektime[MAX_DEVICE_NUM];		\/\/ curr I\/O seek time	$/;"	v
curr_time	disksim_diskctlr2.c	/^double curr_time[MAX_DEVICE_NUM];			\/\/ curr I\/O req. time	$/;"	v
current	disksim_ioqueue.c	/^   iobuf *	current;$/;"	m	struct:subq	file:
current	disksim_pfsim.h	/^   cpu_event *current;$/;"	m	struct:__anon26
current_head	disksim_ioqueue.c	/^static int current_head=0;$/;"	v	file:
current_num_flash_cache_ghost_lines	cache.h	/^unsigned long current_num_flash_cache_ghost_lines; \/\/This cannot flash_ghost_size_in_sectors$/;"	v
current_num_flash_cache_lines	cache.h	/^unsigned long current_num_flash_cache_lines; \/\/ This cannot exceed  flash_utilization_size_in_sectors$/;"	v
currentbus	disksim_disk.h	/^  diskreq     *currentbus;$/;"	m	struct:disk
currenthda	disksim_disk.h	/^  diskreq     *currenthda;$/;"	m	struct:disk
currentsecond	hplcomb.c	/^int currentsecond = 0;$/;"	v
curroffset	disksim_global.h	/^   int    curroffset;$/;"	m	struct:disksim
currtime	disksim_disk.h	/^  double       currtime;$/;"	m	struct:disk
currtime_i	disksim_disk.h	/^  dm_time_t    currtime_i;$/;"	m	struct:disk
curstreak	disksim_logorg.h	/^   int    curstreak;$/;"	m	struct:__anon23
cyl_dist_count	syssim_driver2.c	/^static long cyl_dist_count=0;$/;"	v	file:
cyl_mean	syssim_driver2.c	/^static float cyl_mean;$/;"	v	file:
cyl_node_s	syssim_driver2.c	/^typedef struct cyl_node_s {$/;"	s	file:
cyl_node_t	syssim_driver2.c	/^} cyl_node_t;$/;"	t	typeref:struct:cyl_node_s	file:
cyl_order	syssim_driver2.c	/^static int *cyl_order;$/;"	v	file:
cylinder	disksim_ioqueue.c	/^   int       cylinder;$/;"	m	struct:iob	file:
cylinder	syssim_driver2.c	/^  unsigned short cylinder;$/;"	m	struct:block_s	file:
cylinder	syssim_driver2.c	/^  unsigned short cylinder;$/;"	m	struct:bucket_s	file:
cylinder	syssim_driver2.c	/^  unsigned short cylinder;$/;"	m	struct:cyl_node_s	file:
cylmaptype	disksim_ioqueue.c	/^   int		cylmaptype;$/;"	m	struct:ioq	file:
cylno	disksim_hptrace.h	/^   u_int32_t       cylno;      \/* cylinder number of the access *\/$/;"	m	struct:__anon16
cyls	raw_layout.c	/^  int count,cyls;$/;"	m	struct:sfreq	file:
cylsperzone	syssim_driver2.c	/^static int *cylsperzone;$/;"	v	file:
data_blk	fast.c	/^    int data_blk;           \/\/ sequential log block owner$/;"	m	struct:seq_log_blk	file:
data_blk	fast.youkim.c	/^    int data_blk;           \/\/ sequential log block owner$/;"	m	struct:seq_log_blk	file:
data_blk	fast_bk.c	/^    int data_blk;           \/\/ sequential log block owner$/;"	m	struct:seq_log_blk	file:
data_blk	last.c	/^    int data_blk;           \/\/ sequential log block owner$/;"	m	struct:seq_log_blk	file:
data_blk_erase	opagemap.c	/^int data_blk_erase = 0;$/;"	v
datatransfers	disksim_ctlr.h	/^   ioreq_event *datatransfers;$/;"	m	struct:controller
dedicatedwriteseg	disksim_disk.h	/^  segment *	dedicatedwriteseg;$/;"	m	struct:disk
delay_flash_update	opagemap.h	/^int delay_flash_update;$/;"	v
delay_flash_update	pagemap.h	/^int delay_flash_update;$/;"	v
delayed_event	disksim_bus.c	/^   ioreq_event *delayed_event;$/;"	m	struct:bus_ev	file:
delete_flash_cache_container	cache.c	/^void delete_flash_cache_container(struct flash_cache_container* ds, unsigned long arr_len, unsigned long sectorid)$/;"	f
dep	disksim_logorg.h	/^typedef struct dep {$/;"	s
depend	disksim_logorg.h	/^   depends *depend;$/;"	m	struct:os
depends	disksim_logorg.h	/^} depends;$/;"	t	typeref:struct:dep
deps	disksim_logorg.h	/^   ioreq_event *deps[10];$/;"	m	struct:dep
depth	disksim_bus.c	/^  int           depth;$/;"	m	struct:bus	file:
depth	disksim_ctlr.h	/^   int          depth[MAXINBUSES];$/;"	m	struct:controller
depth	disksim_disk.h	/^  int          depth[MAXINBUSES];$/;"	m	struct:disk
depth	disksim_simpledisk.c	/^   int depth[MAXINBUSES];$/;"	m	struct:simpledisk	file:
depth	disksim_simpleflash.c	/^   int depth[MAXINBUSES];$/;"	m	struct:simpleflash	file:
desired	syssim_driver2.c	/^  unsigned char desired;$/;"	m	struct:node_s	file:
dest_angle	syssim_driver2.c	/^  float dest_angle;$/;"	m	struct:alg_args_s	file:
dest_cyl	syssim_driver2.c	/^  unsigned short dest_cyl;$/;"	m	struct:alg_args_s	file:
dest_seektime	syssim_driver2.c	/^  float dest_seektime;$/;"	m	struct:cyl_node_s	file:
dest_surface	syssim_driver2.c	/^  unsigned short dest_surface;$/;"	m	struct:alg_args_s	file:
destagereadblocks	disksim_cachedev.c	/^   int destagereadblocks;$/;"	m	struct:__anon2	file:
destagereads	disksim_cachedev.c	/^   int destagereads;$/;"	m	struct:__anon2	file:
destagewriteatoms	disksim_cachemem.c	/^   int destagewriteatoms;$/;"	m	struct:__anon3	file:
destagewriteblocks	disksim_cachedev.c	/^   int destagewriteblocks;$/;"	m	struct:__anon2	file:
destagewrites	disksim_cachedev.c	/^   int destagewrites;$/;"	m	struct:__anon2	file:
destagewrites	disksim_cachemem.c	/^   int destagewrites;$/;"	m	struct:__anon3	file:
destcyl	syssim_driver2.c	/^static int destcyl[MAXDISKS];$/;"	v	file:
determine_zones	raw_layout.c	/^determine_zones(disk *currdisk, sfreq_t *sectfreq, int capacity)$/;"	f	file:
dev_copy	disksim_device.h	/^  struct device_header*(*dev_copy)(struct device_header *);$/;"	m	struct:device_header	typeref:struct:device_header::dev_copy
dev_map_devno	disksim_device.c	/^INLINE int dev_map_devno(int n)$/;"	f
device	disksim_iosim.h	/^} device;$/;"	t	typeref:struct:__anon21
device_add	disksim_device.c	/^void device_add(struct device_header *d, int ldevno) {$/;"	f
device_bus_delay_complete	disksim_device.c	/^INLINE void device_bus_delay_complete (int devno, $/;"	f
device_bus_ownership_grant	disksim_device.c	/^INLINE void device_bus_ownership_grant (int devno, $/;"	f
device_cleanstats	disksim_device.c	/^void device_cleanstats (void)$/;"	f
device_event_arrive	disksim_device.c	/^INLINE void device_event_arrive (ioreq_event *curr)$/;"	f
device_get_acctime	disksim_device.c	/^INLINE double device_get_acctime (int devno, $/;"	f
device_get_avg_sectpercyl	disksim_device.c	/^INLINE int device_get_avg_sectpercyl (int devno)$/;"	f
device_get_blktranstime	disksim_device.c	/^INLINE double device_get_blktranstime (ioreq_event *curr)$/;"	f
device_get_busno	disksim_device.c	/^INLINE int device_get_busno (ioreq_event *curr)$/;"	f
device_get_depth	disksim_device.c	/^INLINE int device_get_depth (int devno)$/;"	f
device_get_distance	disksim_device.c	/^INLINE int device_get_distance (int devno, $/;"	f
device_get_inbus	disksim_device.c	/^INLINE int device_get_inbus (int devno)$/;"	f
device_get_mapping	disksim_device.c	/^INLINE void device_get_mapping (int maptype, $/;"	f
device_get_maxoutstanding	disksim_device.c	/^INLINE int device_get_maxoutstanding (int devno)$/;"	f
device_get_number_of_blocks	disksim_device.c	/^INLINE int device_get_number_of_blocks (int devno)$/;"	f
device_get_numcyls	disksim_device.c	/^INLINE int device_get_numcyls (int devno)$/;"	f
device_get_numdevices	disksim_device.c	/^int device_get_numdevices (void)$/;"	f
device_get_seektime	disksim_device.c	/^double device_get_seektime (int devno, $/;"	f
device_get_servtime	disksim_device.c	/^INLINE double device_get_servtime (int devno, $/;"	f
device_get_slotno	disksim_device.c	/^INLINE int device_get_slotno (int devno)$/;"	f
device_header	disksim_device.h	/^struct device_header {$/;"	s
device_info	disksim_device.h	/^typedef struct device_info {$/;"	s
device_info_t	disksim_device.h	/^} device_info_t;$/;"	t	typeref:struct:device_info
device_initialize	disksim_device.c	/^void device_initialize (void)$/;"	f
device_initialize_deviceinfo	disksim_device.c	/^void device_initialize_deviceinfo (void)$/;"	f
device_len	disksim_device.h	/^  int device_len;  \/\/ used? necessary?$/;"	m	struct:device_header
device_name	disksim_device.h	/^  char *device_name;$/;"	m	struct:device_header
device_num	disksim_simos_interface.h	/^  short device_num;$/;"	m	struct:__anon32
device_printacctimestats	disksim_device.h	/^   int device_printacctimestats;$/;"	m	struct:device_info
device_printacctimestats	disksim_device.h	133;"	d
device_printbufferstats	disksim_device.h	/^   int device_printbufferstats;$/;"	m	struct:device_info
device_printbufferstats	disksim_device.h	135;"	d
device_printcritstats	disksim_device.h	/^   int device_printcritstats;$/;"	m	struct:device_info
device_printcritstats	disksim_device.h	126;"	d
device_printidlestats	disksim_device.h	/^   int device_printidlestats;$/;"	m	struct:device_info
device_printidlestats	disksim_device.h	127;"	d
device_printintarrstats	disksim_device.h	/^   int device_printintarrstats;$/;"	m	struct:device_info
device_printintarrstats	disksim_device.h	128;"	d
device_printinterferestats	disksim_device.h	/^   int device_printinterferestats;$/;"	m	struct:device_info
device_printinterferestats	disksim_device.h	134;"	d
device_printlatencystats	disksim_device.h	/^   int device_printlatencystats;$/;"	m	struct:device_info
device_printlatencystats	disksim_device.h	131;"	d
device_printqueuestats	disksim_device.h	/^   int device_printqueuestats;$/;"	m	struct:device_info
device_printqueuestats	disksim_device.h	125;"	d
device_printseekstats	disksim_device.h	/^   int device_printseekstats;$/;"	m	struct:device_info
device_printseekstats	disksim_device.h	130;"	d
device_printsetstats	disksim_device.c	/^void device_printsetstats (int *set, int setsize, char *sourcestr)$/;"	f
device_printsizestats	disksim_device.h	/^   int device_printsizestats;$/;"	m	struct:device_info
device_printsizestats	disksim_device.h	129;"	d
device_printstats	disksim_device.c	/^void device_printstats (void)$/;"	f
device_printxferstats	disksim_device.h	/^   int device_printxferstats;$/;"	m	struct:device_info
device_printxferstats	disksim_device.h	132;"	d
device_resetstats	disksim_device.c	/^void device_resetstats (void)$/;"	f
device_set_depth	disksim_device.c	/^INLINE int device_set_depth (int devno, int inbusno, int depth, int slotno)$/;"	f
device_setcallbacks	disksim_device.c	/^void device_setcallbacks (void)$/;"	f
device_type	disksim_device.h	/^  int device_type;$/;"	m	struct:device_header
device_type_t	disksim_device.h	/^} device_type_t;$/;"	t	typeref:enum:__anon5
deviceinfo	disksim_global.h	/^   struct device_info *deviceinfo;$/;"	m	struct:disksim	typeref:struct:disksim::device_info
devicenames	disksim_device.h	/^   char **devicenames;  \/* pointers to name fields in actual$/;"	m	struct:device_info
devicenos	disksim_device.c	81;"	d	file:
devicenos	disksim_device.h	/^   int *devicenos;	\/* number among devices of that device type *\/$/;"	m	struct:device_info
devices	disksim_ctlr.h	/^   device *	devices;$/;"	m	struct:controller
devices	disksim_device.h	/^   struct device_header **devices;$/;"	m	struct:device_info	typeref:struct:device_info::device_header
devices	disksim_iodriver.h	/^   device *	devices;$/;"	m	struct:iodriver
devicetypes	disksim_device.c	79;"	d	file:
devicetypes	disksim_device.h	/^   int *devicetypes;	\/* actual type of device;$/;"	m	struct:device_info
devno	disksim_bus.c	/^   int    devno;$/;"	m	struct:__anon1	file:
devno	disksim_bus.c	/^   int devno;$/;"	m	struct:bus_ev	file:
devno	disksim_cachemem.c	/^   int devno;$/;"	m	struct:cacheatom	file:
devno	disksim_disk.h	/^  int	               devno;$/;"	m	struct:disk
devno	disksim_global.h	/^   int    devno;$/;"	m	struct:ioreq_ev
devno	disksim_hptrace.h	/^   u_int32_t       devno;      \/* device addressed *\/$/;"	m	struct:__anon16
devno	disksim_ioqueue.c	/^   int		devno;$/;"	m	struct:ioq	file:
devno	disksim_ioqueue.c	/^   int       devno;$/;"	m	struct:iob	file:
devno	disksim_iosim.h	/^   int          devno;$/;"	m	struct:__anon21
devno	disksim_logorg.h	/^   int    devno;$/;"	m	struct:__anon23
devno	disksim_logorg.h	/^   int    devno;$/;"	m	struct:__anon24
devno	disksim_logorg.h	/^   int    devno;$/;"	m	struct:dep
devno	disksim_logorg.h	/^   u_int  devno;$/;"	m	struct:os
devno	disksim_simpledisk.c	/^   int devno;$/;"	m	struct:simpledisk	file:
devno	disksim_simpleflash.c	/^   int devno;$/;"	m	struct:simpleflash	file:
devno	disksim_synthio.c	/^   int            *devno;$/;"	m	struct:gen	file:
devno	syssim_driver.h	/^        short devno;$/;"	m	struct:__anon41
devno	syssim_driver2.c	/^  unsigned short devno;$/;"	m	struct:alg_args_s	file:
devs	disksim_logorg.h	/^   logorgdev *devs;$/;"	m	struct:logorg
devs_len	disksim_device.h	/^   int devs_len;        \/* allocated size of above arrays *\/$/;"	m	struct:device_info
devtype	disksim_bus.c	/^   int    devtype;$/;"	m	struct:__anon1	file:
devtype	disksim_bus.c	/^   int devtype;$/;"	m	struct:bus_ev	file:
diff	disksim_global.h	426;"	d
diff_seq_cnt	disksim_logorg.c	/^int diff_seq_cnt;$/;"	v
dir	disksim_ioqueue.c	/^   int		dir;$/;"	m	struct:subq	file:
dirty	cache.h	/^ short dirty;  \/\/ THIS is either DIRTY or CLEAN $/;"	m	struct:flash_cache_line
dirtymap	disksim_cachedev.c	/^   bitstr_t *dirtymap;$/;"	m	struct:cache_def	file:
disconnectinseek	disksim_disk.h	/^  int		disconnectinseek;$/;"	m	struct:disk
disk	disksim_disk.h	/^typedef struct disk {$/;"	s
disk	disksim_disk.h	/^} disk;$/;"	t	typeref:struct:disk
disk	raw_layout.c	/^typedef diskinfo_t disk;$/;"	t	file:
diskOrFlash	cache.h	/^	int diskOrFlash;$/;"	m	struct:outgoing_request
diskTICSperMSEC	disksim_simos_interface.c	/^double diskTICSperMSEC;$/;"	v
disk_access_dump_file	disksim_simos_interface.c	/^FILE *disk_access_dump_file;$/;"	v
disk_acctime_printstats	disksim_disk.c	/^static void disk_acctime_printstats (int *set, int setsize, char *prefix)$/;"	f	file:
disk_acctimestats	disksim_disk.c	/^void disk_acctimestats (disk *currdisk, int distance, double seektime,$/;"	f
disk_activate_read	disksim_diskctlr.c	/^disk_activate_read(disk *currdisk, $/;"	f	file:
disk_activate_read	disksim_diskctlr2.c	/^static void disk_activate_read (disk *currdisk, diskreq *currdiskreq, int setseg, int ok_to_check_bus)$/;"	f	file:
disk_activate_write	disksim_diskctlr.c	/^disk_activate_write(disk *currdisk, $/;"	f	file:
disk_activate_write	disksim_diskctlr2.c	/^static void disk_activate_write (disk *currdisk, diskreq *currdiskreq, int setseg, int ok_to_check_bus)$/;"	f	file:
disk_add	disksim_disk.c	/^int disk_add(struct disk *d) {$/;"	f
disk_buffer_attempt_access_swap	disksim_diskctlr.c	/^disk_buffer_attempt_access_swap(disk *currdisk, $/;"	f	file:
disk_buffer_attempt_access_swap	disksim_diskctlr2.c	/^static int disk_buffer_attempt_access_swap(disk *currdisk, diskreq *currdiskreq)$/;"	f	file:
disk_buffer_attempt_seg_ownership	disksim_diskcache.c	/^int disk_buffer_attempt_seg_ownership (disk *currdisk, diskreq *currdiskreq)$/;"	f
disk_buffer_block_available	disksim_diskcache.c	/^int disk_buffer_block_available (disk *currdisk, segment *seg, int blkno)$/;"	f
disk_buffer_check_read_segments	disksim_diskcache.c	/^static int disk_buffer_check_read_segments (disk *currdisk, ioreq_event *currioreq, int* buffer_reading)$/;"	f	file:
disk_buffer_check_segments	disksim_diskcache.c	/^int disk_buffer_check_segments (disk *currdisk, ioreq_event *currioreq,$/;"	f
disk_buffer_check_write_segments	disksim_diskcache.c	/^static int disk_buffer_check_write_segments (disk *currdisk, ioreq_event *currioreq)$/;"	f	file:
disk_buffer_estimate_acctime	disksim_diskctlr.c	/^static double disk_buffer_estimate_acctime(disk *currdisk, ioreq_event *curr, double maxtime)$/;"	f	file:
disk_buffer_estimate_acctime	disksim_diskctlr2.c	/^static double disk_buffer_estimate_acctime(disk *currdisk, ioreq_event *curr, double maxtime)$/;"	f	file:
disk_buffer_estimate_seektime	disksim_diskctlr.c	/^disk_buffer_estimate_seektime(disk *currdisk, $/;"	f	file:
disk_buffer_estimate_servtime	disksim_diskctlr.c	/^disk_buffer_estimate_servtime(disk *currdisk, $/;"	f	file:
disk_buffer_estimate_servtime	disksim_diskctlr2.c	/^static double disk_buffer_estimate_servtime(disk *currdisk, ioreq_event *curr, int checkcache, double maxtime)$/;"	f	file:
disk_buffer_get_max_readahead	disksim_diskcache.c	/^int disk_buffer_get_max_readahead (disk *currdisk, segment *seg, ioreq_event *curr)$/;"	f
disk_buffer_overlap	disksim_diskcache.c	/^int disk_buffer_overlap (segment *seg, ioreq_event *curr)$/;"	f
disk_buffer_printstats	disksim_disk.c	/^static void disk_buffer_printstats (int *set, int setsize, char *prefix)$/;"	f	file:
disk_buffer_recyclable_segment	disksim_diskcache.c	/^segment* disk_buffer_recyclable_segment (disk *currdisk, int isread)$/;"	f
disk_buffer_recyclable_segment_check	disksim_diskcache.c	/^static int disk_buffer_recyclable_segment_check (disk *currdisk, segment *currseg, int isread)$/;"	f	file:
disk_buffer_remove_from_seg	disksim_diskcache.c	/^void disk_buffer_remove_from_seg (diskreq *currdiskreq)$/;"	f
disk_buffer_request_complete	disksim_diskctlr.c	/^disk_buffer_request_complete(disk *currdisk, diskreq *currdiskreq)$/;"	f	file:
disk_buffer_request_complete	disksim_diskctlr2.c	/^static int disk_buffer_request_complete(disk *currdisk, diskreq *currdiskreq)$/;"	f	file:
disk_buffer_reusable_segment_check	disksim_diskcache.c	/^int disk_buffer_reusable_segment_check (disk *currdisk, segment *currseg)$/;"	f
disk_buffer_sector_done	disksim_diskctlr.c	/^disk_buffer_sector_done (disk *currdisk, ioreq_event *curr)$/;"	f	file:
disk_buffer_sector_done	disksim_diskctlr2.c	/^static void disk_buffer_sector_done (disk *currdisk, ioreq_event *curr)$/;"	f	file:
disk_buffer_seekdone	disksim_diskctlr.c	/^disk_buffer_seekdone(disk *currdisk, ioreq_event *curr)$/;"	f	file:
disk_buffer_seekdone	disksim_diskctlr2.c	/^static void disk_buffer_seekdone (disk *currdisk, ioreq_event *curr)$/;"	f	file:
disk_buffer_seg_owner	disksim_diskcache.c	/^diskreq* disk_buffer_seg_owner (segment *seg, int effective)$/;"	f
disk_buffer_segment_wrap	disksim_diskcache.c	/^void disk_buffer_segment_wrap (segment *seg, int endblkno)$/;"	f
disk_buffer_select_read_segment	disksim_diskcache.c	/^disk_buffer_select_read_segment(disk *currdisk, diskreq *currdiskreq)$/;"	f	file:
disk_buffer_select_segment	disksim_diskcache.c	/^segment * disk_buffer_select_segment (disk *currdisk, diskreq *currdiskreq,$/;"	f
disk_buffer_select_write_segment	disksim_diskcache.c	/^static segment* disk_buffer_select_write_segment(disk *currdisk, diskreq *currdiskreq)$/;"	f	file:
disk_buffer_set_segment	disksim_diskcache.c	/^void disk_buffer_set_segment (disk *currdisk, diskreq *currdiskreq)$/;"	f
disk_buffer_state_t	disksim_disk.h	/^} disk_buffer_state_t;$/;"	t	typeref:enum:__anon7
disk_buffer_stats	disksim_diskcache.c	/^static void disk_buffer_stats (disk *currdisk, ioreq_event *curr, segment *seg, int hittype)$/;"	f	file:
disk_buffer_stop_access	disksim_diskctlr.c	/^static void disk_buffer_stop_access (disk *currdisk)$/;"	f	file:
disk_buffer_stop_access	disksim_diskctlr2.c	/^static void disk_buffer_stop_access (disk *currdisk)$/;"	f	file:
disk_buffer_stopable_access	disksim_diskctlr.c	/^int disk_buffer_stopable_access (disk *currdisk, diskreq *currdiskreq)$/;"	f
disk_buffer_stopable_access	disksim_diskctlr2.c	/^int disk_buffer_stopable_access (disk *currdisk, diskreq *currdiskreq)$/;"	f
disk_buffer_transfer_size	disksim_diskctlr.c	/^disk_buffer_transfer_size(disk *currdisk, $/;"	f	file:
disk_buffer_transfer_size	disksim_diskctlr2.c	/^static ioreq_event* disk_buffer_transfer_size (disk *currdisk, diskreq *currdiskreq, ioreq_event *curr)$/;"	f	file:
disk_buffer_update_outbuffer	disksim_diskctlr.c	/^disk_buffer_update_outbuffer(disk *currdisk, segment *seg)$/;"	f	file:
disk_buffer_update_outbuffer	disksim_diskctlr2.c	/^static void disk_buffer_update_outbuffer (disk *currdisk, segment *seg)$/;"	f	file:
disk_bus_delay_complete	disksim_diskctlr.c	/^disk_bus_delay_complete(int devno, $/;"	f
disk_bus_delay_complete	disksim_diskctlr2.c	/^void disk_bus_delay_complete (int devno, ioreq_event *curr, int sentbusno)$/;"	f
disk_bus_ownership_grant	disksim_diskctlr.c	/^disk_bus_ownership_grant(int devno, $/;"	f
disk_bus_ownership_grant	disksim_diskctlr2.c	/^void disk_bus_ownership_grant (int devno, ioreq_event *curr, int busno, double arbdelay)$/;"	f
disk_cache_hit_t	disksim_disk.h	/^} disk_cache_hit_t;$/;"	t	typeref:enum:__anon8
disk_check_bus	disksim_diskctlr.c	/^static void disk_check_bus (disk *currdisk, diskreq *currdiskreq)$/;"	f	file:
disk_check_bus	disksim_diskctlr2.c	/^static void disk_check_bus (disk *currdisk, diskreq *currdiskreq)$/;"	f	file:
disk_check_hda	disksim_diskctlr.c	/^static void disk_check_hda(disk *currdisk, $/;"	f	file:
disk_check_hda	disksim_diskctlr2.c	/^static void disk_check_hda(disk *currdisk, diskreq *currdiskreq, int ok_to_check_bus)$/;"	f	file:
disk_check_hda_pending	disksim_diskctlr.c	/^disk_check_hda_pending(disk *currdisk, $/;"	f	file:
disk_check_prefetch_swap	disksim_diskctlr.c	/^static void disk_check_prefetch_swap (disk *currdisk)$/;"	f	file:
disk_check_prefetch_swap	disksim_diskctlr2.c	/^static void disk_check_prefetch_swap (disk *currdisk)$/;"	f	file:
disk_cleanstats	disksim_disk.c	/^void disk_cleanstats (void)$/;"	f
disk_completion	disksim_diskctlr.c	/^static void disk_completion (ioreq_event *curr)$/;"	f	file:
disk_completion	disksim_diskctlr2.c	/^static void disk_completion (ioreq_event *curr)$/;"	f	file:
disk_cont_read_t	disksim_disk.h	/^} disk_cont_read_t;$/;"	t	typeref:enum:__anon9
disk_copy	disksim_disk.c	/^struct device_header *disk_copy(struct device_header *orig) {$/;"	f
disk_currstate	disksim_disk.h	/^struct disk_currstate {$/;"	s
disk_disconnect	disksim_diskctlr.c	/^static void disk_disconnect (ioreq_event *curr)$/;"	f	file:
disk_disconnect	disksim_diskctlr2.c	/^static void disk_disconnect (ioreq_event *curr)$/;"	f	file:
disk_enablement_function	disksim_diskctlr.c	/^int disk_enablement_function(ioreq_event *currioreq)$/;"	f
disk_enablement_function	disksim_diskctlr2.c	/^int disk_enablement_function (ioreq_event *currioreq)$/;"	f
disk_event_arrive	disksim_diskctlr.c	/^void disk_event_arrive (ioreq_event *curr)$/;"	f
disk_event_arrive	disksim_diskctlr2.c	/^void disk_event_arrive (ioreq_event *curr)$/;"	f
disk_fastwrite_t	disksim_disk.h	/^} disk_fastwrite_t;$/;"	t	typeref:enum:__anon11
disk_find_new_seg_owner	disksim_diskctlr.c	/^static void disk_find_new_seg_owner(disk *currdisk, segment *seg)$/;"	f	file:
disk_find_new_seg_owner	disksim_diskctlr2.c	/^static void disk_find_new_seg_owner(disk *currdisk, segment *seg)$/;"	f	file:
disk_get_acctime	disksim_diskctlr.c	/^double disk_get_acctime (int diskno, ioreq_event *req, double maxtime)$/;"	f
disk_get_acctime	disksim_diskctlr2.c	/^double disk_get_acctime (int diskno, ioreq_event *req, double maxtime)$/;"	f
disk_get_avg_sectpercyl	disksim_disk.c	/^int disk_get_avg_sectpercyl(int devno)$/;"	f
disk_get_blktranstime	disksim_diskctlr.c	/^double disk_get_blktranstime (ioreq_event *curr)$/;"	f
disk_get_blktranstime	disksim_diskctlr2.c	/^double disk_get_blktranstime (ioreq_event *curr)$/;"	f
disk_get_busno	disksim_diskctlr.c	/^INLINE int disk_get_busno (ioreq_event *curr)$/;"	f
disk_get_busno	disksim_diskctlr2.c	/^int disk_get_busno (ioreq_event *curr)$/;"	f
disk_get_depth	disksim_diskctlr.c	/^int disk_get_depth (int diskno)$/;"	f
disk_get_depth	disksim_diskctlr2.c	/^int disk_get_depth (int diskno)$/;"	f
disk_get_distance	disksim_diskctlr.c	/^int disk_get_distance(int diskno, ioreq_event *req, int exact, int direction)$/;"	f
disk_get_distance	disksim_diskctlr2.c	/^int disk_get_distance(int diskno, ioreq_event *req, int exact, int direction)$/;"	f
disk_get_effectivehda	disksim_diskctlr.c	/^disk_get_effectivehda(disk *currdisk,$/;"	f	file:
disk_get_inbus	disksim_diskctlr.c	/^int disk_get_inbus (int diskno)$/;"	f
disk_get_inbus	disksim_diskctlr2.c	/^int disk_get_inbus (int diskno)$/;"	f
disk_get_mapping	disksim_disk.c	/^disk_get_mapping(int maptype, $/;"	f
disk_get_maxoutstanding	disksim_diskctlr.c	/^int disk_get_maxoutstanding (int diskno)$/;"	f
disk_get_maxoutstanding	disksim_diskctlr2.c	/^int disk_get_maxoutstanding (int diskno)$/;"	f
disk_get_number_of_blocks	disksim_disk.c	/^int disk_get_number_of_blocks(int n) {$/;"	f
disk_get_numcyls	disksim_disk.c	/^int disk_get_numcyls(int n) {$/;"	f
disk_get_numdisks	disksim_disk.c	/^int disk_get_numdisks (void)$/;"	f
disk_get_remapped_sector	disksim_diskctlr.c	/^disk_get_remapped_sector(disk *currdisk, ioreq_event *curr)$/;"	f	file:
disk_get_remapped_sector	disksim_diskctlr2.c	/^static void disk_get_remapped_sector(disk *currdisk, ioreq_event *curr)$/;"	f	file:
disk_get_seektime	disksim_diskctlr.c	/^disk_get_seektime(int diskno, $/;"	f
disk_get_servtime	disksim_diskctlr.c	/^disk_get_servtime(int diskno, $/;"	f
disk_get_servtime	disksim_diskctlr2.c	/^double disk_get_servtime(int diskno, ioreq_event *req, int checkcache, double maxtime)$/;"	f
disk_get_slotno	disksim_diskctlr.c	/^int disk_get_slotno (int diskno)$/;"	f
disk_get_slotno	disksim_diskctlr2.c	/^int disk_get_slotno (int diskno)$/;"	f
disk_got_remapped_sector	disksim_diskctlr.c	/^static void disk_got_remapped_sector (disk *currdisk, ioreq_event *curr)$/;"	f	file:
disk_got_remapped_sector	disksim_diskctlr2.c	/^static void disk_got_remapped_sector (disk *currdisk, ioreq_event *curr)$/;"	f	file:
disk_goto_remapped_sector	disksim_diskctlr.c	/^static void disk_goto_remapped_sector (disk *currdisk, ioreq_event *curr)$/;"	f	file:
disk_goto_remapped_sector	disksim_diskctlr2.c	/^static void disk_goto_remapped_sector (disk *currdisk, ioreq_event *curr)$/;"	f	file:
disk_hdr_initializer	disksim_disk.c	/^struct device_header disk_hdr_initializer = { $/;"	v	typeref:struct:device_header
disk_hit	opagemap.h	/^int disk_hit;$/;"	v
disk_hit	pagemap.h	/^int disk_hit;$/;"	v
disk_id	cache.h	/^	int disk_id;$/;"	m	struct:outgoing_request
disk_id	cache.h	/^  int disk_id;$/;"	m	struct:induced_subevent
disk_info	disksim_disk.h	/^typedef struct disk_info {$/;"	s
disk_info_t	disksim_disk.h	/^} disk_info_t;$/;"	t	typeref:struct:disk_info
disk_initialize	disksim_disk.c	/^void disk_initialize (void)$/;"	f
disk_initialize_diskinfo	disksim_disk.c	/^static void disk_initialize_diskinfo ()$/;"	f	file:
disk_initiate_seek	disksim_diskctlr.c	/^static int disk_initiate_seek (disk *currdisk, $/;"	f	file:
disk_initiate_seek	disksim_diskctlr2.c	/^static int disk_initiate_seek (disk *currdisk, segment *seg, ioreq_event *curr, int firstseek, double delay, double mintime)$/;"	f	file:
disk_interfere_printstats	disksim_disk.c	/^static void disk_interfere_printstats (int *set, int setsize, char *prefix)$/;"	f	file:
disk_interferestats	disksim_diskcache.c	/^void disk_interferestats (disk *currdisk, ioreq_event *curr)$/;"	f
disk_interrupt_complete	disksim_diskctlr.c	/^static void disk_interrupt_complete (ioreq_event *curr)$/;"	f	file:
disk_interrupt_complete	disksim_diskctlr2.c	/^static void disk_interrupt_complete (ioreq_event *curr)$/;"	f	file:
disk_last_acctime	disksim_disk.h	/^   double disk_last_acctime;$/;"	m	struct:disk_info
disk_last_acctime	disksim_disk.h	539;"	d
disk_last_angle	disksim_disk.h	/^  double disk_last_angle;$/;"	m	struct:disk_info
disk_last_angle	disksim_disk.h	521;"	d
disk_last_cylno	disksim_disk.h	/^   int disk_last_cylno;$/;"	m	struct:disk_info
disk_last_cylno	disksim_disk.h	540;"	d
disk_last_distance	disksim_disk.h	/^   int disk_last_distance;$/;"	m	struct:disk_info
disk_last_distance	disksim_disk.h	535;"	d
disk_last_latency	disksim_disk.h	/^   double disk_last_latency;$/;"	m	struct:disk_info
disk_last_latency	disksim_disk.h	537;"	d
disk_last_seektime	disksim_disk.h	/^   double disk_last_seektime;$/;"	m	struct:disk_info
disk_last_seektime	disksim_disk.h	536;"	d
disk_last_surface	disksim_disk.h	/^   int disk_last_surface;$/;"	m	struct:disk_info
disk_last_surface	disksim_disk.h	541;"	d
disk_last_xfertime	disksim_disk.h	/^   double disk_last_xfertime;$/;"	m	struct:disk_info
disk_last_xfertime	disksim_disk.h	538;"	d
disk_latency_printstats	disksim_disk.c	/^static void disk_latency_printstats (int *set, int setsize, char *prefix)$/;"	f	file:
disk_load_syncsets	disksim_disk.c	/^int disk_load_syncsets(struct lp_block *b) {$/;"	f
disk_postpass	disksim_disk.c	/^static void disk_postpass (void)$/;"	f	file:
disk_postpass_perdisk	disksim_disk.c	/^static void disk_postpass_perdisk (disk *currdisk)$/;"	f	file:
disk_prepare_for_data_transfer	disksim_diskctlr.c	/^disk_prepare_for_data_transfer(ioreq_event *curr)$/;"	f	file:
disk_prepare_for_data_transfer	disksim_diskctlr2.c	/^static void disk_prepare_for_data_transfer (ioreq_event *curr)$/;"	f	file:
disk_preseek_t	disksim_disk.h	/^} disk_preseek_t;$/;"	t	typeref:enum:__anon10
disk_printhack	disksim_disk.h	/^   int disk_printhack;   \/* disk_printhack = 0, 1, or 2 *\/$/;"	m	struct:disk_info
disk_printhack	disksim_disk.h	524;"	d
disk_printhacktime	disksim_disk.h	/^   double disk_printhacktime;$/;"	m	struct:disk_info
disk_printhacktime	disksim_disk.h	525;"	d
disk_printsetstats	disksim_disk.c	/^void disk_printsetstats (int *set, int setsize, char *sourcestr)$/;"	f
disk_printstats	disksim_disk.c	/^void disk_printstats (void)$/;"	f
disk_read_arrive	disksim_diskctlr.c	/^static void disk_read_arrive(disk *currdisk,$/;"	f	file:
disk_reconnection_or_transfer_complete	disksim_diskctlr.c	/^static void disk_reconnection_or_transfer_complete (ioreq_event *curr)$/;"	f	file:
disk_reconnection_or_transfer_complete	disksim_diskctlr2.c	/^static void disk_reconnection_or_transfer_complete (ioreq_event *curr)$/;"	f	file:
disk_release_hda	disksim_diskctlr.c	/^static void disk_release_hda(disk *currdisk, diskreq *currdiskreq)$/;"	f	file:
disk_release_hda	disksim_diskctlr2.c	/^static void disk_release_hda(disk *currdisk, diskreq *currdiskreq)$/;"	f	file:
disk_request_arrive	disksim_diskctlr.c	/^disk_request_arrive(ioreq_event *curr)$/;"	f	file:
disk_request_arrive	disksim_diskctlr2.c	/^static void disk_request_arrive (ioreq_event *curr)$/;"	f	file:
disk_request_complete	disksim_diskctlr.c	/^static void disk_request_complete(disk *currdisk, $/;"	f	file:
disk_request_complete	disksim_diskctlr2.c	/^static void disk_request_complete(disk *currdisk, diskreq *currdiskreq, ioreq_event *curr)$/;"	f	file:
disk_request_needs_bus	disksim_diskctlr.c	/^disk_request_needs_bus(disk *currdisk, $/;"	f	file:
disk_request_needs_bus	disksim_diskctlr2.c	/^static ioreq_event* disk_request_needs_bus(disk *currdisk, diskreq *currdiskreq, int check_watermark)$/;"	f	file:
disk_resetstats	disksim_disk.c	/^void disk_resetstats (void)$/;"	f
disk_seek_printstats	disksim_disk.c	/^static void disk_seek_printstats (int *set, int setsize, char *prefix)$/;"	f	file:
disk_seek_stoptime	disksim_disk.h	/^   double disk_seek_stoptime;$/;"	m	struct:disk_info
disk_seek_stoptime	disksim_disk.h	534;"	d
disk_select_bus_request	disksim_diskctlr.c	/^disk_select_bus_request(disk *currdisk, ioreq_event **busioreq)$/;"	f	file:
disk_select_bus_request	disksim_diskctlr2.c	/^static diskreq* disk_select_bus_request(disk *currdisk, ioreq_event **busioreq)$/;"	f	file:
disk_send_event_up_path	disksim_diskctlr.c	/^static void disk_send_event_up_path (ioreq_event *curr, double delay)$/;"	f	file:
disk_send_event_up_path	disksim_diskctlr2.c	/^static void disk_send_event_up_path (ioreq_event *curr, double delay)$/;"	f	file:
disk_set_depth	disksim_diskctlr.c	/^int disk_set_depth(int diskno, int inbusno, int depth, int slotno)$/;"	f
disk_set_depth	disksim_diskctlr2.c	/^int disk_set_depth (int diskno, int inbusno, int depth, int slotno)$/;"	f
disk_set_syncset	disksim_disk.c	/^void disk_set_syncset (int setstart, int setend)$/;"	f
disk_setcallbacks	disksim_disk.c	/^void disk_setcallbacks ()$/;"	f
disk_state_t	disksim_disk.h	/^} disk_state_t;$/;"	t	typeref:enum:__anon6
disk_syncset_init	disksim_disk.c	/^static void disk_syncset_init (void)$/;"	f	file:
disk_transfer_printstats	disksim_disk.c	/^static void disk_transfer_printstats (int *set, int setsize, char *prefix)$/;"	f	file:
disk_write_arrive	disksim_diskctlr.c	/^static void disk_write_arrive(disk *currdisk,$/;"	f	file:
diskinfo	disksim_global.h	/^   struct disk_info *diskinfo;$/;"	m	struct:disksim	typeref:struct:disksim::disk_info
diskreq	disksim_disk.h	/^} diskreq;$/;"	t	typeref:struct:diskreq_t
diskreq_t	disksim_disk.h	/^typedef struct diskreq_t {$/;"	s
diskreqlist	disksim_disk.h	/^   struct diskreq_t *diskreqlist;       \/* sorted by ascendingly first blkno *\/$/;"	m	struct:seg	typeref:struct:seg::diskreq_t
disks	disksim_disk.h	/^   disk **disks;$/;"	m	struct:disk_info
disks_len	disksim_disk.h	/^   int disks_len; \/* allocated size of disks *\/$/;"	m	struct:disk_info
disksim	disksim.c	/^disksim_t *disksim = NULL;$/;"	v
disksim	disksim_global.h	/^typedef struct disksim {$/;"	s
disksim_bus_loadparams	disksim_bus.c	/^bus *disksim_bus_loadparams(struct lp_block *b, $/;"	f
disksim_bus_printarbwaitstats	disksim_bus.c	/^static int disksim_bus_printarbwaitstats;$/;"	v	file:
disksim_bus_printidlestats	disksim_bus.c	/^static int disksim_bus_printidlestats;$/;"	v	file:
disksim_bus_stats_loadparams	disksim_bus.c	/^int disksim_bus_stats_loadparams(struct lp_block *b) {$/;"	f
disksim_cache_loadparams	disksim_cache.c	/^struct cache_def *disksim_cache_loadparams(struct lp_block *b)$/;"	f
disksim_cachedev_loadparams	disksim_cachedev.c	/^struct cache_def *disksim_cachedev_loadparams(struct lp_block *b)$/;"	f
disksim_cachemem_loadparams	disksim_cachemem.c	/^struct cache_def *disksim_cachemem_loadparams(struct lp_block *b)$/;"	f
disksim_checkpoint	disksim.c	/^void disksim_checkpoint (char *checkpointfilename)$/;"	f
disksim_cleanstats	disksim.c	/^void disksim_cleanstats ()$/;"	f
disksim_cleanup_and_printstats	disksim.c	/^void disksim_cleanup_and_printstats ()$/;"	f
disksim_ctlr_loadparams	disksim_controller.c	/^struct controller *disksim_ctlr_loadparams(struct lp_block *b)$/;"	f
disksim_ctlr_stats_loadparams	disksim_controller.c	/^int disksim_ctlr_stats_loadparams(struct lp_block *b) {$/;"	f
disksim_device_loadparams	disksim_device.c	/^void disksim_device_loadparams(void) {$/;"	f
disksim_device_stats_loadparams	disksim_device.c	/^int disksim_device_stats_loadparams(struct lp_block *b) {$/;"	f
disksim_disk_loadparams	disksim_disk.c	/^disk *disksim_disk_loadparams(struct lp_block *b,$/;"	f
disksim_dumpintq	disksim.c	/^static void disksim_dumpintq ()$/;"	f	file:
disksim_global_loadparams	disksim.c	/^int disksim_global_loadparams(struct lp_block *b)$/;"	f
disksim_initialize_disksim_structure	disksim.c	/^struct disksim * disksim_initialize_disksim_structure (void *addr, int len)$/;"	f
disksim_int_t	disksim_iosim.h	/^} disksim_int_t;$/;"	t	typeref:enum:__anon19
disksim_interface_dump_stats	disksim_interface.c	/^void disksim_interface_dump_stats (struct disksim *disksim_in, SysTime syssimtime)$/;"	f
disksim_interface_dump_stats	disksim_simos_interface.c	/^void disksim_interface_dump_stats (struct disksim *disksim_in, TICS systime)$/;"	f
disksim_interface_initialize	disksim_interface.c	/^disksim_interface_initialize (void *addr, $/;"	f
disksim_interface_initialize	disksim_simos_interface.c	/^struct disksim * disksim_interface_initialize (void *addr, int len, const char *pfile, const char *ofile)$/;"	f
disksim_interface_initialize_latency	disksim_interface.c	/^disksim_interface_initialize_latency (void *addr, $/;"	f
disksim_interface_internal_event	disksim_interface.c	/^void disksim_interface_internal_event (void *disksim_in, SysTime syssimtime)$/;"	f
disksim_interface_internal_event	disksim_simos_interface.c	/^void disksim_interface_internal_event (int cpuNum, EventCallbackHdr *hdr, void *disksim_in)$/;"	f
disksim_interface_io_done_notify	disksim_interface.c	/^static void disksim_interface_io_done_notify (ioreq_event *curr)$/;"	f	file:
disksim_interface_io_done_notify	disksim_simos_interface.c	/^static void disksim_interface_io_done_notify (ioreq_event *curr)$/;"	f	file:
disksim_interface_request_arrive	disksim_interface.c	/^void disksim_interface_request_arrive (struct disksim *disksim_in, $/;"	f
disksim_interface_request_arrive	disksim_simos_interface.c	/^void disksim_interface_request_arrive (struct disksim *disksim_in, Request *r)$/;"	f
disksim_interface_shutdown	disksim_interface.c	/^void disksim_interface_shutdown (struct disksim *disksim_in, SysTime syssimtime)$/;"	f
disksim_interface_shutdown	disksim_simos_interface.c	/^void disksim_interface_shutdown (struct disksim *disksim_in, TICS systime)$/;"	f
disksim_iodriver_loadparams	disksim_iodriver.c	/^struct iodriver *disksim_iodriver_loadparams(struct lp_block *b) {$/;"	f
disksim_iodriver_stats_loadparams	disksim_iodriver.c	/^int disksim_iodriver_stats_loadparams(struct lp_block *b) {$/;"	f
disksim_iomap_loadparams	disksim_iosim.c	/^int disksim_iomap_loadparams(struct lp_block *b) { $/;"	f
disksim_ioqueue_loadparams	disksim_ioqueue.c	/^struct ioqueue *disksim_ioqueue_loadparams(struct lp_block *b,$/;"	f
disksim_iosim_loadparams	disksim_iosim.c	/^int disksim_iosim_loadparams(struct lp_block *b) {$/;"	f
disksim_loadparams	disksim_loadparams.c	/^int disksim_loadparams(char *inputfile, int synthgen) {$/;"	f
disksim_logorg_loadparams	disksim_logorg.c	/^struct logorg *disksim_logorg_loadparams(struct lp_block *b) $/;"	f
disksim_pf_loadparams	disksim_pfsim.c	/^int disksim_pf_loadparams(struct lp_block *b) {$/;"	f
disksim_pf_stats_loadparams	disksim_pfsim.c	/^int disksim_pf_stats_loadparams(struct lp_block *b) {$/;"	f
disksim_printstats	disksim.c	/^void disksim_printstats ()$/;"	f
disksim_rand48_initialize	disksim_rand48.c	/^static void disksim_rand48_initialize ()$/;"	f	file:
disksim_register_checkpoint	disksim.c	/^void disksim_register_checkpoint (double attime)$/;"	f
disksim_restore_from_checkpoint	disksim.c	/^void disksim_restore_from_checkpoint (char *filename)$/;"	f
disksim_run_simulation	disksim.c	/^void disksim_run_simulation ()$/;"	f
disksim_set_external_io_done_notify	disksim.c	/^void disksim_set_external_io_done_notify (void (*func)(ioreq_event *))$/;"	f
disksim_setup_disksim	disksim.c	/^void disksim_setup_disksim (int argc, char **argv)$/;"	f
disksim_setup_iotracefile	disksim.c	/^static void disksim_setup_iotracefile (char *filename)$/;"	f	file:
disksim_setup_outputfile	disksim.c	/^static void disksim_setup_outputfile (char *filename, char *mode)$/;"	f	file:
disksim_simpledisk_loadparams	disksim_simpledisk.c	/^struct simpledisk *disksim_simpledisk_loadparams(struct lp_block *b)$/;"	f
disksim_simpleflash_loadparams	disksim_simpleflash.c	/^struct simpleflash *disksim_simpleflash_loadparams(struct lp_block *b)$/;"	f
disksim_simstop	disksim.c	/^void disksim_simstop ()$/;"	f
disksim_simulate_event	disksim.c	/^void disksim_simulate_event (int num)$/;"	f
disksim_stats_loadparams	disksim_statload.c	/^int disksim_stats_loadparams(struct lp_block *b) {$/;"	f
disksim_syncset_loadparams	disksim_device.c	/^int disksim_syncset_loadparams(struct lp_block *b)$/;"	f
disksim_synthgen_loadparams	disksim_synthio.c	/^int disksim_synthgen_loadparams(struct lp_block *b) { $/;"	f
disksim_synthio_loadparams	disksim_synthio.c	/^int disksim_synthio_loadparams(struct lp_block *b) {$/;"	f
disksim_t	disksim_global.h	/^} disksim_t;$/;"	t	typeref:struct:disksim
disksim_topoloader	disksim_loadparams.c	/^static void disksim_topoloader(struct lp_topospec *ts, int len) {$/;"	f	file:
diskstat	disksim_disk.h	/^} diskstat;$/;"	t	typeref:struct:__anon12
diskstatinit	disksim_disk.c	/^static void diskstatinit (int diskno, int firsttime)$/;"	f	file:
disp	cache.c	/^void disp(request *f)$/;"	f
dist	disksim_synthio.c	/^typedef struct dist {$/;"	s	file:
distavgdiff	disksim_logorg.h	/^   int		distavgdiff[10];$/;"	m	struct:__anon22
distbrks	disksim_stat.h	/^   int     distbrks[DISTSIZE];$/;"	m	struct:__anon35
distmaxdiff	disksim_logorg.h	/^   int		distmaxdiff[10];$/;"	m	struct:__anon22
distname	disksim_synthio.c	/^static int distname(char *name) {$/;"	f	file:
distnames	disksim_synthio.c	/^static char *distnames[] = {$/;"	v	file:
distnumout	disksim_logorg.h	/^   int    distnumout[10];$/;"	m	struct:__anon23
dm_table	disksim_global.h	/^int dm_table[DM_MGR_SIZE];$/;"	v
do_background	syssim_driver2.c	/^static int do_background = 0;$/;"	v	file:
do_free_blocks	disksim_disk.h	/^  int do_free_blocks;$/;"	m	struct:disk_info
do_free_blocks	disksim_disk.h	520;"	d
do_input_trace	syssim_driver2.c	/^static int do_input_trace=0;$/;"	v	file:
done10	syssim_driver2.c	/^static int done10=0;$/;"	v	file:
done100	syssim_driver2.c	/^static int done100=0;$/;"	v	file:
done20	syssim_driver2.c	/^static int done20=0;$/;"	v	file:
done30	syssim_driver2.c	/^static int done30=0;$/;"	v	file:
done40	syssim_driver2.c	/^static int done40=0;$/;"	v	file:
done50	syssim_driver2.c	/^static int done50=0;$/;"	v	file:
done60	syssim_driver2.c	/^static int done60=0;$/;"	v	file:
done70	syssim_driver2.c	/^static int done70=0;$/;"	v	file:
done80	syssim_driver2.c	/^static int done80=0;$/;"	v	file:
done90	syssim_driver2.c	/^static int done90=0;$/;"	v	file:
done95	syssim_driver2.c	/^static int done95=0;$/;"	v	file:
doneArg	disksim_simos_interface.h	/^  int doneArg;$/;"	m	struct:__anon32
donefunc	disksim_cachedev.c	/^   void (**donefunc)(void *,ioreq_event *);	\/* Function to call when complete *\/$/;"	m	struct:cacheevent	file:
donefunc	disksim_cachemem.c	/^   void (**donefunc)(void *,ioreq_event *);	\/* Function to call when complete *\/$/;"	m	struct:cacheevent	file:
donefunc_cachedev_empty	disksim_global.h	/^   void         (*donefunc_cachedev_empty) (void *, ioreq_event *);$/;"	m	struct:disksim
donefunc_cachemem_empty	disksim_global.h	/^   void         (*donefunc_cachemem_empty) (void *, ioreq_event *);$/;"	m	struct:disksim
donefunc_ctlrsmart_read	disksim_global.h	/^   void         (*donefunc_ctlrsmart_read) (void *, ioreq_event *);$/;"	m	struct:disksim
donefunc_ctlrsmart_write	disksim_global.h	/^   void         (*donefunc_ctlrsmart_write)(void *, ioreq_event *);$/;"	m	struct:disksim
doneiolist	disksim_pfsim.h	/^   ioreq_event *doneiolist;$/;"	m	struct:pf_info
doneiolist	disksim_pfsim.h	296;"	d
doneparam	disksim_cachedev.c	/^   void *doneparam;		\/* parameter for donefunc *\/$/;"	m	struct:cacheevent	file:
doneparam	disksim_cachemem.c	/^   void *doneparam;		\/* parameter for donefunc *\/$/;"	m	struct:cacheevent	file:
driver_copy	disksim_iodriver.c	/^static iodriver *driver_copy(iodriver *orig) {$/;"	f	file:
drivertype	disksim_hptrace.h	/^   u_int32_t       drivertype; \/* type of driver used by this disk *\/$/;"	m	struct:__anon16
dropit	disksim_pfsim.h	/^   int    dropit;$/;"	m	struct:__anon31
drv_printblockingstats	disksim_iodriver.h	/^   int drv_printblockingstats;$/;"	m	struct:iodriver_info
drv_printblockingstats	disksim_iodriver.h	192;"	d
drv_printcritstats	disksim_iodriver.h	/^   int drv_printcritstats;$/;"	m	struct:iodriver_info
drv_printcritstats	disksim_iodriver.h	195;"	d
drv_printidlestats	disksim_iodriver.h	/^   int drv_printidlestats;$/;"	m	struct:iodriver_info
drv_printidlestats	disksim_iodriver.h	196;"	d
drv_printintarrstats	disksim_iodriver.h	/^   int drv_printintarrstats;$/;"	m	struct:iodriver_info
drv_printintarrstats	disksim_iodriver.h	197;"	d
drv_printinterferestats	disksim_iodriver.h	/^   int drv_printinterferestats;$/;"	m	struct:iodriver_info
drv_printinterferestats	disksim_iodriver.h	193;"	d
drv_printlocalitystats	disksim_iodriver.h	/^   int drv_printlocalitystats;$/;"	m	struct:iodriver_info
drv_printlocalitystats	disksim_iodriver.h	191;"	d
drv_printperdiskstats	disksim_iodriver.h	/^   int drv_printperdiskstats;$/;"	m	struct:iodriver_info
drv_printperdiskstats	disksim_iodriver.h	200;"	d
drv_printqueuestats	disksim_iodriver.h	/^   int drv_printqueuestats;$/;"	m	struct:iodriver_info
drv_printqueuestats	disksim_iodriver.h	194;"	d
drv_printsizestats	disksim_iodriver.h	/^   int drv_printsizestats;$/;"	m	struct:iodriver_info
drv_printsizestats	disksim_iodriver.h	190;"	d
drv_printstampstats	disksim_iodriver.h	/^   int drv_printstampstats;$/;"	m	struct:iodriver_info
drv_printstampstats	disksim_iodriver.h	199;"	d
drv_printstreakstats	disksim_iodriver.h	/^   int drv_printstreakstats;$/;"	m	struct:iodriver_info
drv_printstreakstats	disksim_iodriver.h	198;"	d
dump_cyl_count	syssim_driver2.c	/^void dump_cyl_count(int devno){$/;"	f
ec	nand.h	/^   int ec;$/;"	m	struct:blk_state
effectivebus	disksim_disk.h	/^  diskreq     *effectivebus;$/;"	m	struct:disk
effectivehda	disksim_disk.h	/^  diskreq     *effectivehda;$/;"	m	struct:disk
emptyqueuestats	disksim_iodriver.h	/^   statgen emptyqueuestats;$/;"	m	struct:iodriver_info
emptyqueuestats	disksim_iodriver.h	201;"	d
enablecache	disksim_disk.h	/^  int		enablecache;$/;"	m	struct:disk
enablement	disksim_ioqueue.c	/^   int		(**enablement)(ioreq_event *);$/;"	m	struct:subq	file:
enablement_disk	disksim_global.h	/^   int          (*enablement_disk)         (ioreq_event *);$/;"	m	struct:disksim
end	ftl.h	/^  void   (*end)  ();$/;"	m	struct:ftl_operation
endFlash	ssd_interface.c	/^void endFlash()$/;"	f
endFlash	ssd_interface_noopt.c	/^void endFlash()$/;"	f
endFlash	ssd_interface_opt.c	/^void endFlash()$/;"	f
end_line_sectorid	cache.h	/^unsigned long end_line_sectorid; $/;"	v
end_seq_cnt	disksim_logorg.c	/^int end_seq_cnt;$/;"	v
end_window_time	disksim_logorg.c	/^double end_window_time = 0.0;$/;"	v
endblkno	disksim_disk.h	/^   int          endblkno;$/;"	m	struct:seg
enddev	disksim_logorg.h	/^   int    enddev;$/;"	m	struct:logorg
endian	disksim_global.h	/^   int    endian;$/;"	m	struct:disksim
endian	hplcomb.c	/^int endian = _LITTLE_ENDIAN;$/;"	v
entry	disksim_cachemem.c	/^   struct cacheevent *entry[CACHE_LOCKSPERSTRUCT];$/;"	m	struct:cachelockw	typeref:struct:cachelockw::cacheevent	file:
entry	disksim_cachemem.c	/^   struct ioreq_ev *entry[CACHE_LOCKSPERSTRUCT];$/;"	m	struct:cachelockh	typeref:struct:cachelockh::ioreq_ev	file:
entry	heap.h	/^  heap entry[TOTAL_MAP_SIZE];$/;"	m	struct:__anon37
entry_s	syssim_driver2.c	/^typedef struct entry_s {$/;"	s	file:
entry_t	syssim_driver2.c	/^} entry_t;$/;"	t	typeref:struct:entry_s	file:
equals	disksim_stat.h	/^   int     equals;$/;"	m	struct:__anon35
erase_rate_req_cnt	disksim_logorg.c	/^int erase_rate_req_cnt = 0;$/;"	v
erase_window_size	disksim_logorg.c	/^int erase_window_size= 10;$/;"	v
error_handler	raw_layout.c	67;"	d	file:
ev	disksim_global.h	/^typedef struct ev {$/;"	s
event	disksim_global.h	/^} event;$/;"	t	typeref:struct:ev
event_arrive	disksim_device.h	/^  void    (*event_arrive)(ioreq_event *curr);$/;"	m	struct:device_header
event_copy	disksim.c	/^event *event_copy (event *orig)$/;"	f
event_count	disksim_interface.c	/^static int event_count = 0;$/;"	v	file:
eventlist	disksim_global.h	/^   event  *eventlist;$/;"	m	struct:intr_ev
eventlist	disksim_pfsim.h	/^   event *eventlist;$/;"	m	struct:process
evict	opagemap.h	/^int evict;$/;"	v
evict	pagemap.h	/^int evict;$/;"	v
expected_year	disksim_logorg.c	/^double expected_year = 0.0;$/;"	v
exponential_delay	syssim_driver2.c	/^double exponential_delay()$/;"	f
exponential_sectorcount	syssim_driver2.c	/^int exponential_sectorcount()$/;"	f
external_control	disksim_global.h	/^   int    external_control;$/;"	m	struct:disksim
external_io_done_notify	disksim_global.h	/^   void   (*external_io_done_notify)(ioreq_event *curr);$/;"	m	struct:disksim
extintrs	disksim_pfsim.h	/^   int        extintrs;$/;"	m	struct:__anon26
extra_blk_num	blockmap.c	/^static blk_t extra_blk_num;$/;"	v	file:
extra_blk_num	blockmap_aayush.c	/^static blk_t extra_blk_num;$/;"	v	file:
extra_blk_num	opagemap.c	/^blk_t extra_blk_num;$/;"	v
extra_blk_num	opagemap.youkim.c	/^blk_t extra_blk_num;$/;"	v
extra_blk_num	opagemap_noopt.c	/^blk_t extra_blk_num;$/;"	v
extra_blk_num	opagemap_opt.c	/^blk_t extra_blk_num;$/;"	v
extra_blk_num	pagemap.c	/^blk_t extra_blk_num;$/;"	v
extra_blk_num	pagemap_aayush.c	/^static blk_t extra_blk_num;$/;"	v	file:
extra_process_q	disksim_pfsim.h	/^   process *extra_process_q;$/;"	m	struct:pf_info
extra_process_q	disksim_pfsim.h	292;"	d
extra_process_qlen	disksim_pfsim.h	/^   int  extra_process_qlen;$/;"	m	struct:pf_info
extra_process_qlen	disksim_pfsim.h	293;"	d
extra_seek_stat	syssim_driver2.c	/^static statgen *extra_seek_stat;$/;"	v	file:
extra_seek_stat_inst	syssim_driver2.c	/^static statgen *extra_seek_stat_inst;$/;"	v	file:
extra_settle_angle	syssim_driver2.c	/^static float extra_settle_angle = 0.0;$/;"	v	file:
extra_time	syssim_driver2.c	/^  float extra_time;$/;"	m	struct:cyl_node_s	file:
extra_write_disconnect	disksim_disk.h	/^  int		extra_write_disconnect;$/;"	m	struct:disk
extra_write_disconnects	disksim_disk.h	/^   int extra_write_disconnects;$/;"	m	struct:disk_info
extra_write_disconnects	disksim_disk.h	527;"	d
extradisc_command	disksim_disk.h	/^  double	extradisc_command;$/;"	m	struct:disk
extradisc_disconnect1	disksim_disk.h	/^  double	extradisc_disconnect1;$/;"	m	struct:disk
extradisc_disconnect2	disksim_disk.h	/^  double	extradisc_disconnect2;$/;"	m	struct:disk
extradisc_diskreq	disksim_disk.h	/^  struct diskreq_t *extradisc_diskreq;$/;"	m	struct:disk	typeref:struct:disk::diskreq_t
extradisc_inter_disconnect	disksim_disk.h	/^  double	extradisc_inter_disconnect;$/;"	m	struct:disk
extradisc_seekdelta	disksim_disk.h	/^  double	extradisc_seekdelta;$/;"	m	struct:disk
extraq	disksim_global.h	/^   event *extraq;$/;"	m	struct:disksim
extraqlen	disksim_global.h	/^   int    extraqlen;$/;"	m	struct:disksim
extrblocks	disksim_simpleflash.c	/^    int extrblocks;$/;"	m	struct:simpleflash	file:
falseidletime	disksim_pfsim.h	/^   double     falseidletime;$/;"	m	struct:__anon26
falseidletime	disksim_pfsim.h	/^   double falseidletime;$/;"	m	struct:process
fastwrites	disksim_disk.h	/^  int		fastwrites;$/;"	m	struct:disk
fillreadatoms	disksim_cachemem.c	/^   int fillreadatoms;$/;"	m	struct:__anon3	file:
fillreads	disksim_cachemem.c	/^   int fillreads;$/;"	m	struct:__anon3	file:
find_blk	ssd_interface.c	/^void find_blk(int * hot_blk, int * cold_blk)$/;"	f
find_cold_blk	ssd_interface.c	/^void find_cold_blk(int *cold_blk, int curr_blk)$/;"	f
find_flash_cache_container	cache.c	/^struct flash_cache_container* find_flash_cache_container(struct flash_cache_container* ds, unsigned long arr_len, unsigned long sectorid)$/;"	f
find_free_pos	ssd_interface.c	/^int find_free_pos( int *arr, int size)$/;"	f
find_free_pos	ssd_interface_noopt.c	/^int find_free_pos( int *arr, int size)$/;"	f
find_free_pos	ssd_interface_opt.c	/^int find_free_pos( int *arr, int size)$/;"	f
find_min_cache	ssd_interface.c	/^void find_min_cache()$/;"	f
find_min_cache	ssd_interface_noopt.c	/^void find_min_cache()$/;"	f
find_min_cache	ssd_interface_opt.c	/^void find_min_cache()$/;"	f
find_min_ghost_entry	ssd_interface.c	/^int find_min_ghost_entry()$/;"	f
find_min_ghost_entry	ssd_interface_noopt.c	/^int find_min_ghost_entry()$/;"	f
find_min_ghost_entry	ssd_interface_opt.c	/^int find_min_ghost_entry()$/;"	f
find_real_max	ssd_interface.c	/^void find_real_max()$/;"	f
find_real_max	ssd_interface_noopt.c	/^void find_real_max()$/;"	f
find_real_max	ssd_interface_opt.c	/^void find_real_max()$/;"	f
find_real_min	ssd_interface.c	/^void find_real_min()$/;"	f
find_real_min	ssd_interface_noopt.c	/^void find_real_min()$/;"	f
find_real_min	ssd_interface_opt.c	/^void find_real_min()$/;"	f
finish_sector	syssim_driver2.c	/^  unsigned short finish_sector;$/;"	m	struct:alg_args_s	file:
firstio	disksim_iotrace.h	/^   int firstio;$/;"	m	struct:iotrace_info
firstio	disksim_iotrace.h	103;"	d
flag	disksim_iosim.h	/^   int          flag;$/;"	m	struct:__anon21
flag	disksim_synthio.c	/^int flag = 1;$/;"	v
flag1	ssd_interface.c	/^int flag1 = 1;$/;"	v
flag1	ssd_interface_noopt.c	/^int flag1 = 1;$/;"	v
flag1	ssd_interface_opt.c	/^int flag1 = 1;$/;"	v
flag_er_cnt	ssd_interface.h	/^int flag_er_cnt;$/;"	v
flags	disksim_cachedev.c	/^   int flags;$/;"	m	struct:cacheevent	file:
flags	disksim_cachemem.c	/^   int flags;$/;"	m	struct:cacheevent	file:
flags	disksim_disk.h	/^   int			flags;$/;"	m	struct:diskreq_t
flags	disksim_global.h	/^   int    flags;$/;"	m	struct:intr_ev
flags	disksim_global.h	/^   u_int  flags;$/;"	m	struct:ioreq_ev
flags	disksim_ioqueue.c	/^   int       flags;$/;"	m	struct:iob	file:
flags	disksim_iosim.h	/^   int          flags;$/;"	m	struct:__anon20
flags	disksim_logorg.h	/^   u_int  flags;$/;"	m	struct:os
flags	disksim_pfsim.h	/^   u_int flags;$/;"	m	struct:process
flash_cache_container	cache.h	/^struct flash_cache_container$/;"	s
flash_cache_ds	cache.h	/^struct flash_cache_container* flash_cache_ds; \/\/This is the hash data structure to hold the real flash lines$/;"	v	typeref:struct:flash_cache_container
flash_cache_ds_array_size	cache.h	/^unsigned long flash_cache_ds_array_size; \/\/This is the length of the array used for the linear hash chain structure $/;"	v
flash_cache_ghost_ds	cache.h	/^struct flash_cache_container* flash_cache_ghost_ds; \/\/This is the hash data structure to hold the ghost flash lines $/;"	v	typeref:struct:flash_cache_container
flash_cache_ghost_ds_array_size	cache.h	/^unsigned long flash_cache_ghost_ds_array_size;$/;"	v
flash_cache_line	cache.h	/^struct flash_cache_line$/;"	s
flash_erase_num	ssd_interface.h	/^int flash_erase_num;$/;"	v
flash_extrblocks	disksim_global.h	/^int flash_extrblocks; $/;"	v
flash_extrblocks	disksim_simpleflash.c	/^int flash_extrblocks;$/;"	v
flash_gc_read_num	ssd_interface.h	/^int flash_gc_read_num;$/;"	v
flash_gc_write_num	ssd_interface.h	/^int flash_gc_write_num;$/;"	v
flash_ghost_size_in_sectors	cache.c	/^unsigned long flash_ghost_size_in_sectors = 128; $/;"	v
flash_hit	opagemap.h	/^int flash_hit;$/;"	v
flash_hit	pagemap.h	/^int flash_hit;$/;"	v
flash_numblocks	disksim_global.h	/^int flash_numblocks; $/;"	v
flash_numblocks	disksim_simpleflash.c	/^int flash_numblocks;$/;"	v
flash_oob_read_num	ssd_interface.h	/^int flash_oob_read_num;$/;"	v
flash_oob_write_num	ssd_interface.h	/^int flash_oob_write_num;$/;"	v
flash_read_num	ssd_interface.h	/^int flash_read_num;$/;"	v
flash_size_in_sectors	cache.c	/^unsigned long flash_size_in_sectors = 128; $/;"	v
flash_utilization_size_in_sectors	cache.c	/^unsigned long flash_utilization_size_in_sectors = 128; $/;"	v
flash_valid	pagemap.h	/^  int  flash_valid;   \/\/ 1 flash 0 disk$/;"	m	struct:pm_entry
flash_write_num	ssd_interface.h	/^int flash_write_num;$/;"	v
flush	ssd_interface.c	/^void flush(int flush_flag)$/;"	f
flush_idledelay	disksim_cachedev.c	/^   double flush_idledelay;$/;"	m	struct:cache_def	file:
flush_idledelay	disksim_cachemem.c	/^   double flush_idledelay;$/;"	m	struct:cache_def	file:
flush_maxlinecluster	disksim_cachemem.c	/^   int flush_maxlinecluster;$/;"	m	struct:cache_def	file:
flush_period	disksim_cachedev.c	/^   double flush_period;$/;"	m	struct:cache_def	file:
flush_period	disksim_cachemem.c	/^   double flush_period;$/;"	m	struct:cache_def	file:
flush_policy	disksim_cachedev.c	/^   int flush_policy;$/;"	m	struct:cache_def	file:
flush_policy	disksim_cachemem.c	/^   int flush_policy;$/;"	m	struct:cache_def	file:
foo	disksim_global.h	/^typedef struct foo {$/;"	s
foo	disksim_global.h	/^} foo;$/;"	t	typeref:struct:foo
force_absolute_fcfs	disksim_ioqueue.c	/^   int		force_absolute_fcfs;$/;"	m	struct:subq	file:
fp_flash_stat	ssd_interface.c	/^FILE *fp_flash_stat;$/;"	v
fp_flash_stat	ssd_interface_noopt.c	/^FILE *fp_flash_stat;$/;"	v
fp_flash_stat	ssd_interface_opt.c	/^FILE *fp_flash_stat;$/;"	v
fp_gc	ssd_interface.c	/^FILE *fp_gc;$/;"	v
fp_gc	ssd_interface_noopt.c	/^FILE *fp_gc;$/;"	v
fp_gc	ssd_interface_opt.c	/^FILE *fp_gc;$/;"	v
fp_gc_timeseries	ssd_interface.c	/^FILE *fp_gc_timeseries;$/;"	v
fp_merge	disksim_synthio.c	/^FILE * fp_merge;$/;"	v
fp_total_unique_blk_num	ssd_interface.c	/^FILE *fp_total_unique_blk_num;$/;"	v
fp_valid_pg_cnt	fast.c	/^FILE *fp_valid_pg_cnt;$/;"	v
fp_valid_pg_cnt	opagemap.c	/^FILE *fp_valid_pg_cnt;$/;"	v
fpc	fast.c	/^    int fpc; \/\/ free page count within a block $/;"	m	struct:LogMap	file:
fpc	fast.youkim.c	/^    int fpc; \/\/ free page count within a block $/;"	m	struct:LogMap	file:
fpc	fast_bk.c	/^    int fpc; \/\/ free page count within a block $/;"	m	struct:LogMap	file:
fpc	last.c	/^    int fpc; \/\/ free page count within a block $/;"	m	struct:LogMap	file:
fpc	nand.h	/^  _s32 fpc : 10; \/\/ free page counter$/;"	m	struct:nand_blk_info
free	nand.h	/^   int free;$/;"	m	struct:blk_state
free	nand.h	/^  _u32 free  :  1;$/;"	m	struct:sect_state
free	opagemap.h	/^  _u32 free  : 1;$/;"	m	struct:opm_entry
free	pagemap.h	/^  _u32 free  : 1;$/;"	m	struct:pm_entry
free	pagemap_aayush.c	/^  _u32 free  : 1;$/;"	m	struct:pm_entry	file:
free_RW_blk_num	fast.c	/^int free_RW_blk_num;$/;"	v
free_RW_blk_num	fast.youkim.c	/^int free_RW_blk_num;$/;"	v
free_RW_blk_num	fast_bk.c	/^int free_RW_blk_num;$/;"	v
free_RW_blk_num	last.c	/^int free_RW_blk_num;$/;"	v
free_SW_blk_num	fast.c	/^int free_SW_blk_num;$/;"	v
free_SW_blk_num	fast.youkim.c	/^int free_SW_blk_num;$/;"	v
free_SW_blk_num	fast_bk.c	/^int free_SW_blk_num;$/;"	v
free_SW_blk_num	last.c	/^int free_SW_blk_num;$/;"	v
free_bandwidth	syssim_driver2.c	/^static float free_bandwidth;$/;"	v	file:
free_bandwidth_stat	syssim_driver2.c	/^static statgen *free_bandwidth_stat;$/;"	v	file:
free_bandwidth_stat_inst	syssim_driver2.c	/^static statgen *free_bandwidth_stat_inst;$/;"	v	file:
free_blk_idx	nand.h	/^_u32 free_blk_idx;$/;"	v
free_blk_no	nand_aayush.c	/^_u32 free_blk_num, free_blk_no;$/;"	v
free_blk_no	opagemap.c	/^_u32 free_blk_no[3];$/;"	v
free_blk_no	opagemap.youkim.c	/^_u32 free_blk_no[2];$/;"	v
free_blk_no	opagemap_noopt.c	/^_u32 free_blk_no[2];$/;"	v
free_blk_no	opagemap_opt.c	/^_u32 free_blk_no[2];$/;"	v
free_blk_no	pagemap.c	/^_u32 free_blk_no[2];$/;"	v
free_blk_no	pagemap_aayush.c	/^static _u32 free_blk_no[2];$/;"	v	file:
free_blk_num	nand.h	/^_u32 free_blk_num;$/;"	v
free_blk_num	nand_aayush.c	/^_u32 free_blk_num, free_blk_no;$/;"	v
free_block_count	syssim_driver2.c	/^  unsigned int *free_block_count;$/;"	m	struct:entry_s	file:
free_block_rate	syssim_driver2.c	/^static FILE *free_block_rate;$/;"	v	file:
free_block_request	syssim_driver2.c	/^void free_block_request(unsigned short cyl, unsigned short sector,  float angle, unsigned short surface, int devno){$/;"	f
free_blocks	syssim_driver2.c	/^static int *free_blocks;$/;"	v	file:
free_count	syssim_driver2.c	/^static int **free_count;$/;"	v	file:
free_count_stat	syssim_driver2.c	/^static statgen **free_count_stat;$/;"	v	file:
free_count_track	syssim_driver2.c	/^static unsigned short ***free_count_track;$/;"	v	file:
free_cyl_pop_stat	syssim_driver2.c	/^static statgen **free_cyl_pop_stat;$/;"	v	file:
free_cyl_stat	syssim_driver2.c	/^static statgen **free_cyl_stat;$/;"	v	file:
free_demand_count_stat	syssim_driver2.c	/^static statgen **free_demand_count_stat;$/;"	v	file:
free_page_no	opagemap.c	/^_u16 free_page_no[3];$/;"	v
free_page_no	opagemap.youkim.c	/^_u16 free_page_no[2];$/;"	v
free_page_no	opagemap_noopt.c	/^_u16 free_page_no[2];$/;"	v
free_page_no	opagemap_opt.c	/^_u16 free_page_no[2];$/;"	v
free_page_no	pagemap.c	/^_u16 free_page_no[2];$/;"	v
free_page_no	pagemap_aayush.c	/^static _u16 free_page_no[2];$/;"	v	file:
free_pop_stat	syssim_driver2.c	/^static statgen **free_pop_stat;$/;"	v	file:
free_time	syssim_driver2.c	/^long free_time;$/;"	v
freeblockcleans	disksim_cachemem.c	/^   int freeblockcleans;$/;"	m	struct:__anon3	file:
freeblockdirtys	disksim_cachemem.c	/^   int freeblockdirtys;$/;"	m	struct:__anon3	file:
freelist	disksim_cachemem.c	/^   cache_atom *freelist;$/;"	m	struct:__anon4	file:
front	cache.c	/^request *front = NULL;$/;"	v
ftl_op	ssd_interface.h	/^struct ftl_operation * ftl_op;$/;"	v	typeref:struct:ftl_operation
ftl_operation	ftl.h	/^struct ftl_operation {$/;"	s
ftl_type	disksim_global.h	/^int ftl_type; $/;"	v
ftl_type	disksim_simpleflash.c	/^int ftl_type = -1;$/;"	v
ftl_type	ssd_interface.h	/^int ftl_type;$/;"	v
full_merge	disksim_synthio.c	/^int full_merge = 0;$/;"	v
full_merge_cost	fast.c	/^FILE * full_merge_cost;$/;"	v
fullreadhits	disksim_disk.h	/^   int     fullreadhits;$/;"	m	struct:__anon12
func	disksim_global.h	/^   void (**func)(struct timer_ev *);$/;"	m	struct:timer_ev
funcptr	syssim_driver2.c	/^typedef int (*funcptr)(alg_args_t *);$/;"	t	file:
gc_di	ssd_interface.c	/^double gc_di =0 ,gc_ti=0;$/;"	v
gc_di	ssd_interface_noopt.c	/^double gc_di =0 ,gc_ti=0;$/;"	v
gc_di	ssd_interface_opt.c	/^double gc_di =0 ,gc_ti=0;$/;"	v
gc_map_pg_read_vict_DB	opagemap.c	/^int gc_map_pg_read_vict_DB = 0;$/;"	v
gc_map_pg_write_vict_DB	opagemap.c	/^int gc_map_pg_write_vict_DB = 0;$/;"	v
gc_page_rd_cnt	blockmap.c	/^int gc_page_rd_cnt = 0;$/;"	v
gc_page_rd_cnt	blockmap_aayush.c	/^int gc_page_rd_cnt = 0;$/;"	v
gc_page_wr_cnt	blockmap.c	/^int gc_page_wr_cnt = 0;$/;"	v
gc_page_wr_cnt	blockmap_aayush.c	/^int gc_page_wr_cnt = 0;$/;"	v
gc_ti	ssd_interface.c	/^double gc_di =0 ,gc_ti=0;$/;"	v
gc_ti	ssd_interface_noopt.c	/^double gc_di =0 ,gc_ti=0;$/;"	v
gc_ti	ssd_interface_opt.c	/^double gc_di =0 ,gc_ti=0;$/;"	v
gen	disksim_synthio.c	/^typedef struct gen {$/;"	s	file:
genintr	disksim_synthio.c	/^   synthio_distr  genintr;$/;"	m	struct:gen	file:
gens	disksim_logorg.h	/^   int		gens[NUMGENS];$/;"	m	struct:__anon22
getFirstRWblk	fast.c	/^int getFirstRWblk()$/;"	f
getFirstRWblk	fast.youkim.c	/^int getFirstRWblk()$/;"	f
getFirstRWblk	fast_bk.c	/^int getFirstRWblk()$/;"	f
getFirstRWblk	last.c	/^int getFirstRWblk()$/;"	f
getLastlpnfromPMT	fast.c	/^int getLastlpnfromPMT()$/;"	f
getLastlpnfromPMT	fast.youkim.c	/^int getLastlpnfromPMT()$/;"	f
getLastlpnfromPMT	fast_bk.c	/^int getLastlpnfromPMT()$/;"	f
getLastlpnfromPMT	last.c	/^int getLastlpnfromPMT()$/;"	f
getPbnFromBMT	fast.c	/^int getPbnFromBMT(int lbn)$/;"	f
getPbnFromBMT	fast.youkim.c	/^int getPbnFromBMT(int lbn)$/;"	f
getPbnFromBMT	fast_bk.c	/^int getPbnFromBMT(int lbn)$/;"	f
getPbnFromBMT	last.c	/^int getPbnFromBMT(int lbn)$/;"	f
getRWblk	fast.c	/^int getRWblk()$/;"	f
getRWblk	fast.youkim.c	/^int getRWblk()$/;"	f
getRWblk	fast_bk.c	/^int getRWblk()$/;"	f
getRWblk	last.c	/^int getRWblk()$/;"	f
get_SW_blk_from_PMT	fast.c	/^struct LogMap get_SW_blk_from_PMT()$/;"	f
get_SW_blk_from_PMT	fast.youkim.c	/^struct LogMap get_SW_blk_from_PMT()$/;"	f
get_SW_blk_from_PMT	fast_bk.c	/^struct LogMap get_SW_blk_from_PMT()$/;"	f
get_SW_blk_from_PMT	last.c	/^struct LogMap get_SW_blk_from_PMT()$/;"	f
get_acctime	disksim_device.h	/^  double  (*get_acctime)(int diskno, $/;"	m	struct:device_header
get_avg_sectpercyl	disksim_device.h	/^  int     (*get_avg_sectpercyl)(int devno);$/;"	m	struct:device_header
get_blktranstime	disksim_device.h	/^  double  (*get_blktranstime)(ioreq_event *curr);$/;"	m	struct:device_header
get_busno	disksim_device.h	/^  int     (*get_busno)(ioreq_event *curr);$/;"	m	struct:device_header
get_cachetype	disksim_cache.c	/^static int get_cachetype (struct cache_def *cache)$/;"	f	file:
get_depth	disksim_device.h	/^  int     (*get_depth)(int diskno);$/;"	m	struct:device_header
get_device_maxoutstanding	disksim_iodriver.c	/^static void get_device_maxoutstanding (iodriver *curriodriver, device * dev)$/;"	f	file:
get_distance	disksim_device.h	/^  int     (*get_distance)(int diskno, $/;"	m	struct:device_header
get_global_sectorid	cache.c	/^unsigned long get_global_sectorid(int disk_id,unsigned long local_sectorid)$/;"	f
get_inbus	disksim_device.h	/^  int     (*get_inbus)(int diskno);$/;"	m	struct:device_header
get_key_metric	cache.c	/^double get_key_metric(struct flash_cache_line* fcl)$/;"	f
get_line	rms.c	/^void get_line(filename, x, y, distname)$/;"	f
get_local_diskid_and_sectorid	cache.c	/^void get_local_diskid_and_sectorid(unsigned long global_sectorid,int* diskid, unsigned long* local_sectorid)$/;"	f
get_mapping	disksim_device.h	/^  void    (*get_mapping)(int maptype, $/;"	m	struct:device_header
get_maxoutstanding	disksim_device.h	/^  int     (*get_maxoutstanding)(int diskno);$/;"	m	struct:device_header
get_new_SW_blk	fast.c	/^struct seq_log_blk get_new_SW_blk()$/;"	f
get_new_SW_blk	fast.youkim.c	/^struct seq_log_blk get_new_SW_blk()$/;"	f
get_new_SW_blk	fast_bk.c	/^struct seq_log_blk get_new_SW_blk()$/;"	f
get_new_SW_blk	last.c	/^struct seq_log_blk get_new_SW_blk()$/;"	f
get_number_of_blocks	disksim_device.h	/^  int     (*get_number_of_blocks)(int diskno);$/;"	m	struct:device_header
get_numcyls	disksim_device.h	/^  int     (*get_numcyls)(int diskno);$/;"	m	struct:device_header
get_seektime	disksim_device.h	/^  double  (*get_seektime)(int diskno, $/;"	m	struct:device_header
get_servtime	disksim_device.h	/^  double  (*get_servtime)(int diskno, $/;"	m	struct:device_header
get_slotno	disksim_device.h	/^  int     (*get_slotno)(int diskno);$/;"	m	struct:device_header
get_time	syssim_driver2.c	/^inline long long get_time(){$/;"	f
getblockreaddones	disksim_cachemem.c	/^   int getblockreaddones;$/;"	m	struct:__anon3	file:
getblockreadstarts	disksim_cachemem.c	/^   int getblockreadstarts;$/;"	m	struct:__anon3	file:
getblockwritedones	disksim_cachemem.c	/^   int getblockwritedones;$/;"	m	struct:__anon3	file:
getblockwritestarts	disksim_cachemem.c	/^   int getblockwritestarts;$/;"	m	struct:__anon3	file:
getbus	disksim_bus.c	/^\/* INLINE *\/ static struct bus * getbus (int busno)$/;"	f	file:
getbusbyname	disksim_bus.c	/^struct bus *getbusbyname(char *name, int *num) {$/;"	f
getctlr	disksim_controller.c	/^INLINE controller * getctlr (int ctlrno)$/;"	f
getctlrbyname	disksim_controller.c	/^controller *getctlrbyname(char *name, int *num) {$/;"	f
getdevbyname	disksim_device.c	/^getdevbyname(char *name, $/;"	f
getdisk	disksim_disk.c	/^INLINE struct disk *getdisk (int diskno)$/;"	f
getfromextraq	disksim.c	/^INLINE event * getfromextraq ()$/;"	f
getfromintq	disksim.c	/^INLINE static event * getfromintq ()$/;"	f	file:
getiodriverbyname	disksim_iodriver.c	/^struct iodriver *getiodriverbyname(char *name, int *num) {$/;"	f
getlogorgbyname	disksim_logorg.c	/^logorg *getlogorgbyname(logorg **logorgs, $/;"	f
getlogorgdevs	disksim_logorg.c	/^static int getlogorgdevs(logorg *result, struct lp_list *l) {$/;"	f	file:
getnextevent	disksim.c	/^INLINE static event * getnextevent ()$/;"	f	file:
getparam_bool	disksim.c	/^void getparam_bool (FILE *parfile, char *parname, int *parptr)$/;"	f
getparam_double	disksim.c	/^void getparam_double (FILE *parfile, char *parname, double *parptr,$/;"	f
getparam_int	disksim.c	/^void getparam_int (FILE *parfile, char *parname, int *parptr,$/;"	f
getsimpledisk	disksim_simpledisk.c	/^struct simpledisk *getsimpledisk (int devno)$/;"	f
getsimpleflash	disksim_simpleflash.c	/^struct simpleflash *getsimpleflash (int devno)$/;"	f
ghost_arr	ssd_interface.c	/^int ghost_arr[MAP_GHOST_MAX_ENTRIES];$/;"	v
ghost_arr	ssd_interface_noopt.c	/^int ghost_arr[MAP_GHOST_MAX_ENTRIES];$/;"	v
ghost_arr	ssd_interface_opt.c	/^int ghost_arr[MAP_GHOST_MAX_ENTRIES];$/;"	v
ghost_heap	heap.h	/^PacketHeap real_heap,ghost_heap;$/;"	v
global_SW_blk	fast.c	/^struct seq_log_blk global_SW_blk;       \/\/ pbn which is being used as SW_blk$/;"	v	typeref:struct:seq_log_blk
global_SW_blk	fast.youkim.c	/^struct seq_log_blk global_SW_blk;       \/\/ pbn which is being used as SW_blk$/;"	v	typeref:struct:seq_log_blk
global_SW_blk	fast_bk.c	/^struct seq_log_blk global_SW_blk;       \/\/ pbn which is being used as SW_blk$/;"	v	typeref:struct:seq_log_blk
global_currRWblk	fast.c	/^int global_currRWblk = 1;$/;"	v
global_currRWblk	fast.youkim.c	/^int global_currRWblk = 1;$/;"	v
global_currRWblk	fast_bk.c	/^int global_currRWblk = 1;$/;"	v
global_currRWblk	last.c	/^int global_currRWblk = 1;$/;"	v
global_erase_cnt	ssd_interface.c	/^int global_erase_cnt = 0;$/;"	v
global_erase_rate	disksim_logorg.c	/^double global_erase_rate;$/;"	v
global_firstRWblk	fast.c	/^int global_firstRWblk = 0;$/;"	v
global_firstRWblk	fast.youkim.c	/^int global_firstRWblk = 0;$/;"	v
global_firstRWblk	fast_bk.c	/^int global_firstRWblk = 0;$/;"	v
global_firstRWblk	last.c	/^int global_firstRWblk = 0;$/;"	v
global_flag	disksim_logorg.c	/^int global_flag = 1;$/;"	v
global_req_cnt	disksim_global.h	/^int global_req_cnt;$/;"	v
global_req_cnt	disksim_iosim.c	/^int global_req_cnt =0 ;$/;"	v
global_total_blk_num	ssd_interface.h	/^int global_total_blk_num;$/;"	v
global_write_count	ssd_interface.c	/^int global_write_count = 0;$/;"	v
global_write_count1	ssd_interface.c	/^long int global_write_count1 = 0;$/;"	v
hack_merge	fast.c	/^int hack_merge = 0;$/;"	v
hack_merge	fast.youkim.c	/^int hack_merge = 0;$/;"	v
hack_merge	fast_bk.c	/^int hack_merge = 0;$/;"	v
hack_merge	last.c	/^int hack_merge = 0;$/;"	v
hack_merge1	fast.c	/^int hack_merge1 = 0;$/;"	v
hack_merge1	fast.youkim.c	/^int hack_merge1 = 0;$/;"	v
hack_merge1	last.c	/^int hack_merge1 = 0;$/;"	v
hack_merge2	fast.c	/^int hack_merge2 = 0;$/;"	v
hack_merge2	fast.youkim.c	/^int hack_merge2 = 0;$/;"	v
hack_merge2	last.c	/^int hack_merge2 = 0;$/;"	v
halfoutreads	disksim_ioqueue.c	/^   int		halfoutreads;$/;"	m	struct:ioq	file:
halfouts	disksim_ioqueue.c	/^   int		halfouts;$/;"	m	struct:ioq	file:
handle_incoming_request	cache.c	/^void handle_incoming_request(double req_time, int disk_id, unsigned long sector_id, int num_sectors, int ReadOrWrite) $/;"	f
handle_new_request	disksim_iodriver.c	/^static ioreq_event * handle_new_request (iodriver *curriodriver, ioreq_event *curr)$/;"	f	file:
hash	disksim_cachemem.c	/^   cache_atom *hash[CACHE_HASHSIZE];$/;"	m	struct:cache_def	file:
hash_next	disksim_cachemem.c	/^   struct cacheatom *hash_next;$/;"	m	struct:cacheatom	typeref:struct:cacheatom::cacheatom	file:
hash_prev	disksim_cachemem.c	/^   struct cacheatom *hash_prev;$/;"	m	struct:cacheatom	typeref:struct:cacheatom::cacheatom	file:
hashoutstand	disksim_logorg.h	/^   outstand * hashoutstand[HASH_OUTSTAND];$/;"	m	struct:logorg
hdr	disksim_disk.h	/^  struct device_header hdr;$/;"	m	struct:disk	typeref:struct:disk::device_header
hdr	disksim_simos_interface.c	/^  EventCallbackHdr hdr;$/;"	m	struct:DiskSimInternalCallback	file:
hdr	disksim_simpledisk.c	/^  struct device_header hdr;$/;"	m	struct:simpledisk	typeref:struct:simpledisk::device_header	file:
hdr	disksim_simpleflash.c	/^  struct device_header hdr;$/;"	m	struct:simpleflash	typeref:struct:simpleflash::device_header	file:
heap	heap.h	/^}heap;$/;"	t	typeref:struct:__anon36
heap_addItem	heap.c	/^void heap_addItem(PacketHeap* h,heap packet) {$/;"	f
heap_deleteItem	heap.c	/^heap heap_deleteItem(PacketHeap* h, int page_num) {$/;"	f
heap_extractMin	heap.c	/^heap heap_extractMin(PacketHeap* h) {$/;"	f
heap_extract_max	cache.c	/^void heap_extract_max(struct flash_cache_line** fclstar, unsigned long arr_len)$/;"	f
heap_extract_min	cache.c	/^void heap_extract_min(struct flash_cache_line** fclstar, unsigned long arr_len)$/;"	f
heap_find_min	heap.c	/^unsigned int heap_find_min(PacketHeap* h) {$/;"	f
heap_heapify	heap.c	/^void heap_heapify(PacketHeap* h,int i) $/;"	f
heap_init	heap.c	/^void heap_init(PacketHeap* h) {$/;"	f
heap_isEmpty	heap.c	/^int heap_isEmpty(PacketHeap *h) {$/;"	f
heap_isFull	heap.c	/^int heap_isFull(PacketHeap *h) {$/;"	f
highblkno	disksim_disk.h	/^   int     highblkno;$/;"	m	struct:__anon12
hittype	disksim_disk.h	/^   disk_cache_hit_t     hittype;	\/* for cache use *\/$/;"	m	struct:diskreq_t
hold_bcount	disksim_disk.h	/^   int		hold_bcount;		\/* sequential writes   *\/$/;"	m	struct:seg
hold_blkno	disksim_disk.h	/^   int		hold_blkno; 		\/* used for prepending *\/$/;"	m	struct:seg
hold_bus_for_whole_read_xfer	disksim_disk.h	/^  int		hold_bus_for_whole_read_xfer;$/;"	m	struct:disk
hold_bus_for_whole_write_xfer	disksim_disk.h	/^  int		hold_bus_for_whole_write_xfer;$/;"	m	struct:disk
hosttransfer	disksim_ctlr.h	/^   int		hosttransfer;$/;"	m	struct:controller
hostwaiters	disksim_ctlr.h	/^   ioreq_event *hostwaiters;$/;"	m	struct:controller
hot_cold_hist	opagemap.c	/^int hot_cold_hist[INDEX_K];$/;"	v
hot_fraction	syssim_driver2.c	/^static double hot_fraction = 0.0;$/;"	v	file:
hpl_record_id	disksim_hptrace.h	/^} hpl_record_id;$/;"	t	typeref:struct:__anon15
hpl_short_iorec_ki	disksim_hptrace.h	/^} hpl_short_iorec_ki;$/;"	t	typeref:struct:__anon16
hpl_srt_initialize_file	hplcomb.c	/^void hpl_srt_initialize_file(iotracefile)$/;"	f
hpreads	disksim_iotrace.h	/^   int hpreads;$/;"	m	struct:iotrace_info
hpreads	disksim_iotrace.h	101;"	d
hpwrites	disksim_iotrace.h	/^   int hpwrites;$/;"	m	struct:iotrace_info
hpwrites	disksim_iotrace.h	102;"	d
id	disksim_hptrace.h	/^   u_int32_t id;      \/* record type *\/$/;"	m	struct:__anon15
idealno	disksim_logorg.h	/^   int    idealno;$/;"	m	struct:logorg
idledelay	disksim_ioqueue.c	/^   int		idledelay;$/;"	m	struct:ioq	file:
idledetect	disksim_ioqueue.c	/^   timer_event *idledetect;$/;"	m	struct:ioq	file:
idleevents	disksim_pfsim.h	/^   event     *idleevents;$/;"	m	struct:__anon26
idlein	disksim_pfsim.h	/^   double idlein;$/;"	m	struct:pf_info
idlein	disksim_pfsim.h	300;"	d
idleloop_event	disksim_pfsim.h	/^} idleloop_event;$/;"	t	typeref:struct:__anon29
idler	disksim_pfsim.h	/^   int idler;$/;"	m	struct:process
idlereset	disksim_pfsim.h	/^   int  idlereset;$/;"	m	struct:pf_info
idlereset	disksim_pfsim.h	301;"	d
idlestart	disksim_ioqueue.c	/^   double       idlestart;$/;"	m	struct:ioq	file:
idlestart	disksim_logorg.h	/^   double       idlestart;$/;"	m	struct:__anon22
idlestart	disksim_pfsim.h	/^   double     idlestart;$/;"	m	struct:__anon26
idlestats	disksim_ioqueue.c	/^   statgen	idlestats;$/;"	m	struct:ioq	file:
idlestats	disksim_logorg.h	/^   statgen	idlestats;$/;"	m	struct:__anon22
idletime	disksim_pfsim.h	/^   double     idletime;$/;"	m	struct:__anon26
idlework	disksim_ioqueue.c	/^   void		(**idlework)(void *,int);$/;"	m	struct:ioq	file:
idlework_cachedev	disksim_global.h	/^   void         (*idlework_cachedev)       (void *, int);$/;"	m	struct:disksim
idlework_cachemem	disksim_global.h	/^   void         (*idlework_cachemem)       (void *, int);$/;"	m	struct:disksim
idleworkparam	disksim_ioqueue.c	/^   void	*	idleworkparam;$/;"	m	struct:ioq	file:
idleworktime	disksim_pfsim.h	/^   double     idleworktime;$/;"	m	struct:__anon26
idx	disksim_logorg.c	/^int idx = 1;$/;"	v
immed	disksim_disk.h	/^  int immed;$/;"	m	struct:disk
immedend	disksim_disk.h	/^  int		immedend;$/;"	m	struct:disk
immedread	disksim_disk.h	/^  int immedread;$/;"	m	struct:disk
immedstart	disksim_disk.h	/^  int		immedstart;$/;"	m	struct:disk
immedtrans_any_readhit	disksim_disk.h	/^  int		immedtrans_any_readhit;$/;"	m	struct:disk
immedwrite	disksim_disk.h	/^  int immedwrite;$/;"	m	struct:disk
inblkno	disksim_disk.h	/^   int			inblkno;$/;"	m	struct:diskreq_t
inbuses	disksim_ctlr.h	/^   int          inbuses[MAXINBUSES];$/;"	m	struct:controller
inbuses	disksim_disk.h	/^  int          inbuses[MAXINBUSES];$/;"	m	struct:disk
inbuses	disksim_simpledisk.c	/^   int inbuses[MAXINBUSES];$/;"	m	struct:simpledisk	file:
inbuses	disksim_simpleflash.c	/^   int inbuses[MAXINBUSES];$/;"	m	struct:simpleflash	file:
inbusowned	disksim_ctlr.h	/^   int		inbusowned;$/;"	m	struct:controller
index_into_max_heap	cache.h	/^ unsigned long index_into_max_heap; \/\/If ghost ..$/;"	m	struct:flash_cache_line
index_into_min_heap	cache.h	/^ unsigned long index_into_min_heap; \/\/If real ..wat is the index into the min heap maintained for real cache lines ..$/;"	m	struct:flash_cache_line
induced_code	cache.h	/^  int induced_code;$/;"	m	struct:induced_subevent
induced_event	cache.h	/^struct induced_event$/;"	s
induced_eventhead	cache.h	/^struct induced_event* induced_eventhead;$/;"	v	typeref:struct:induced_event
induced_eventtail	cache.h	/^struct induced_event* induced_eventtail;$/;"	v	typeref:struct:induced_event
induced_subevent	cache.h	/^struct induced_subevent$/;"	s
induced_subeventhead	cache.h	/^  struct induced_subevent* induced_subeventhead;$/;"	m	struct:induced_event	typeref:struct:induced_event::induced_subevent
induced_subeventtail	cache.h	/^  struct induced_subevent* induced_subeventtail;$/;"	m	struct:induced_event	typeref:struct:induced_event::induced_subevent
info	disksim_hptrace.h	/^   u_int32_t       info;       \/* information about where this I\/O originated *\/$/;"	m	struct:__anon16
info	disksim_pfsim.h	/^   int    info;$/;"	m	struct:__anon30
info	disksim_pfsim.h	/^   int    info;$/;"	m	struct:__anon31
infopenalty	disksim_ioqueue.c	/^   statgen	infopenalty;$/;"	m	struct:subq	file:
infoptr	disksim_global.h	/^   event  *infoptr;$/;"	m	struct:intr_ev
init	ftl.h	/^  int    (*init) (blk_t blk_num, blk_t extra_num);$/;"	m	struct:ftl_operation
initFlash	ssd_interface.c	/^void initFlash()$/;"	f
initFlash	ssd_interface_noopt.c	/^void initFlash()$/;"	f
initFlash	ssd_interface_opt.c	/^void initFlash()$/;"	f
init_arr	ssd_interface.c	/^void init_arr()$/;"	f
init_arr	ssd_interface_noopt.c	/^void init_arr()$/;"	f
init_arr	ssd_interface_opt.c	/^void init_arr()$/;"	f
init_free_blocks	syssim_driver2.c	/^void init_free_blocks()$/;"	f
inited	disksim_simpledisk.c	/^   int inited;$/;"	m	struct:simpledisk	file:
inited	disksim_simpleflash.c	/^   int inited;$/;"	m	struct:simpleflash	file:
initialize	disksim.c	/^static void initialize ()$/;"	f	file:
initialize_req_manager	cache.c	/^void initialize_req_manager()$/;"	f
initiatenextstats	disksim_iodriver.h	/^   statgen initiatenextstats;$/;"	m	struct:iodriver_info
initiatenextstats	disksim_iodriver.h	202;"	d
inputflags	syssim_driver2.c	/^  unsigned int inputflags;$/;"	m	struct:alg_args_s	file:
inside	syssim_driver2.c	/^static int inside[MAXDISKS];$/;"	v	file:
instqueuelen	disksim_ioqueue.c	/^   statgen	instqueuelen;$/;"	m	struct:subq	file:
int32_t	disksim_global.h	120;"	d
int32_t	disksim_global.h	123;"	d
int32_t	hplcomb.c	50;"	d	file:
intarrstats	disksim_ioqueue.c	/^   statgen	intarrstats;$/;"	m	struct:ioq	file:
intarrstats	disksim_logorg.h	/^   statgen      intarrstats;$/;"	m	struct:__anon22
intchar	disksim_global.h	/^} intchar;$/;"	t	typeref:union:__anon13
intchar	hplcomb.c	/^} intchar;$/;"	t	typeref:union:__anon38	file:
intdist	disksim_logorg.h	/^   int		*intdist;$/;"	m	struct:__anon22
intend_event	disksim_pfsim.h	/^} intend_event;$/;"	t	typeref:struct:__anon27
interarrival	syssim_driver2.c	/^static double interarrival = 65.12;$/;"	v	file:
interfere	disksim_disk.h	/^   int     interfere[2];$/;"	m	struct:__anon12
intermediate_outgoing_request_from_manager	cache.c	/^void intermediate_outgoing_request_from_manager(double req_time, int diskOrFlash,int operation,int disk_id, unsigned long sectorid,int num_sectors, int originalOrInduced, int beginOrEnd)$/;"	f
internal_error	raw_layout.c	66;"	d	file:
intq	disksim_global.h	/^   event *intq;$/;"	m	struct:disksim
intqhint	disksim_global.h	/^   event *intqhint;$/;"	m	struct:disksim
intqlen	disksim_global.h	/^   int    intqlen;$/;"	m	struct:disksim
intr_acknowledge	disksim_intr.c	/^void intr_acknowledge (event *intrp)$/;"	f
intr_ev	disksim_global.h	/^typedef struct intr_ev {$/;"	s
intr_event	disksim_global.h	/^} intr_event;$/;"	t	typeref:struct:intr_ev
intr_request	disksim_intr.c	/^void intr_request (event *curr)$/;"	f
intreads	disksim_logorg.h	/^   int    intreads;$/;"	m	struct:__anon23
intrp	disksim_pfsim.h	/^   intr_event *intrp;$/;"	m	struct:__anon25
intrs	disksim_pfsim.h	/^   int        intrs;$/;"	m	struct:__anon26
intwrites	disksim_logorg.h	/^   int    intwrites;$/;"	m	struct:__anon23
io_catch_stray_events	disksim_iosim.c	/^void io_catch_stray_events (ioreq_event *curr)$/;"	f
io_cleanstats	disksim_iosim.c	/^void io_cleanstats()$/;"	f
io_done_notify	disksim.c	/^event *io_done_notify (ioreq_event *curr)$/;"	f
io_extq	disksim_iosim.c	/^   event * io_extq;$/;"	m	struct:iosim_info	file:
io_extq	disksim_iosim.c	156;"	d	file:
io_extq_type	disksim_iosim.c	/^   int     io_extq_type;$/;"	m	struct:iosim_info	file:
io_extq_type	disksim_iosim.c	158;"	d	file:
io_extqlen	disksim_iosim.c	/^   int     io_extqlen;$/;"	m	struct:iosim_info	file:
io_extqlen	disksim_iosim.c	157;"	d	file:
io_get_next_external_event	disksim_iosim.c	/^event * io_get_next_external_event (FILE *iotracefile)$/;"	f
io_hpl_do_stats1	disksim_iosim.c	/^static void io_hpl_do_stats1 ()$/;"	f	file:
io_hpl_srt_tracefile_start	hplcomb.c	/^void io_hpl_srt_tracefile_start(tracedate)$/;"	f
io_initialize	disksim_iosim.c	/^void io_initialize (int standalone)$/;"	f
io_internal_event	disksim_iosim.c	/^void io_internal_event(ioreq_event *curr)$/;"	f
io_interrupt_arrive	disksim_iosim.c	/^void io_interrupt_arrive (ioreq_event *intrp)$/;"	f
io_interrupt_complete	disksim_iosim.c	/^void io_interrupt_complete (ioreq_event *intrp)$/;"	f
io_map_trace_request	disksim_iosim.c	/^void io_map_trace_request (ioreq_event *temp)$/;"	f
io_month_convert	hplcomb.c	/^int io_month_convert(monthstr, year)$/;"	f
io_printstats	disksim_iosim.c	/^void io_printstats()$/;"	f
io_raise_priority	disksim_iosim.c	/^double io_raise_priority (int opid, int devno, int blkno, void *chan)$/;"	f
io_readparams	disksim_iosim.c	/^void io_readparams (FILE *parfile)$/;"	f
io_redirect	disksim_logorg.c	/^int io_redirect(logorg *currlogorg, ioreq_event *curr)$/;"	f
io_request	disksim_iosim.c	/^event * io_request (ioreq_event *curr)$/;"	f
io_resetstats	disksim_iosim.c	/^void io_resetstats()$/;"	f
io_schedule	disksim_iosim.c	/^void io_schedule (ioreq_event *curr)$/;"	f
io_setcallbacks	disksim_iosim.c	/^void io_setcallbacks ()$/;"	f
io_tick	disksim_iosim.c	/^double io_tick()$/;"	f
io_using_external_event	disksim_iosim.c	/^int io_using_external_event (event *curr)$/;"	f
io_validate_do_stats1	disksim_iosim.c	/^void io_validate_do_stats1 ()$/;"	f
io_validate_do_stats2	disksim_iosim.c	/^void io_validate_do_stats2 (ioreq_event *new)$/;"	f
iob	disksim_ioqueue.c	/^typedef struct iob {$/;"	s	file:
iob_un	disksim_ioqueue.c	/^   } iob_un;$/;"	m	struct:iob	typeref:union:iob::__anon17	file:
iobuf	disksim_ioqueue.c	/^} iobuf;$/;"	t	typeref:struct:iob	file:
iobufcnt	disksim_ioqueue.c	/^   int		iobufcnt;$/;"	m	struct:subq	file:
iodriver	disksim_iodriver.h	/^typedef struct iodriver {$/;"	s
iodriver	disksim_iodriver.h	/^} iodriver;$/;"	t	typeref:struct:iodriver
iodriver_access_complete	disksim_iodriver.c	/^void iodriver_access_complete (int iodriverno, intr_event *intrp)$/;"	f
iodriver_add_to_intrp_eventlist	disksim_iodriver.c	/^static void iodriver_add_to_intrp_eventlist (intr_event *intrp, event *curr, double scale)$/;"	f	file:
iodriver_check_c700_based_status	disksim_iodriver.c	/^static void iodriver_check_c700_based_status (iodriver *curriodriver, int devno, int cause, int type, int blkno)$/;"	f	file:
iodriver_cleanstats	disksim_iodriver.c	/^void iodriver_cleanstats()$/;"	f
iodriver_get_time_to_handle_interrupt	disksim_iodriver.c	/^static double iodriver_get_time_to_handle_interrupt (iodriver *curriodriver, int cause, int read)$/;"	f	file:
iodriver_get_time_to_respond_to_device	disksim_iodriver.c	/^static double iodriver_get_time_to_respond_to_device (iodriver *curriodriver, int cause, double fifthoftotal)$/;"	f	file:
iodriver_info	disksim_global.h	/^   struct iodriver_info *iodriver_info;$/;"	m	struct:disksim	typeref:struct:disksim::iodriver_info
iodriver_info	disksim_iodriver.h	/^typedef struct iodriver_info {$/;"	s
iodriver_info_t	disksim_iodriver.h	/^} iodriver_info_t;$/;"	t	typeref:struct:iodriver_info
iodriver_initialize	disksim_iodriver.c	/^void iodriver_initialize (int standalone)$/;"	f
iodriver_interrupt_arrive	disksim_iodriver.c	/^void iodriver_interrupt_arrive (int iodriverno, intr_event *intrp)$/;"	f
iodriver_interrupt_complete	disksim_iodriver.c	/^void iodriver_interrupt_complete (int iodriverno, intr_event *intrp)$/;"	f
iodriver_load_logorg	disksim_iodriver.c	/^int iodriver_load_logorg(struct lp_block *b) {$/;"	f
iodriver_printstats	disksim_iodriver.c	/^void iodriver_printstats()$/;"	f
iodriver_raise_priority	disksim_iodriver.c	/^double iodriver_raise_priority (int iodriverno, int opid, int devno, int blkno, void *chan)$/;"	f
iodriver_request	disksim_iodriver.c	/^event * iodriver_request (int iodriverno, ioreq_event *curr)$/;"	f
iodriver_resetstats	disksim_iodriver.c	/^void iodriver_resetstats()$/;"	f
iodriver_respond_to_device	disksim_iodriver.c	/^void iodriver_respond_to_device (int iodriverno, intr_event *intrp)$/;"	f
iodriver_schedule	disksim_iodriver.c	/^void iodriver_schedule (int iodriverno, ioreq_event *curr)$/;"	f
iodriver_send_event_down_path	disksim_iodriver.c	/^static void iodriver_send_event_down_path (ioreq_event *curr)$/;"	f	file:
iodriver_set_ctl_to_device	disksim_iodriver.c	/^static void iodriver_set_ctl_to_device (int iodriverno, device * dev)$/;"	f	file:
iodriver_setcallbacks	disksim_iodriver.c	/^void iodriver_setcallbacks ()$/;"	f
iodriver_tick	disksim_iodriver.c	/^double iodriver_tick ()$/;"	f
iodriver_trace_request_start	disksim_iodriver.c	/^void iodriver_trace_request_start (int iodriverno, ioreq_event *curr)$/;"	f
iodrivers	disksim_iodriver.h	/^   iodriver **iodrivers;$/;"	m	struct:iodriver_info
iodrivers	disksim_iodriver.h	186;"	d
iodrivers	syssim_driver2.c	254;"	d	file:
iodrivers_len	disksim_iodriver.h	/^   int iodrivers_len;$/;"	m	struct:iodriver_info
ioflags	disksim_hptrace.h	/^   u_int32_t       ioflags;    \/* I\/O flags for the device *\/$/;"	m	struct:__anon16
iointrs	disksim_pfsim.h	/^   int        iointrs;$/;"	m	struct:__anon26
iolist	disksim_ioqueue.c	/^   ioreq_event *iolist;$/;"	m	struct:iob	file:
ioq	disksim_ioqueue.c	/^typedef struct ioq {$/;"	s	file:
ioqueue	disksim_ioqueue.c	/^} ioqueue;$/;"	t	typeref:struct:ioq	file:
ioqueue_add_new_request	disksim_ioqueue.c	/^double ioqueue_add_new_request (ioqueue *queue, ioreq_event *new)$/;"	f
ioqueue_check_concat	disksim_ioqueue.c	/^static int ioqueue_check_concat (subqueue *queue, iobuf *req1, iobuf *req2, int concatmax)$/;"	f	file:
ioqueue_cleanstats	disksim_ioqueue.c	/^void ioqueue_cleanstats (ioqueue *queue)$/;"	f
ioqueue_clobber_overlaps_subqueue	disksim_ioqueue.c	/^static void ioqueue_clobber_overlaps_subqueue (subqueue *queue, ioreq_event *ret, double arrtimemax)$/;"	f	file:
ioqueue_copy	disksim_ioqueue.c	/^ioqueue * ioqueue_copy (ioqueue *queue)$/;"	f
ioqueue_createdefaultqueue	disksim_ioqueue.c	/^ioqueue * ioqueue_createdefaultqueue ()$/;"	f
ioqueue_get_cylinder_mapping	disksim_ioqueue.c	/^ioqueue_get_cylinder_mapping(ioqueue *queue, $/;"	f	file:
ioqueue_get_dist	disksim_ioqueue.c	/^int ioqueue_get_dist (ioqueue *queue, int blkno)$/;"	f
ioqueue_get_next_request	disksim_ioqueue.c	/^ioreq_event * ioqueue_get_next_request (ioqueue *queue)$/;"	f
ioqueue_get_next_request_from_subqueue	disksim_ioqueue.c	/^static ioreq_event * ioqueue_get_next_request_from_subqueue (subqueue *queue)$/;"	f	file:
ioqueue_get_number_in_queue	disksim_ioqueue.c	/^int ioqueue_get_number_in_queue (ioqueue *queue)$/;"	f
ioqueue_get_number_of_requests	disksim_ioqueue.c	/^int ioqueue_get_number_of_requests (ioqueue *queue)$/;"	f
ioqueue_get_number_of_requests_initiated	disksim_ioqueue.c	/^int ioqueue_get_number_of_requests_initiated (ioqueue *queue)$/;"	f
ioqueue_get_number_pending	disksim_ioqueue.c	/^int ioqueue_get_number_pending (ioqueue *queue)$/;"	f
ioqueue_get_priority_level	disksim_ioqueue.c	/^static int ioqueue_get_priority_level (ioqueue *ioqueue, iobuf *req)$/;"	f	file:
ioqueue_get_reqoutstanding	disksim_ioqueue.c	/^int ioqueue_get_reqoutstanding (ioqueue *queue)$/;"	f
ioqueue_get_request_from_cyl_scan_queue	disksim_ioqueue.c	/^static iobuf * ioqueue_get_request_from_cyl_scan_queue (subqueue *queue)$/;"	f	file:
ioqueue_get_request_from_cyl_vscan_queue	disksim_ioqueue.c	/^static iobuf * ioqueue_get_request_from_cyl_vscan_queue (subqueue *queue, int value)$/;"	f	file:
ioqueue_get_request_from_fcfs_queue	disksim_ioqueue.c	/^static iobuf * ioqueue_get_request_from_fcfs_queue (subqueue *queue)$/;"	f	file:
ioqueue_get_request_from_lbn_scan_queue	disksim_ioqueue.c	/^static iobuf * ioqueue_get_request_from_lbn_scan_queue (subqueue *queue)$/;"	f	file:
ioqueue_get_request_from_lbn_vscan_queue	disksim_ioqueue.c	/^static iobuf * ioqueue_get_request_from_lbn_vscan_queue (subqueue *queue, int value)$/;"	f	file:
ioqueue_get_request_from_opt_sptf_queue	disksim_ioqueue.c	/^static iobuf *ioqueue_get_request_from_opt_sptf_queue (subqueue *queue, int checkcache, int ageweight, int posonly)$/;"	f	file:
ioqueue_get_request_from_opt_sptf_rot_weight_queue	disksim_ioqueue.c	/^static iobuf *ioqueue_get_request_from_opt_sptf_rot_weight_queue (subqueue *queue, int checkcache, int ageweight, int posonly)$/;"	f	file:
ioqueue_get_request_from_opt_sptf_seek_weight_queue	disksim_ioqueue.c	/^static iobuf *ioqueue_get_request_from_opt_sptf_seek_weight_queue (subqueue *queue, int checkcache, int ageweight, int posonly)$/;"	f	file:
ioqueue_get_request_from_opt_sptf_weight_queue	disksim_ioqueue.c	/^static iobuf *ioqueue_get_request_from_opt_sptf_weight_queue (subqueue *queue, int checkcache, int ageweight, int posonly)$/;"	f	file:
ioqueue_get_request_from_opt_tsps_queue	disksim_ioqueue.c	/^ioqueue_get_request_from_opt_tsps_queue(subqueue *queue, $/;"	f	file:
ioqueue_get_request_from_pri_lbn_vscan_queue	disksim_ioqueue.c	/^static iobuf * ioqueue_get_request_from_pri_lbn_vscan_queue (subqueue *queue, int numlbns, int vscan_value)$/;"	f	file:
ioqueue_get_request_from_sdf_queue	disksim_ioqueue.c	/^static iobuf *ioqueue_get_request_from_sdf_queue (subqueue *queue, int exact, int direction) {$/;"	f	file:
ioqueue_get_specific_request	disksim_ioqueue.c	/^ioreq_event *ioqueue_get_specific_request(ioqueue *queue, $/;"	f
ioqueue_get_specific_request_from_subqueue	disksim_ioqueue.c	/^static ioreq_event * ioqueue_get_specific_request_from_subqueue (subqueue *queue, ioreq_event *wanted)$/;"	f	file:
ioqueue_identify_request_on_cylinder	disksim_ioqueue.c	/^static iobuf *ioqueue_identify_request_on_cylinder (subqueue *queue)$/;"	f	file:
ioqueue_idledetected	disksim_ioqueue.c	/^static void ioqueue_idledetected (timer_event *timereq)$/;"	f	file:
ioqueue_implement_timeouts	disksim_ioqueue.c	/^static int ioqueue_implement_timeouts (subqueue *queue, subqueue *timeout, int maxtime, u_int flag)$/;"	f	file:
ioqueue_initialize	disksim_ioqueue.c	/^void ioqueue_initialize (ioqueue *queue, int devno)$/;"	f
ioqueue_insert_fcfs_to_queue	disksim_ioqueue.c	/^static void ioqueue_insert_fcfs_to_queue (subqueue *queue, iobuf *temp)$/;"	f	file:
ioqueue_insert_new_request	disksim_ioqueue.c	/^static void ioqueue_insert_new_request (subqueue *queue, iobuf *temp)$/;"	f	file:
ioqueue_insert_ordered_to_queue	disksim_ioqueue.c	/^static void ioqueue_insert_ordered_to_queue (subqueue *queue, iobuf *temp)$/;"	f	file:
ioqueue_physical_access_done	disksim_ioqueue.c	/^ioreq_event * ioqueue_physical_access_done (ioqueue *queue, ioreq_event *curr)$/;"	f
ioqueue_print_contents	disksim_ioqueue.c	/^void ioqueue_print_contents (ioqueue *queue)$/;"	f
ioqueue_print_subqueue_state	disksim_ioqueue.c	/^static void ioqueue_print_subqueue_state (subqueue *queue)$/;"	f	file:
ioqueue_printcritstats	disksim_ioqueue.c	/^static void ioqueue_printcritstats (subqueue **set, int setsize, char *prefix, int numreqs)$/;"	f	file:
ioqueue_printidlestats	disksim_ioqueue.c	/^static void ioqueue_printidlestats (ioqueue **set, int setsize, char *prefix)$/;"	f	file:
ioqueue_printintarrstats	disksim_ioqueue.c	/^static void ioqueue_printintarrstats (ioqueue **set, int setsize, char *prefix)$/;"	f	file:
ioqueue_printqueuestats	disksim_ioqueue.c	/^static void ioqueue_printqueuestats (ioqueue **set, int setsize, char *prefix)$/;"	f	file:
ioqueue_printsizestats	disksim_ioqueue.c	/^static void ioqueue_printsizestats (ioqueue **set, int setsize, char *prefix)$/;"	f	file:
ioqueue_printstats	disksim_ioqueue.c	/^void ioqueue_printstats (ioqueue **set, int setsize, char *sourcestr)$/;"	f
ioqueue_raise_priority	disksim_ioqueue.c	/^int ioqueue_raise_priority (ioqueue *queue, int opid)$/;"	f
ioqueue_raise_priority_subqueue	disksim_ioqueue.c	/^static int ioqueue_raise_priority_subqueue (subqueue *queue, subqueue *priority, int opid, int pri_scheme)$/;"	f	file:
ioqueue_remove_completed_request	disksim_ioqueue.c	/^static ioreq_event * ioqueue_remove_completed_request (subqueue *queue, ioreq_event *done)$/;"	f	file:
ioqueue_remove_from_subqueue	disksim_ioqueue.c	/^static void ioqueue_remove_from_subqueue (subqueue *queue, iobuf *tmp)$/;"	f	file:
ioqueue_request_match	disksim_ioqueue.c	/^static int ioqueue_request_match (ioreq_event *wanted, iobuf *curr)$/;"	f	file:
ioqueue_reset_idledetecter	disksim_ioqueue.c	/^void ioqueue_reset_idledetecter (ioqueue *queue, int timechange)$/;"	f
ioqueue_resetstats	disksim_ioqueue.c	/^void ioqueue_resetstats (ioqueue *queue)$/;"	f
ioqueue_seqstream_head	disksim_ioqueue.c	/^static int ioqueue_seqstream_head (ioqueue *queue, iobuf *listhead, iobuf *current)$/;"	f	file:
ioqueue_set_concatok_function	disksim_ioqueue.c	/^void ioqueue_set_concatok_function (ioqueue *queue, int (**concatok)(void *,int,int,int,int), void *concatokparam)$/;"	f
ioqueue_set_enablement_function	disksim_ioqueue.c	/^void ioqueue_set_enablement_function (ioqueue *queue, int (**enablement)(ioreq_event *))$/;"	f
ioqueue_set_idlework_function	disksim_ioqueue.c	/^void ioqueue_set_idlework_function (ioqueue *queue, void (**idlework)(void *,int), void *idleworkparam, double idledelay)$/;"	f
ioqueue_set_starttime	disksim_ioqueue.c	/^ioreq_event * ioqueue_set_starttime (ioqueue *queue, ioreq_event *target)$/;"	f
ioqueue_set_starttime_in_subqueue	disksim_ioqueue.c	/^static ioreq_event * ioqueue_set_starttime_in_subqueue (subqueue *queue, ioreq_event *target)$/;"	f	file:
ioqueue_setcallbacks	disksim_ioqueue.c	/^void ioqueue_setcallbacks ()$/;"	f
ioqueue_show_next_request	disksim_ioqueue.c	/^ioreq_event * ioqueue_show_next_request (ioqueue *queue)$/;"	f
ioqueue_show_next_request_from_subqueue	disksim_ioqueue.c	/^static ioreq_event * ioqueue_show_next_request_from_subqueue (subqueue *queue)$/;"	f	file:
ioqueue_subqueue_copy	disksim_ioqueue.c	/^static void ioqueue_subqueue_copy (subqueue *queue, subqueue *new)$/;"	f	file:
ioqueue_subqueue_initialize	disksim_ioqueue.c	/^static void ioqueue_subqueue_initialize (subqueue *queue, int devno)$/;"	f	file:
ioqueue_subqueue_printstats	disksim_ioqueue.c	/^static void ioqueue_subqueue_printstats (subqueue **set, int setsize, char *prefix, int printcritstats)$/;"	f	file:
ioqueue_subqueue_resetstats	disksim_ioqueue.c	/^static void ioqueue_subqueue_resetstats (subqueue *queue)$/;"	f	file:
ioqueue_tick	disksim_ioqueue.c	/^double ioqueue_tick (ioqueue *queue)$/;"	f
ioqueue_update_arrival_stats	disksim_ioqueue.c	/^static void ioqueue_update_arrival_stats (ioqueue *queue, ioreq_event *curr)$/;"	f	file:
ioqueue_update_subqueue_statistics	disksim_ioqueue.c	/^static void ioqueue_update_subqueue_statistics (subqueue *queue)$/;"	f	file:
ioreads	disksim_pfsim.h	/^   int  ioreads;$/;"	m	struct:process
ioreq	disksim_pfsim.h	/^   ioreq_event *ioreq;$/;"	m	struct:process
ioreq_compare	disksim_iosim.c	/^int ioreq_compare (ioreq_event *first, ioreq_event *second)$/;"	f
ioreq_copy	disksim_iosim.c	/^ioreq_event * ioreq_copy (ioreq_event *old)$/;"	f
ioreq_ev	disksim_global.h	/^typedef struct ioreq_ev {$/;"	s
ioreq_event	disksim_global.h	/^} ioreq_event;$/;"	t	typeref:struct:ioreq_ev
ioreq_hold_disk	disksim_disk.h	180;"	d
ioreq_hold_diskreq	disksim_disk.h	181;"	d
ioreqlist	disksim_disk.h	/^   ioreq_event 	       *ioreqlist;	\/* sorted by ascending blkno *\/$/;"	m	struct:diskreq_t
ios	disksim_pfsim.h	/^   int  ios;$/;"	m	struct:process
ioscale	disksim_iosim.c	/^   double  ioscale;$/;"	m	struct:iosim_info	file:
ioscale	disksim_iosim.c	159;"	d	file:
iosim_get_path_to_controller	disksim_iosim.c	/^void iosim_get_path_to_controller (int iodriverno, int ctlno, intchar *buspath, intchar *slotpath)$/;"	f
iosim_get_path_to_device	disksim_iosim.c	/^void iosim_get_path_to_device (int iodriverno, int devno, intchar *buspath, intchar *slotpath)$/;"	f
iosim_info	disksim_global.h	/^   struct iosim_info *iosim_info;$/;"	m	struct:disksim	typeref:struct:disksim::iosim_info
iosim_info	disksim_iosim.c	/^typedef struct iosim_info {$/;"	s	file:
iosim_info_t	disksim_iosim.c	/^} iosim_info_t;$/;"	t	typeref:struct:iosim_info	file:
iosim_initialize_iosim_info	disksim_iosim.c	/^void iosim_initialize_iosim_info ()$/;"	f
iosim_load_map	disksim_iosim.c	/^static int iosim_load_map(struct lp_block *b, int n) {$/;"	f	file:
iosim_load_mappings	disksim_iosim.c	/^static int iosim_load_mappings(struct lp_list *l) {$/;"	f	file:
iosleep	disksim_pfsim.h	/^   int    iosleep;$/;"	m	struct:__anon30
iosleep	disksim_pfsim.h	/^   int  iosleep;$/;"	m	struct:process
iosleeps	disksim_pfsim.h	/^   int  iosleeps;$/;"	m	struct:process
iotrace	disksim_global.h	/^   int    iotrace;$/;"	m	struct:disksim
iotrace_ascii_get_ioreq_event	disksim_iotrace.c	/^static ioreq_event * iotrace_ascii_get_ioreq_event (FILE *tracefile, ioreq_event *new)$/;"	f	file:
iotrace_dec_get_ioreq_event	disksim_iotrace.c	/^static ioreq_event * iotrace_dec_get_ioreq_event (FILE *tracefile, ioreq_event *new)$/;"	f	file:
iotrace_emcsymm_get_ioreq_event	disksim_iotrace.c	/^static ioreq_event * iotrace_emcsymm_get_ioreq_event (FILE *tracefile, ioreq_event *new)$/;"	f	file:
iotrace_get_ioreq_event	disksim_iotrace.c	/^ioreq_event * iotrace_get_ioreq_event (FILE *tracefile, int traceformat, ioreq_event *temp)$/;"	f
iotrace_hpl_get_ioreq_event	disksim_iotrace.c	/^static ioreq_event * iotrace_hpl_get_ioreq_event (FILE *tracefile, ioreq_event *new)$/;"	f	file:
iotrace_hpl_initialize_file	disksim_iotrace.c	/^static void iotrace_hpl_initialize_file (FILE *tracefile, int print_tracefile_header)$/;"	f	file:
iotrace_hpl_srt_convert_flags	disksim_iotrace.c	/^static void iotrace_hpl_srt_convert_flags (ioreq_event *curr)$/;"	f	file:
iotrace_hpl_srt_tracefile_start	disksim_iotrace.c	/^static void iotrace_hpl_srt_tracefile_start (char *tracedate)$/;"	f	file:
iotrace_info	disksim_global.h	/^   struct iotrace_info *iotrace_info;$/;"	m	struct:disksim	typeref:struct:disksim::iotrace_info
iotrace_info	disksim_iotrace.h	/^typedef struct iotrace_info {$/;"	s
iotrace_info_t	disksim_iotrace.h	/^} iotrace_info_t;$/;"	t	typeref:struct:iotrace_info
iotrace_initialize_file	disksim_iotrace.c	/^void iotrace_initialize_file (FILE *tracefile, int traceformat, int print_tracefile_header)$/;"	f
iotrace_initialize_iotrace_info	disksim_iotrace.c	/^static void iotrace_initialize_iotrace_info ()$/;"	f	file:
iotrace_month_convert	disksim_iotrace.c	/^static int iotrace_month_convert (char *monthstr, int year)$/;"	f	file:
iotrace_printstats	disksim_iotrace.c	/^void iotrace_printstats (FILE *outfile)$/;"	f
iotrace_raw_get_hirestime	disksim_iotrace.c	/^static double iotrace_raw_get_hirestime (int bigtime, int smalltime)$/;"	f	file:
iotrace_raw_get_ioreq_event	disksim_iotrace.c	/^static ioreq_event * iotrace_raw_get_ioreq_event (FILE *tracefile, ioreq_event *new)$/;"	f	file:
iotrace_read_char	disksim_iotrace.c	/^static int iotrace_read_char (FILE *tracefile, char *charptr)$/;"	f	file:
iotrace_read_float	disksim_iotrace.c	224;"	d	file:
iotrace_read_int32	disksim_iotrace.c	/^static int iotrace_read_int32 (FILE *tracefile, u_int32_t *intP)$/;"	f	file:
iotrace_read_short	disksim_iotrace.c	/^static int iotrace_read_short (FILE *tracefile, short *shortptr)$/;"	f	file:
iotrace_read_space	disksim_iotrace.c	/^static int iotrace_read_space (FILE *tracefile, char *spaceptr, int spacesize)$/;"	f	file:
iotrace_set_format	disksim_iotrace.c	/^void iotrace_set_format (char *formatname)$/;"	f
iotrace_validate_get_ioreq_event	disksim_iotrace.c	/^ioreq_event * iotrace_validate_get_ioreq_event (FILE *tracefile, ioreq_event *new)$/;"	f
iotracebatch	hplcomb.c	/^FILE *iotracebatch = NULL;$/;"	v
iotracefile	disksim_global.h	/^   FILE * iotracefile;$/;"	m	struct:disksim
iotracefile	hplcomb.c	/^FILE *iotracefile = NULL;$/;"	v
iotracefilename	disksim_global.h	/^   char   iotracefilename[256];$/;"	m	struct:disksim
iotracefilename	hplcomb.c	/^char iotracefilename[200];$/;"	v
iotracefileposition	disksim_global.h	/^   fpos_t iotracefileposition;$/;"	m	struct:disksim
ipc	nand.h	/^  _s32 ipc : 10; \/\/ invalide page counter$/;"	m	struct:nand_blk_info
isread	syssim_driver.h	69;"	d
issectpercyl	disksim_diskmap.h	150;"	d
issliptoend	disksim_diskmap.h	145;"	d
isspareatfront	disksim_diskmap.h	141;"	d
issuefunc	disksim_cachedev.c	/^   void (**issuefunc)(void *,ioreq_event *);	\/* to issue a disk access    *\/$/;"	m	struct:cache_def	file:
issuefunc	disksim_cachemem.c	/^   void (**issuefunc)(void *,ioreq_event *);	\/* to issue a disk access    *\/$/;"	m	struct:cache_def	file:
issuefunc_ctlrsmart	disksim_global.h	/^   void         (*issuefunc_ctlrsmart)     (void *, ioreq_event *);$/;"	m	struct:disksim
issueparam	disksim_cachedev.c	/^   void *issueparam;				\/* first param for issuefunc *\/$/;"	m	struct:cache_def	file:
issueparam	disksim_cachemem.c	/^   void *issueparam;				\/* first param for issuefunc *\/$/;"	m	struct:cache_def	file:
keeprequestdata	disksim_disk.h	/^  int		keeprequestdata;$/;"	m	struct:disk
largediststarts	disksim_stat.h	/^   int    *largediststarts;$/;"	m	struct:__anon35
largedistvals	disksim_stat.h	/^   int    *largedistvals;$/;"	m	struct:__anon35
last_angle	syssim_driver.h	/^        double last_angle;$/;"	m	struct:__anon41
last_background	syssim_driver2.c	/^static double last_background[MAXDISKS];$/;"	v	file:
last_call	syssim_driver2.c	/^static long last_call = 0;$/;"	v	file:
last_count	syssim_driver2.c	/^static int last_count = 0;$/;"	v	file:
last_cylno	syssim_driver.h	/^        int last_cylno;$/;"	m	struct:__anon41
last_flush	ssd_interface.c	/^  static int last_flush;$/;"	v	file:
last_foreground	syssim_driver2.c	/^static double last_foreground;$/;"	v	file:
last_latency	syssim_driver.h	/^        double last_latency;$/;"	m	struct:__anon41
last_request_arrive	disksim_iosim.c	/^   double  last_request_arrive;$/;"	m	struct:iosim_info	file:
last_request_arrive	disksim_iosim.c	160;"	d	file:
last_seek	syssim_driver.h	/^        double last_seek;$/;"	m	struct:__anon41
last_servtime	syssim_driver2.c	/^ static float last_servtime = 0;$/;"	v	file:
last_time	syssim_driver2.c	/^static float last_time = 0.0;$/;"	v	file:
last_unique_log_blk	ssd_interface.h	/^int last_unique_log_blk;$/;"	v
lastaccesstime	disksim_iotrace.h	/^   double lastaccesstime;$/;"	m	struct:iotrace_info
lastaccesstime	disksim_iotrace.h	121;"	d
lastalt	disksim_ioqueue.c	/^   double	lastalt;$/;"	m	struct:subq	file:
lastarr	disksim_ioqueue.c	/^   double	lastarr;$/;"	m	struct:ioq	file:
lastarr	disksim_logorg.h	/^   double       lastarr;$/;"	m	struct:__anon22
lastblkno	disksim_ioqueue.c	/^   u_int	lastblkno;$/;"	m	struct:subq	file:
lastblkno	disksim_logorg.h	/^   int    lastblkno;$/;"	m	struct:__anon23
lastblkno2	disksim_logorg.h	/^   int    lastblkno2;$/;"	m	struct:__anon23
lastcylno	disksim_ioqueue.c	/^   int		lastcylno;$/;"	m	struct:subq	file:
lastdisk	disksim_disk.h	/^  disk *lastdisk;$/;"	m	struct:disk_info
lastdisk	disksim_disk.h	522;"	d
lastdiskaccessed	disksim_logorg.h	/^   int    lastdiskaccessed;$/;"	m	struct:logorg
lastevent	disksim_iosim.h	/^   double       lastevent;$/;"	m	struct:__anon21
lasteventtime	disksim_pfsim.h	/^   double lasteventtime;$/;"	m	struct:process
lastflags	disksim_disk.h	/^  int	       lastflags;$/;"	m	struct:disk
lastgen	disksim_disk.h	/^  int          lastgen;$/;"	m	struct:disk
lastinst	syssim_driver2.c	/^static float lastinst = 0.0;$/;"	v	file:
lastowned	disksim_bus.c	/^  double	lastowned;$/;"	m	struct:bus	file:
lastphystime	disksim_global.h	/^   double lastphystime;$/;"	m	struct:disksim
lastread	disksim_ioqueue.c	/^   double	lastread;$/;"	m	struct:ioq	file:
lastread	disksim_logorg.h	/^   double       lastread;$/;"	m	struct:__anon22
lastreq	disksim_logorg.h	/^   int		*lastreq;$/;"	m	struct:__anon22
lastsleep	disksim_pfsim.h	/^   double lastsleep;$/;"	m	struct:process
lastsubqueue	disksim_ioqueue.c	/^   int		lastsubqueue;$/;"	m	struct:ioq	file:
lastsurface	disksim_ioqueue.c	/^   int		lastsurface;$/;"	m	struct:subq	file:
lasttime	disksim_iotrace.h	/^   double lasttime;$/;"	m	struct:iotrace_info
lasttime	disksim_iotrace.h	107;"	d
lasttime1	disksim_iotrace.h	/^   int lasttime1;$/;"	m	struct:iotrace_info
lasttime1	disksim_iotrace.h	106;"	d
lastuser	disksim_pfsim.h	/^   double lastuser;$/;"	m	struct:pf_info
lastuser	disksim_pfsim.h	299;"	d
lastwrite	disksim_ioqueue.c	/^   double	lastwrite;$/;"	m	struct:ioq	file:
lastwrite	disksim_logorg.h	/^   double       lastwrite;$/;"	m	struct:__anon22
latency	disksim_disk.h	/^   double  latency;$/;"	m	struct:__anon12
latency_stat	syssim_driver2.c	/^static statgen **latency_stat;$/;"	v	file:
latency_weight	disksim_ioqueue.c	/^   double       latency_weight;$/;"	m	struct:ioq	file:
latest_access_timestamp	cache.c	/^unsigned long latest_access_timestamp = 0;$/;"	v
latest_access_timestamp	cache.h	/^ unsigned long latest_access_timestamp;$/;"	m	struct:flash_cache_line
latest_read_timestamp	cache.c	/^unsigned long latest_read_timestamp = 0;$/;"	v
latest_read_timestamp	cache.h	/^ unsigned long latest_read_timestamp;$/;"	m	struct:flash_cache_line
latest_write_timestamp	cache.c	/^unsigned long latest_write_timestamp = 0;$/;"	v
latest_write_timestamp	cache.h	/^ unsigned long latest_write_timestamp;$/;"	m	struct:flash_cache_line
lbi	blockmap.c	/^	int 	lbi;	\/\/ last block index	$/;"	m	struct:blockmap_entry	file:
lbi	blockmap_aayush.c	/^	int 	lbi;	\/\/ last block index	$/;"	m	struct:blockmap_entry	file:
lbn	disksim_cachemem.c	/^   int lbn;$/;"	m	struct:cacheatom	file:
limits	disksim_synthio.c	/^   sleep_event *  limits;$/;"	m	struct:gen	file:
line	cache.h	/^ struct flash_cache_line* line;$/;"	m	struct:flash_cache_container	typeref:struct:flash_cache_container::flash_cache_line
line1_x	rms.c	/^double line1_x[MAX_POINTS];$/;"	v
line1_y	rms.c	/^double line1_y[MAX_POINTS];$/;"	v
line2_x	rms.c	/^double line2_x[MAX_POINTS];$/;"	v
line2_y	rms.c	/^double line2_y[MAX_POINTS];$/;"	v
line_next	disksim_cachemem.c	/^   struct cacheatom *line_next;$/;"	m	struct:cacheatom	typeref:struct:cacheatom::cacheatom	file:
line_prev	disksim_cachemem.c	/^   struct cacheatom *line_prev;$/;"	m	struct:cacheatom	typeref:struct:cacheatom::cacheatom	file:
linebylinetmp	disksim_cachemem.c	/^   int linebylinetmp;$/;"	m	struct:cache_def	file:
lineprev	disksim_cachemem.c	/^   cache_atom *lineprev;$/;"	m	struct:cacheevent	file:
linesize	disksim_cachemem.c	/^   int linesize;$/;"	m	struct:cache_def	file:
linewaiters	disksim_cachemem.c	/^   cache_event *linewaiters;$/;"	m	struct:cache_def	file:
link	disksim_pfsim.h	/^   struct process *link;$/;"	m	struct:process	typeref:struct:process::process
list	disksim_ioqueue.c	/^   iobuf *	list;$/;"	m	struct:subq	file:
listlen	disksim_ioqueue.c	/^   int		listlen;$/;"	m	struct:subq	file:
livelist	disksim_pfsim.h	/^   struct process *livelist;$/;"	m	struct:process	typeref:struct:process::process
lm_end	fast.c	/^void lm_end()$/;"	f
lm_end	fast.youkim.c	/^void lm_end()$/;"	f
lm_end	fast_bk.c	/^void lm_end()$/;"	f
lm_end	last.c	/^void lm_end()$/;"	f
lm_init	fast.c	/^int lm_init(blk_t blk_num, blk_t extra_num)   $/;"	f
lm_init	fast.youkim.c	/^int lm_init(blk_t blk_num, blk_t extra_num)   $/;"	f
lm_init	fast_bk.c	/^int lm_init(blk_t blk_num, blk_t extra_num)   $/;"	f
lm_init	last.c	/^int lm_init(blk_t blk_num, blk_t extra_num)   $/;"	f
lm_operation	fast.c	/^struct ftl_operation lm_operation = {$/;"	v	typeref:struct:ftl_operation
lm_operation	fast.youkim.c	/^struct ftl_operation lm_operation = {$/;"	v	typeref:struct:ftl_operation
lm_operation	fast_bk.c	/^struct ftl_operation lm_operation = {$/;"	v	typeref:struct:ftl_operation
lm_operation	last.c	/^struct ftl_operation lm_operation = {$/;"	v	typeref:struct:ftl_operation
lm_read	fast.c	/^size_t lm_read(sect_t lsn, sect_t size, int mapdir_flag)$/;"	f
lm_read	fast.youkim.c	/^size_t lm_read(sect_t lsn, sect_t size, int mapdir_flag)$/;"	f
lm_read	fast_bk.c	/^size_t lm_read(sect_t lsn, sect_t size, int mapdir_flag)$/;"	f
lm_read	last.c	/^size_t lm_read(sect_t lsn, sect_t size, int mapdir_flag)$/;"	f
lm_setup	fast.c	/^struct ftl_operation * lm_setup()$/;"	f
lm_setup	fast.youkim.c	/^struct ftl_operation * lm_setup()$/;"	f
lm_setup	fast_bk.c	/^struct ftl_operation * lm_setup()$/;"	f
lm_setup	last.c	/^struct ftl_operation * lm_setup()$/;"	f
lm_write	fast.c	/^size_t lm_write(sect_t lsn, sect_t size, int mapdir_flag)  $/;"	f
lm_write	fast.youkim.c	/^size_t lm_write(sect_t lsn, sect_t size, int mapdir_flag)  $/;"	f
lm_write	fast_bk.c	/^size_t lm_write(sect_t lsn, sect_t size, int mapdir_flag)  $/;"	f
lm_write	last.c	/^size_t lm_write(sect_t lsn, sect_t size, int mapdir_flag)  $/;"	f
load_bus_topo	disksim_bus.c	/^int load_bus_topo(struct lp_topospec *t, int *parentctlno) {$/;"	f
load_ctlr_topo	disksim_controller.c	/^int load_ctlr_topo(struct lp_topospec *t, int *inbus) {$/;"	f
load_iodriver_topo	disksim_iodriver.c	/^int load_iodriver_topo(struct lp_topospec *t) {$/;"	f
loaddistn	disksim_synthio.c	/^static int loaddistn(struct lp_list *l, struct dist *result) {$/;"	f	file:
loadgen	disksim_synthio.c	/^static int loadgen(struct lp_block *b, synthio_generator **result) {$/;"	f	file:
loadsynthdevs	disksim_synthio.c	/^static int loadsynthdevs(synthio_generator *result, struct lp_list *l)$/;"	f	file:
loadsynthgenerators	disksim_synthio.c	/^static int loadsynthgenerators(synthio_generator *junk,$/;"	f	file:
local_last_angle	syssim_driver2.c	/^static float local_last_angle[MAXDISKS];$/;"	v	file:
local_last_cylno	syssim_driver2.c	/^static int local_last_cylno[MAXDISKS];$/;"	v	file:
local_last_surface	syssim_driver2.c	/^static int local_last_surface[MAXDISKS];$/;"	v	file:
localitystats	disksim_logorg.h	/^   statgen localitystats;$/;"	m	struct:__anon23
location_info	syssim_driver2.c	/^inline void location_info(float extra_time_angle,$/;"	f
locdiskswitches	disksim_logorg.h	/^   int		locdiskswitches;$/;"	m	struct:__anon22
locdist	disksim_synthio.c	/^   synthio_distr  locdist;$/;"	m	struct:gen	file:
locintr	disksim_synthio.c	/^   synthio_distr  locintr;$/;"	m	struct:gen	file:
lockgran	disksim_cachemem.c	/^   int lockgran;$/;"	m	struct:cache_def	file:
lockstop	disksim_cachemem.c	/^   int lockstop;$/;"	m	struct:cacheevent	file:
locktype	disksim_cachemem.c	/^   int locktype;$/;"	m	struct:cacheevent	file:
lockwaiters	disksim_cachemem.c	/^   cache_lockwaiters *lockwaiters;$/;"	m	struct:cacheatom	file:
logblk	fast.c	/^    struct LogMap logblk;$/;"	m	struct:seq_log_blk	typeref:struct:seq_log_blk::LogMap	file:
logblk	fast.youkim.c	/^    struct LogMap logblk;$/;"	m	struct:seq_log_blk	typeref:struct:seq_log_blk::LogMap	file:
logblk	fast_bk.c	/^    struct LogMap logblk;$/;"	m	struct:seq_log_blk	typeref:struct:seq_log_blk::LogMap	file:
logblk	last.c	/^    struct LogMap logblk;$/;"	m	struct:seq_log_blk	typeref:struct:seq_log_blk::LogMap	file:
logorg	disksim_logorg.h	/^typedef struct logorg {$/;"	s
logorg	disksim_logorg.h	/^} logorg;$/;"	t	typeref:struct:logorg
logorg_addnewtooutstandq	disksim_logorg.c	/^static void logorg_addnewtooutstandq (logorg *currlogorg, outstand *temp)$/;"	f	file:
logorg_addr	disksim_logorg.c	/^static int logorg_addr(logorg *result, char *s) {$/;"	f	file:
logorg_addtooutstandq	disksim_logorg.c	/^static void logorg_addtooutstandq (logorg *currlogorg, outstand *temp)$/;"	f	file:
logorg_check_dependencies	disksim_redun.c	/^int logorg_check_dependencies (logorg *currlogorg, outstand *req, ioreq_event *curr)$/;"	f
logorg_cleanstats	disksim_logorg.c	/^void logorg_cleanstats (logorg **logorgs, int numlogorgs)$/;"	f
logorg_create_table	disksim_redun.c	/^void logorg_create_table (logorg *currlogorg)$/;"	f
logorg_create_table_left_sym	disksim_redun.c	/^static void logorg_create_table_left_sym (logorg *currlogorg)$/;"	f	file:
logorg_diffdist	disksim_logorg.c	/^static void logorg_diffdist (double mydiff, int *dist)$/;"	f	file:
logorg_distn	disksim_logorg.c	/^static int logorg_distn(logorg *result, char *s) {$/;"	f	file:
logorg_getfromoutstandq	disksim_logorg.c	/^static outstand * logorg_getfromoutstandq (logorg *currlogorg, int requestno)$/;"	f	file:
logorg_initialize	disksim_logorg.c	/^void logorg_initialize (logorg **logorgs, $/;"	f
logorg_join_seqreqs	disksim_redun.c	/^static int logorg_join_seqreqs (ioreq_event *reqlist, ioreq_event *curr, int seqgive)$/;"	f	file:
logorg_mapcomplete	disksim_logorg.c	/^int logorg_mapcomplete (logorg **logorgs, int numlogorgs, ioreq_event *curr)$/;"	f
logorg_mapcomplete_update_stats	disksim_logorg.c	/^static void logorg_mapcomplete_update_stats (logorg *currlogorg, ioreq_event *curr, outstand *req)$/;"	f	file:
logorg_maphybridstore	disksim_logorg.c	/^static int logorg_maphybridstore (logorg *currlogorg, ioreq_event *curr)$/;"	f	file:
logorg_mapideal	disksim_logorg.c	/^static void logorg_mapideal (logorg *currlogorg, ioreq_event *curr)$/;"	f	file:
logorg_mapinterleaved	disksim_logorg.c	/^static int logorg_mapinterleaved (logorg *currlogorg, ioreq_event *curr)$/;"	f	file:
logorg_maprandom	disksim_logorg.c	/^static void logorg_maprandom (logorg *currlogorg, ioreq_event *curr)$/;"	f	file:
logorg_maprequest	disksim_logorg.c	/^int logorg_maprequest (logorg **logorgs, int numlogorgs, ioreq_event *curr)$/;"	f
logorg_maprequest_update_stats	disksim_logorg.c	/^static void logorg_maprequest_update_stats (logorg *currlogorg, ioreq_event *curr, outstand *req, int numreqs)$/;"	f	file:
logorg_mapstriped	disksim_logorg.c	/^static int logorg_mapstriped (logorg *currlogorg, ioreq_event *curr)$/;"	f	file:
logorg_modulus_update	disksim_redun.c	/^static int logorg_modulus_update (int inc, int val, int maxval)$/;"	f	file:
logorg_numoutdist	disksim_logorg.c	/^static void logorg_numoutdist (int numout, int *dist)$/;"	f	file:
logorg_overlap	disksim_logorg.c	/^static int logorg_overlap (logorg *currlogorg, int devno, ioreq_event *curr, int blksperpart)$/;"	f	file:
logorg_parity_disk	disksim_redun.c	/^int logorg_parity_disk (logorg *currlogorg, ioreq_event *curr, int numreqs)$/;"	f
logorg_parity_read_old_nosync	disksim_redun.c	/^static void logorg_parity_read_old_nosync (logorg *currlogorg, ioreq_event *curr, int numreqs)$/;"	f	file:
logorg_parity_read_old_sync	disksim_redun.c	/^static void logorg_parity_read_old_sync (logorg *currlogorg, ioreq_event *curr, int numreqs)$/;"	f	file:
logorg_parity_rotate	disksim_redun.c	/^int logorg_parity_rotate (logorg *currlogorg, ioreq_event *curr, int numreqs)$/;"	f
logorg_parity_rotate_ideal	disksim_redun.c	/^static void logorg_parity_rotate_ideal (logorg *currlogorg, ioreq_event *curr)$/;"	f	file:
logorg_parity_rotate_random	disksim_redun.c	/^static void logorg_parity_rotate_random (logorg *currlogorg, ioreq_event *curr)$/;"	f	file:
logorg_parity_rotate_updates	disksim_redun.c	/^static int logorg_parity_rotate_updates (logorg *currlogorg, ioreq_event *curr, int inc)$/;"	f	file:
logorg_parity_table	disksim_redun.c	/^int logorg_parity_table (logorg *currlogorg, ioreq_event *curr, int numreqs)$/;"	f
logorg_parity_table_dodeps_nosync	disksim_redun.c	/^static void logorg_parity_table_dodeps_nosync (logorg *currlogorg, ioreq_event *curr, ioreq_event **redunlist, ioreq_event **reqlist)$/;"	f	file:
logorg_parity_table_dodeps_sync	disksim_redun.c	/^static void logorg_parity_table_dodeps_sync (logorg *currlogorg, ioreq_event *curr, ioreq_event **redunlist, ioreq_event **reqlist)$/;"	f	file:
logorg_parity_table_insert	disksim_redun.c	/^static void logorg_parity_table_insert (ioreq_event **head, ioreq_event *curr)$/;"	f	file:
logorg_parity_table_read_old	disksim_redun.c	/^static void logorg_parity_table_read_old (logorg *currlogorg, ioreq_event *rowhead, ioreq_event **reqlist, int opid)$/;"	f	file:
logorg_parity_table_recon	disksim_redun.c	/^static void logorg_parity_table_recon (logorg *currlogorg, ioreq_event *rowhead, ioreq_event **reqlist, int stripeno, int unitno, int tableadd, int opid)$/;"	f	file:
logorg_postpass	disksim_logorg.c	/^static void logorg_postpass(struct logorg **logorgs, int numlogorgs)$/;"	f	file:
logorg_postpass_per	disksim_logorg.c	/^static void logorg_postpass_per(logorg *currlogorg, int orgno)$/;"	f	file:
logorg_printblockingstats	disksim_logorg.c	/^static void logorg_printblockingstats (logorg *currlogorg, char *prefix)$/;"	f	file:
logorg_printinterferestats	disksim_logorg.c	/^static void logorg_printinterferestats (logorg *currlogorg, char *prefix)$/;"	f	file:
logorg_printlocalitystats	disksim_logorg.c	/^static void logorg_printlocalitystats (logorg *currlogorg, char *prefix)$/;"	f	file:
logorg_printreqtimestats	disksim_logorg.c	/^static void logorg_printreqtimestats (logorg *currlogorg, char *prefix)$/;"	f	file:
logorg_printstampstats	disksim_logorg.c	/^static void logorg_printstampstats (logorg *currlogorg, char *prefix)$/;"	f	file:
logorg_printstats	disksim_logorg.c	/^void logorg_printstats (logorg **logorgs, int numlogorgs, char *sourcestr)$/;"	f
logorg_raise_priority	disksim_logorg.c	/^void logorg_raise_priority (logorg **logorgs, int numlogorgs, int opid, int devno, int blkno, void *buf)$/;"	f
logorg_redun	disksim_logorg.c	/^static int logorg_redun(logorg *result, char *s) {$/;"	f	file:
logorg_resetstats	disksim_logorg.c	/^void logorg_resetstats (logorg **logorgs, int numlogorgs)$/;"	f
logorg_set_arraydisk	disksim_logorg.c	/^INLINE void logorg_set_arraydisk(struct logorg *l, int n) {$/;"	f
logorg_shadowed	disksim_redun.c	/^int logorg_shadowed (logorg *currlogorg, ioreq_event *curr, int numreqs)$/;"	f
logorg_shadowed_get_short_dist	disksim_redun.c	/^static int logorg_shadowed_get_short_dist (logorg *currlogorg, ioreq_event *curr, int numtocheck, int *checklist)$/;"	f	file:
logorg_shadowed_get_short_queue	disksim_redun.c	/^static int logorg_shadowed_get_short_queue (logorg *currlogorg, ioreq_event *curr, int def)$/;"	f	file:
logorg_show_buf_from_outstandq	disksim_logorg.c	/^static outstand *logorg_show_buf_from_outstandq (logorg *currlogorg, void *buf, int opid)$/;"	f	file:
logorg_streakstat	disksim_logorg.c	/^static void logorg_streakstat (logorg *currlogorg, int diskno)$/;"	f	file:
logorg_tabular_rottype	disksim_redun.c	/^int logorg_tabular_rottype (int maptype, int reduntype, int rottype, int stripeunit)$/;"	f
logorg_timestamp	disksim_logorg.c	/^void logorg_timestamp (ioreq_event *curr)$/;"	f
logorg_update_blocking_stats	disksim_logorg.c	/^static void logorg_update_blocking_stats (logorg *currlogorg, ioreq_event *curr)$/;"	f	file:
logorg_update_intarr_stats	disksim_logorg.c	/^static void logorg_update_intarr_stats (logorg *currlogorg, ioreq_event *curr)$/;"	f	file:
logorg_update_interfere_stats	disksim_logorg.c	/^static void logorg_update_interfere_stats (logorg *currlogorg, ioreq_event *curr)$/;"	f	file:
logorgdev	disksim_logorg.h	/^} logorgdev;$/;"	t	typeref:struct:__anon23
logorgstat	disksim_logorg.h	/^} logorgstat;$/;"	t	typeref:struct:__anon22
long_options	syssim_driver2.c	/^static struct option long_options[] = {$/;"	v	typeref:struct:option	file:
lpn	fast.c	/^    int lpn[PAGE_NUM_PER_BLK];$/;"	m	struct:LogMap	file:
lpn	fast.youkim.c	/^    int lpn[PAGE_NUM_PER_BLK];$/;"	m	struct:LogMap	file:
lpn	fast_bk.c	/^    int lpn[PAGE_NUM_PER_BLK];$/;"	m	struct:LogMap	file:
lpn	last.c	/^    int lpn[PAGE_NUM_PER_BLK];$/;"	m	struct:LogMap	file:
lpn_status	fast.c	/^    int lpn_status[PAGE_NUM_PER_BLK]; \/\/ -1: invalid, 0: free, 1: valid$/;"	m	struct:LogMap	file:
lpn_status	fast.youkim.c	/^    int lpn_status[PAGE_NUM_PER_BLK]; \/\/ -1: invalid, 0: free, 1: valid$/;"	m	struct:LogMap	file:
lpn_status	fast_bk.c	/^    int lpn_status[PAGE_NUM_PER_BLK]; \/\/ -1: invalid, 0: free, 1: valid$/;"	m	struct:LogMap	file:
lpn_status	last.c	/^    int lpn_status[PAGE_NUM_PER_BLK]; \/\/ -1: invalid, 0: free, 1: valid$/;"	m	struct:LogMap	file:
lru	disksim_cachemem.c	/^   cache_atom *lru[CACHE_MAXSEGMENTS];$/;"	m	struct:__anon4	file:
lru_next	disksim_cachemem.c	/^   struct cacheatom *lru_next;$/;"	m	struct:cacheatom	typeref:struct:cacheatom::cacheatom	file:
lru_prev	disksim_cachemem.c	/^   struct cacheatom *lru_prev;$/;"	m	struct:cacheatom	typeref:struct:cacheatom::cacheatom	file:
lsn	nand.h	/^  _u32 lsn   : 30;$/;"	m	struct:sect_state
lwn	nand.h	/^  _s32 lwn : 12; \/\/ last written page number$/;"	m	struct:nand_blk_info
main	disksim_main.c	/^int main (int argc, char **argv)$/;"	f
main	hplcomb.c	/^int main(argc, argv)$/;"	f
main	pareto2.c	/^int main(){$/;"	f
main	rms.c	/^int main(argc, argv)$/;"	f
main	syssim_driver.c	/^main(int argc, char *argv[])$/;"	f
main	syssim_driver2.c	/^int main(int argc, char *argv[])$/;"	f
make_selection	syssim_driver2.c	/^funcptr make_selection[] = {$/;"	v
make_selection_GREEDY_AREA_FIRST	syssim_driver2.c	/^int make_selection_GREEDY_AREA_FIRST(alg_args_t *args){$/;"	f
make_selection_GREEDY_BLOCK	syssim_driver2.c	/^int make_selection_GREEDY_BLOCK(alg_args_t *args){$/;"	f
make_selection_GREEDY_BLOCK_COIN	syssim_driver2.c	/^int make_selection_GREEDY_BLOCK_COIN(alg_args_t *args){$/;"	f
make_selection_GREEDY_BW	syssim_driver2.c	/^int make_selection_GREEDY_BW(alg_args_t *args){$/;"	f
make_selection_GREEDY_BW_COIN	syssim_driver2.c	/^int make_selection_GREEDY_BW_COIN(alg_args_t *args){$/;"	f
make_selection_GREEDY_BW_EDGE_COIN	syssim_driver2.c	/^int make_selection_GREEDY_BW_EDGE_COIN(alg_args_t *args){$/;"	f
make_selection_GREEDY_BW_MAX_DEST	syssim_driver2.c	/^int make_selection_GREEDY_BW_MAX_DEST(alg_args_t *args){$/;"	f
make_selection_GREEDY_BW_PROB_COIN	syssim_driver2.c	/^int make_selection_GREEDY_BW_PROB_COIN(alg_args_t *args){$/;"	f
make_selection_GREEDY_BW_SOURCE	syssim_driver2.c	/^int make_selection_GREEDY_BW_SOURCE(alg_args_t *args){$/;"	f
make_selection_GREEDY_BW_SOURCE_DIST	syssim_driver2.c	/^int make_selection_GREEDY_BW_SOURCE_DIST(alg_args_t *args){$/;"	f
make_selection_GREEDY_BW_SOURCE_WEIGHT	syssim_driver2.c	/^int make_selection_GREEDY_BW_SOURCE_WEIGHT(alg_args_t *args){$/;"	f
make_selection_GREEDY_BW_TIME_DIST	syssim_driver2.c	/^int make_selection_GREEDY_BW_TIME_DIST(alg_args_t *args){$/;"	f
make_selection_GREEDY_BW_TRACK	syssim_driver2.c	/^int make_selection_GREEDY_BW_TRACK(alg_args_t *args){$/;"	f
make_selection_GREEDY_BW_TRACK_DIST	syssim_driver2.c	/^int make_selection_GREEDY_BW_TRACK_DIST(alg_args_t *args){$/;"	f
make_selection_GREEDY_UNIFORM_RATE	syssim_driver2.c	/^int make_selection_GREEDY_UNIFORM_RATE(alg_args_t *args){$/;"	f
make_selection_LEAST_LATENCY	syssim_driver2.c	/^int make_selection_LEAST_LATENCY(alg_args_t *args){$/;"	f
make_selection_SEPTF	syssim_driver2.c	/^int make_selection_SEPTF(alg_args_t *args){$/;"	f
make_selection_SEPTF_FRAGMENT	syssim_driver2.c	/^int make_selection_SEPTF_FRAGMENT(alg_args_t *args){$/;"	f
make_selection_SEPTF_TRACK	syssim_driver2.c	/^int make_selection_SEPTF_TRACK(alg_args_t *args){$/;"	f
make_selection_SSTF	syssim_driver2.c	/^int make_selection_SSTF(alg_args_t *args){$/;"	f
map	disksim_cachemem.c	/^   cache_mapentry *map;$/;"	m	struct:cache_def	file:
map_age	opagemap.h	/^  int  map_age;$/;"	m	struct:opm_entry
map_age	pagemap.h	/^  int  map_age;$/;"	m	struct:pm_entry
map_blk_erase	opagemap.c	/^int map_blk_erase = 0;$/;"	v
map_blocknum	syssim_driver2.c	/^void map_blocknum(int diskno, int blocknum, unsigned short *cyl, unsigned short *sector, unsigned short *surface)$/;"	f
map_dir	pagemap.h	/^struct map_dir{$/;"	s
map_disk_lsn_to_flash_lsn	cache.c	/^unsigned long  map_disk_lsn_to_flash_lsn(struct flash_cache_container* ds, unsigned long arr_len, unsigned long sectorid)$/;"	f
map_flash_erase_num	ssd_interface.h	/^int map_flash_erase_num;$/;"	v
map_flash_gc_read_num	ssd_interface.h	/^int map_flash_gc_read_num;$/;"	v
map_flash_gc_write_num	ssd_interface.h	/^int map_flash_gc_write_num;$/;"	v
map_flash_oob_read_num	ssd_interface.h	/^int map_flash_oob_read_num;$/;"	v
map_flash_oob_write_num	ssd_interface.h	/^int map_flash_oob_write_num;$/;"	v
map_flash_read_num	ssd_interface.h	/^int map_flash_read_num;$/;"	v
map_flash_write_num	ssd_interface.h	/^int map_flash_write_num;$/;"	v
map_pg_read	opagemap.c	/^int map_pg_read=0;$/;"	v
map_pg_read	opagemap.youkim.c	/^int map_pg_read=0;$/;"	v
map_pg_read	opagemap_noopt.c	/^int map_pg_read=0;$/;"	v
map_pg_read	opagemap_opt.c	/^int map_pg_read=0;$/;"	v
map_pg_write	opagemap.c	/^int map_pg_write=0;$/;"	v
map_status	opagemap.h	/^  int  map_status;$/;"	m	struct:opm_entry
map_status	pagemap.h	/^  int  map_status;$/;"	m	struct:pm_entry
mapdir	opagemap.c	/^struct omap_dir *mapdir;$/;"	v	typeref:struct:omap_dir
mapdir	opagemap.youkim.c	/^struct omap_dir *mapdir;$/;"	v	typeref:struct:omap_dir
mapdir	opagemap_noopt.c	/^struct omap_dir *mapdir;$/;"	v	typeref:struct:omap_dir
mapdir	opagemap_opt.c	/^struct omap_dir *mapdir;$/;"	v	typeref:struct:omap_dir
mapdir	pagemap.c	/^struct map_dir *mapdir;$/;"	v	typeref:struct:map_dir
mapmask	disksim_cachemem.c	/^   int mapmask;$/;"	m	struct:cache_def	file:
maptype	disksim_logorg.h	/^   int    maptype;$/;"	m	struct:logorg
max	disksim_global.h	421;"	d
max	syssim_driver2.c	/^  float max;$/;"	m	struct:touchmap_s	file:
max_assgn_blk_num	blockmap.c	/^int max_assgn_blk_num;$/;"	v
max_band_count	syssim_driver2.c	/^static int max_band_count=0;$/;"	v	file:
max_cyl	syssim_driver2.c	/^static int max_cyl = 0;$/;"	v	file:
max_cyl_prob	syssim_driver2.c	/^static double max_cyl_prob=0.0;$/;"	v	file:
max_heap_for_flash_cache_ghost_ds	cache.h	/^struct flash_cache_line** max_heap_for_flash_cache_ghost_ds; \/\/The size of this array is flash_ghost_size_in_sectors$/;"	v	typeref:struct:flash_cache_line
max_heap_insert	cache.c	/^void max_heap_insert(struct flash_cache_line** fclstar, unsigned long arr_len, struct flash_cache_line* fcl)$/;"	f
max_heap_key_increased	cache.c	/^void max_heap_key_increased(struct flash_cache_line** fclstar, unsigned long arr_len, unsigned long index)$/;"	f
max_heapify	cache.c	/^void max_heapify(struct flash_cache_line** fclstar, unsigned long arr_len, unsigned long index)	$/;"	f
max_percent	syssim_driver2.c	/^static float max_percent = 0.0;$/;"	v	file:
max_temp	disksim_diskctlr2.c	/^  double max_temp[MAX_DEVICE_NUM];$/;"	v
max_time	syssim_driver2.c	/^static long max_time = 0;$/;"	v	file:
maxactive	disksim_cachemem.c	/^   int maxactive[CACHE_MAXSEGMENTS];$/;"	m	struct:__anon4	file:
maxbufferspace	disksim_cachedev.c	/^   int maxbufferspace;$/;"	m	struct:__anon2	file:
maxcyl	raw_layout.c	/^  int mincyl,maxcyl;$/;"	m	struct:sfreq	file:
maxdeviceno	disksim_device.c	83;"	d	file:
maxdeviceno	disksim_device.h	/^   int maxdeviceno[DEVICETYPE_MAX];	\/* maximum deviceno of each$/;"	m	struct:device_info
maxdiskqsize	disksim_ctlr.h	/^   int		maxdiskqsize;$/;"	m	struct:controller
maxlistlen	disksim_ioqueue.c	/^   int		maxlistlen;$/;"	m	struct:ioq	file:
maxlistlen	disksim_ioqueue.c	/^   int		maxlistlen;$/;"	m	struct:subq	file:
maxoutstanding	disksim_ctlr.h	/^   int          maxoutstanding;$/;"	m	struct:controller
maxoutstanding	disksim_ioqueue.c	/^   int		maxoutstanding;$/;"	m	struct:ioq	file:
maxoutstanding	disksim_ioqueue.c	/^   int		maxoutstanding;$/;"	m	struct:subq	file:
maxoutstanding	disksim_iosim.h	/^   int          maxoutstanding;$/;"	m	struct:__anon20
maxoutstanding	disksim_iosim.h	/^   int          maxoutstanding;$/;"	m	struct:__anon21
maxoutstanding	disksim_logorg.h	/^   int		maxoutstanding;$/;"	m	struct:__anon22
maxqlen	disksim_disk.h	/^  int           maxqlen;$/;"	m	struct:disk
maxqlen	disksim_ioqueue.c	/^   int		maxqlen;$/;"	m	struct:ioq	file:
maxqlen	disksim_ioqueue.c	/^   int		maxqlen;$/;"	m	struct:subq	file:
maxqlen	disksim_simpledisk.c	/^   int maxqlen;$/;"	m	struct:simpledisk	file:
maxqlen	disksim_simpleflash.c	/^   int maxqlen;$/;"	m	struct:simpleflash	file:
maxreadahead	disksim_disk.h	/^  int		maxreadahead;$/;"	m	struct:disk
maxreadaheadblkno	disksim_disk.h	/^   int		maxreadaheadblkno;      \/* max prefetch blkno + 1 *\/$/;"	m	struct:seg
maxreadlen	disksim_ioqueue.c	/^   int		maxreadlen;$/;"	m	struct:ioq	file:
maxreadlen	disksim_ioqueue.c	/^   int		maxreadlen;$/;"	m	struct:subq	file:
maxreqsize	disksim_cachedev.c	/^   int maxreqsize;$/;"	m	struct:cache_def	file:
maxreqsize	disksim_cachemem.c	/^   int maxreqsize;$/;"	m	struct:cache_def	file:
maxreqsize	disksim_iosim.h	/^   int          maxreqsize;$/;"	m	struct:__anon20
maxscatgath	disksim_cachemem.c	/^   int maxscatgath;$/;"	m	struct:cache_def	file:
maxval	disksim_stat.h	/^   double  maxval;$/;"	m	struct:__anon35
maxwritelen	disksim_ioqueue.c	/^   int		maxwritelen;$/;"	m	struct:ioq	file:
maxwritelen	disksim_ioqueue.c	/^   int		maxwritelen;$/;"	m	struct:subq	file:
mean	disksim_synthio.c	/^   double mean;$/;"	m	struct:dist	file:
mech_state	disksim_disk.h	/^  struct dm_mech_state mech_state;$/;"	m	struct:disk	typeref:struct:disk::dm_mech_state
media_busy	disksim_simpledisk.c	/^   int media_busy;$/;"	m	struct:simpledisk	file:
media_busy	disksim_simpleflash.c	/^   int media_busy;$/;"	m	struct:simpleflash	file:
mems_reqinfo	disksim_global.h	/^   void  *mems_reqinfo; \/* per-request info for mems subsystem *\/$/;"	m	struct:ioreq_ev
mems_sled	disksim_global.h	/^   void  *mems_sled;	 \/* mems sled associated with a particular event *\/$/;"	m	struct:ioreq_ev
memsinfo	disksim_global.h	/^   struct mems_info *memsinfo;$/;"	m	struct:disksim	typeref:struct:disksim::mems_info
merge_blocks	blockmap.c	/^void merge_blocks(_u32 l_blk_no )$/;"	f
merge_blocks	blockmap_aayush.c	/^void merge_blocks(_u32 l_blk_no )$/;"	f
merge_full	fast.c	/^void merge_full(int pmt_index)  $/;"	f
merge_full	fast.youkim.c	/^void merge_full(int pmt_index)  $/;"	f
merge_full	fast_bk.c	/^void merge_full(int pmt_index)  $/;"	f
merge_full	last.c	/^void merge_full(int pmt_index)  $/;"	f
merge_full_SW	fast.c	/^void merge_full_SW(int req_lsn)$/;"	f
merge_full_SW	fast.youkim.c	/^void merge_full_SW(int req_lsn)$/;"	f
merge_full_SW	fast_bk.c	/^void merge_full_SW(int req_lsn)$/;"	f
merge_full_SW	last.c	/^void merge_full_SW(int req_lsn)$/;"	f
merge_full_num	fast.c	/^int merge_full_num = 0;$/;"	v
merge_full_num	fast.youkim.c	/^int merge_full_num = 0;$/;"	v
merge_full_num	fast_bk.c	/^int merge_full_num = 0;$/;"	v
merge_full_num	last.c	/^int merge_full_num = 0;$/;"	v
merge_full_num	opagemap.c	/^int merge_full_num;$/;"	v
merge_partial	fast.c	/^void merge_partial(int log_pbn, int data_pbn, int fpc, int req_lsn)$/;"	f
merge_partial	fast.youkim.c	/^void merge_partial(int log_pbn, int data_pbn, int fpc, int req_lsn)$/;"	f
merge_partial	fast_bk.c	/^void merge_partial(int log_pbn, int data_pbn, int fpc, int req_lsn)$/;"	f
merge_partial	last.c	/^void merge_partial(int log_pbn, int data_pbn, int fpc, int req_lsn)$/;"	f
merge_partial_num	fast.c	/^int merge_partial_num = 0;$/;"	v
merge_partial_num	fast.youkim.c	/^int merge_partial_num = 0;$/;"	v
merge_partial_num	fast_bk.c	/^int merge_partial_num = 0;$/;"	v
merge_partial_num	last.c	/^int merge_partial_num = 0;$/;"	v
merge_partial_num	opagemap.c	/^int merge_partial_num;$/;"	v
merge_request	cache.c	/^int merge_request(struct outgoing_request* t, int diskOrFlash,int operation,int disk_id, unsigned long sectorid, int num_sectors, int originalOrInduced)$/;"	f
merge_switch	fast.c	/^void merge_switch(int log_pbn, int data_pbn)$/;"	f
merge_switch	fast.youkim.c	/^void merge_switch(int log_pbn, int data_pbn)$/;"	f
merge_switch	fast_bk.c	/^void merge_switch(int log_pbn, int data_pbn)$/;"	f
merge_switch	last.c	/^void merge_switch(int log_pbn, int data_pbn)$/;"	f
merge_switch_num	fast.c	/^int merge_switch_num = 0;$/;"	v
merge_switch_num	fast.youkim.c	/^int merge_switch_num = 0;$/;"	v
merge_switch_num	fast_bk.c	/^int merge_switch_num = 0;$/;"	v
merge_switch_num	last.c	/^int merge_switch_num = 0;$/;"	v
merge_switch_num	opagemap.c	/^int merge_switch_num;$/;"	v
min	disksim_global.h	419;"	d
min_fb_num	nand.c	/^_u32 nand_blk_num, min_fb_num;$/;"	v
min_fb_num	nand_aayush.c	/^_u32 nand_blk_num, min_fb_num;$/;"	v
min_fragment_size	syssim_driver2.c	/^static int min_fragment_size=1;$/;"	v	file:
min_heap_for_flash_cache_ds	cache.h	/^struct flash_cache_line** min_heap_for_flash_cache_ds; \/\/The size of this array is flash_utilization_size_in_sectors$/;"	v	typeref:struct:flash_cache_line
min_heap_insert	cache.c	/^void min_heap_insert(struct flash_cache_line** fclstar, unsigned long arr_len, struct flash_cache_line* fcl)$/;"	f
min_heap_key_decreased	cache.c	/^void min_heap_key_decreased(struct flash_cache_line** fclstar, unsigned long arr_len, unsigned long index)$/;"	f
min_heapify	cache.c	/^void min_heapify(struct flash_cache_line** fclstar, unsigned long arr_len, unsigned long index)	$/;"	f
min_sector_pickup	syssim_driver2.c	/^static int min_sector_pickup = 1;$/;"	v	file:
min_sectors	syssim_driver2.c	/^static unsigned short **min_sectors;$/;"	v	file:
min_temp	disksim_diskctlr2.c	/^  double min_temp[MAX_DEVICE_NUM];$/;"	v
min_time	disksim_ioqueue.c	/^static double min_time;$/;"	v	file:
mincyl	raw_layout.c	/^  int mincyl,maxcyl;$/;"	m	struct:sfreq	file:
minimum_seek_delay	disksim_disk.h	/^  double	minimum_seek_delay;$/;"	m	struct:disk
minreadahead	disksim_disk.h	/^  int		minreadahead;$/;"	m	struct:disk
minreadaheadblkno	disksim_disk.h	/^   int		minreadaheadblkno;      \/* min prefetch blkno + 1 *\/$/;"	m	struct:seg
missing_cnt	fast.c	/^int missing_cnt = 0;$/;"	v
missing_cnt	fast.youkim.c	/^int missing_cnt = 0;$/;"	v
missing_cnt	fast_bk.c	/^int missing_cnt = 0;$/;"	v
missing_cnt	last.c	/^int missing_cnt = 0;$/;"	v
model	disksim_disk.h	/^  struct dm_disk_if    *model;$/;"	m	struct:disk	typeref:struct:disk::dm_disk_if
move_count	ssd_interface.c	/^int move_count = 0;$/;"	v
multi_disk_last	disksim_disk.h	/^  int multi_disk_last[MAXDISKS];$/;"	m	struct:disk_info
multi_disk_last	disksim_disk.h	519;"	d
multi_disk_last_angle	disksim_disk.h	/^  double multi_disk_last_angle[MAXDISKS][MAXSTATS];$/;"	m	struct:disk_info
multi_disk_last_angle	disksim_disk.h	517;"	d
multi_disk_last_cylno	disksim_disk.h	/^  int multi_disk_last_cylno[MAXDISKS][MAXSTATS];$/;"	m	struct:disk_info
multi_disk_last_cylno	disksim_disk.h	515;"	d
multi_disk_last_latency	disksim_disk.h	/^  double multi_disk_last_latency[MAXDISKS][MAXSTATS];$/;"	m	struct:disk_info
multi_disk_last_latency	disksim_disk.h	514;"	d
multi_disk_last_seektime	disksim_disk.h	/^  double multi_disk_last_seektime[MAXDISKS][MAXSTATS];$/;"	m	struct:disk_info
multi_disk_last_seektime	disksim_disk.h	513;"	d
multi_disk_last_surface	disksim_disk.h	/^  int multi_disk_last_surface[MAXDISKS][MAXSTATS];$/;"	m	struct:disk_info
multi_disk_last_surface	disksim_disk.h	516;"	d
multi_disk_last_xfertime	disksim_disk.h	/^  double multi_disk_last_xfertime[MAXDISKS][MAXSTATS];$/;"	m	struct:disk_info
multi_disk_last_xfertime	disksim_disk.h	518;"	d
multi_programming	syssim_driver2.c	/^static int multi_programming = 2;$/;"	v	file:
n	syssim_driver.c	/^  int n;$/;"	m	struct:__anon40	file:
n	syssim_driver2.c	/^	int n;$/;"	m	struct:__anon39	file:
name	disksim_bus.c	/^  char         *name;$/;"	m	struct:bus	file:
name	disksim_cachedev.c	/^   char *name;$/;"	m	struct:cache_def	file:
name	disksim_cachemem.c	/^   char *name;$/;"	m	struct:cache_def	file:
name	disksim_ctlr.h	/^   char        *name;$/;"	m	struct:controller
name	disksim_iodriver.h	/^   char        *name;$/;"	m	struct:iodriver
name	disksim_ioqueue.c	/^   char        *name;$/;"	m	struct:ioq	file:
name	disksim_logorg.h	/^  char *name;$/;"	m	struct:logorg
nand_blk	nand.c	/^struct nand_blk_info *nand_blk;$/;"	v	typeref:struct:nand_blk_info
nand_blk	nand_aayush.c	/^struct nand_blk_info *nand_blk;$/;"	v	typeref:struct:nand_blk_info
nand_blk_info	nand.h	/^struct nand_blk_info {$/;"	s
nand_blk_num	nand.c	/^_u32 nand_blk_num, min_fb_num;$/;"	v
nand_blk_num	nand_aayush.c	/^_u32 nand_blk_num, min_fb_num;$/;"	v
nand_end	nand.c	/^void nand_end ()$/;"	f
nand_end	nand_aayush.c	/^void nand_end ()$/;"	f
nand_erase	nand.c	/^void nand_erase (_u32 blk_no)$/;"	f
nand_erase	nand_aayush.c	/^void nand_erase (_u32 blk_no)$/;"	f
nand_get_free_blk	nand.c	/^_u32 nand_get_free_blk (int isGC) $/;"	f
nand_get_free_blk	nand_aayush.c	/^_u32 nand_get_free_blk (int isGC) $/;"	f
nand_init	nand.c	/^int nand_init (_u32 blk_num, _u8 min_free_blk_num)$/;"	f
nand_init	nand_aayush.c	/^int nand_init (_u32 blk_num, _u8 min_free_blk_num)$/;"	f
nand_invalidate	nand.c	/^void nand_invalidate (_u32 psn, _u32 lsn)$/;"	f
nand_invalidate	nand_aayush.c	/^void nand_invalidate (_u32 psn, _u32 lsn)$/;"	f
nand_oob_read	nand.c	/^int nand_oob_read(_u32 psn)$/;"	f
nand_page_read	nand.c	/^_u8 nand_page_read(_u32 psn, _u32 *lsns, _u8 isGC)$/;"	f
nand_page_read	nand_aayush.c	/^_u8 nand_page_read(_u32 psn, _u32 *lsns, _u8 isGC)$/;"	f
nand_page_write	nand.c	/^_u8 nand_page_write(_u32 psn, _u32 *lsns, _u8 isGC, int map_flag)$/;"	f
nand_page_write	nand_aayush.c	/^_u8 nand_page_write(_u32 psn, _u32 *lsns, _u8 isGC)$/;"	f
nand_spare_read	nand_aayush.c	/^_u8 nand_spare_read(_u32 psn, _u32 *lsns)$/;"	f
nand_stat	nand.c	/^void nand_stat(int option)$/;"	f
nand_stat_print	nand.c	/^void nand_stat_print(FILE *outFP)$/;"	f
nand_stat_print	nand_aayush.c	/^void nand_stat_print(FILE *outFP)$/;"	f
nand_stat_reset	nand.c	/^void nand_stat_reset()$/;"	f
nand_stat_reset	nand_aayush.c	/^void nand_stat_reset()$/;"	f
ndrives	syssim_driver2.c	/^static int ndrives = 1;$/;"	v	file:
neverdisconnect	disksim_disk.h	/^  int		neverdisconnect;$/;"	m	struct:disk
neverdisconnect	disksim_simpledisk.c	/^   int neverdisconnect;$/;"	m	struct:simpledisk	file:
neverdisconnect	disksim_simpleflash.c	/^   int neverdisconnect;$/;"	m	struct:simpleflash	file:
new_angle	syssim_driver2.c	/^  float new_angle;$/;"	m	struct:alg_args_s	file:
new_request	syssim_driver2.c	/^Request* new_request(double when, Request* recycle)$/;"	f
newprocp	disksim_pfsim.h	/^   process *newprocp;$/;"	m	struct:__anon28
next	cache.h	/^	struct outgoing_request* next;$/;"	m	struct:outgoing_request	typeref:struct:outgoing_request::outgoing_request
next	cache.h	/^  struct induced_event* next; $/;"	m	struct:induced_event	typeref:struct:induced_event::induced_event
next	cache.h	/^  struct induced_subevent* next;$/;"	m	struct:induced_subevent	typeref:struct:induced_subevent::induced_subevent
next	cache.h	/^ struct flash_cache_container* next;$/;"	m	struct:flash_cache_container	typeref:struct:flash_cache_container::flash_cache_container
next	disksim_bus.c	/^   struct bus_ev *next;$/;"	m	struct:bus_ev	typeref:struct:bus_ev::bus_ev	file:
next	disksim_cachedev.c	/^   struct cacheevent *next;$/;"	m	struct:cacheevent	typeref:struct:cacheevent::cacheevent	file:
next	disksim_cachemem.c	/^   struct cacheevent *next;$/;"	m	struct:cacheevent	typeref:struct:cacheevent::cacheevent	file:
next	disksim_cachemem.c	/^   struct cachelockh *next;$/;"	m	struct:cachelockh	typeref:struct:cachelockh::cachelockh	file:
next	disksim_cachemem.c	/^   struct cachelockw *next;$/;"	m	struct:cachelockw	typeref:struct:cachelockw::cachelockw	file:
next	disksim_disk.h	/^   struct seg  *next;$/;"	m	struct:seg	typeref:struct:seg::seg
next	disksim_global.h	/^   struct ev *next;$/;"	m	struct:ev	typeref:struct:ev::ev
next	disksim_global.h	/^   struct ev *next;$/;"	m	struct:foo	typeref:struct:foo::ev
next	disksim_global.h	/^   struct intr_ev * next;$/;"	m	struct:intr_ev	typeref:struct:intr_ev::intr_ev
next	disksim_global.h	/^   struct ioreq_ev *next;$/;"	m	struct:ioreq_ev	typeref:struct:ioreq_ev::ioreq_ev
next	disksim_global.h	/^   struct timer_ev *next;$/;"	m	struct:timer_ev	typeref:struct:timer_ev::timer_ev
next	disksim_ioqueue.c	/^   struct iob *next;$/;"	m	struct:iob	typeref:struct:iob::iob	file:
next	disksim_logorg.h	/^   struct dep *next;$/;"	m	struct:dep	typeref:struct:dep::dep
next	disksim_logorg.h	/^   struct os *next;$/;"	m	struct:os	typeref:struct:os::os
next	disksim_pfsim.h	/^   event      *next;$/;"	m	struct:__anon25
next	disksim_pfsim.h	/^   event * next;$/;"	m	struct:__anon27
next	disksim_pfsim.h	/^   event * next;$/;"	m	struct:__anon28
next	disksim_pfsim.h	/^   event * next;$/;"	m	struct:__anon29
next	disksim_pfsim.h	/^   event * next;$/;"	m	struct:__anon30
next	disksim_pfsim.h	/^   event * next;$/;"	m	struct:__anon31
next	disksim_pfsim.h	/^   struct process *next;$/;"	m	struct:process	typeref:struct:process::process
next	syssim_driver2.c	/^  struct bucket_s *next;$/;"	m	struct:bucket_s	typeref:struct:bucket_s::bucket_s	file:
next_event	syssim_driver.c	/^static SysTime next_event = -1;	\/* next event *\/$/;"	v	file:
next_event	syssim_driver2.c	/^static SysTime next_event = 0;	\/* next event *\/$/;"	v	file:
no_wear_level	ssd_interface.c	/^void no_wear_level(int curr_blk_no)$/;"	f
no_write_allocate	disksim_cachemem.c	/^   int no_write_allocate;$/;"	m	struct:cache_def	file:
nocritreadstats	disksim_ioqueue.c	/^   statgen	nocritreadstats;$/;"	m	struct:subq	file:
nocritwritestats	disksim_ioqueue.c	/^   statgen	nocritwritestats;$/;"	m	struct:subq	file:
node_s	syssim_driver2.c	/^typedef struct node_s {$/;"	s	file:
node_t	syssim_driver2.c	/^} node_t;$/;"	t	typeref:struct:node_s	file:
nonzeroouttime	disksim_logorg.h	/^   double	nonzeroouttime;$/;"	m	struct:__anon22
now	syssim_driver.c	/^static SysTime now = 0;		\/* current time *\/$/;"	v	file:
now	syssim_driver2.c	/^static SysTime now = 0;		\/* current time *\/$/;"	v	file:
nrequests	syssim_driver2.c	/^static int nrequests[MAXDISKS];$/;"	v	file:
nsectors	syssim_driver2.c	/^  unsigned char nsectors;$/;"	m	struct:cyl_node_s	file:
num	disksim_simos_interface.c	/^  int num;$/;"	m	struct:DiskSimInternalCallback	file:
num_disks	cache.c	/^int num_disks = 1;$/;"	v
num_reads	cache.h	/^ double num_reads;$/;"	m	struct:flash_cache_line
num_requests	syssim_driver2.c	/^static int num_requests=0;$/;"	v	file:
num_scheduling_decisions	disksim_ioqueue.c	/^  int          num_scheduling_decisions;$/;"	m	struct:subq	file:
num_sectors	cache.h	/^	int num_sectors;$/;"	m	struct:outgoing_request
num_sptf_sdf_different	disksim_ioqueue.c	/^  int          num_sptf_sdf_different;$/;"	m	struct:subq	file:
num_writes	cache.h	/^ double num_writes; \/\/Note that the number of accesses is the sum of reads and writes $/;"	m	struct:flash_cache_line
numactive	disksim_cachemem.c	/^   int numactive[CACHE_MAXSEGMENTS];$/;"	m	struct:__anon4	file:
number	disksim_synthio.c	/^   int            number;$/;"	m	struct:gen	file:
numblocks	disksim_simpledisk.c	/^   int numblocks;$/;"	m	struct:simpledisk	file:
numblocks	disksim_simpleflash.c	/^   int numblocks;$/;"	m	struct:simpleflash	file:
numblocks	disksim_synthio.c	/^   int            numblocks;$/;"	m	struct:gen	file:
numblocks	syssim_driver2.c	/^static int numblocks;$/;"	v	file:
numbuses	disksim_bus.c	/^   int numbuses;$/;"	m	struct:businfo	file:
numbuses	disksim_bus.c	181;"	d	file:
numbuswaits	disksim_disk.h	/^   int     numbuswaits;$/;"	m	struct:__anon12
numbuswaits	disksim_simpledisk.c	/^   int     numbuswaits;$/;"	m	struct:__anon33	file:
numbuswaits	disksim_simpleflash.c	/^   int     numbuswaits;$/;"	m	struct:__anon34	file:
numcomplete	disksim_ioqueue.c	/^   int		numcomplete;$/;"	m	struct:subq	file:
numcontrollers	disksim_ctlr.h	/^   int numcontrollers;$/;"	m	struct:ctlrinfo
numcpus	disksim_pfsim.h	/^   int  numcpus;$/;"	m	struct:pf_info
numcpus	disksim_pfsim.h	290;"	d
numctlorgs	disksim_ctlr.h	/^   int numctlorgs;$/;"	m	struct:ctlrinfo
numctlrs	disksim_iodriver.h	/^   int		numctlrs;$/;"	m	struct:iodriver
numcyls	syssim_driver2.c	/^static int numcyls;$/;"	v	file:
numdeps	disksim_logorg.h	/^   int    numdeps;$/;"	m	struct:dep
numdevices	disksim_ctlr.h	/^   int		numdevices;$/;"	m	struct:controller
numdevices	disksim_device.c	77;"	d	file:
numdevices	disksim_device.h	/^   int numdevices;$/;"	m	struct:device_info
numdevices	disksim_iodriver.h	/^   int		numdevices;$/;"	m	struct:iodriver
numdirty	disksim_disk.h	/^  int		numdirty;$/;"	m	struct:disk
numdisks	disksim_disk.h	/^   int numdisks;$/;"	m	struct:disk_info
numdisks	disksim_disk.h	523;"	d
numdisks	disksim_logorg.h	/^   int    numdisks;$/;"	m	struct:logorg
numdisks	disksim_synthio.c	/^   int            numdisks;$/;"	m	struct:gen	file:
numfull	disksim_logorg.h	/^   int    numfull;$/;"	m	struct:logorg
numinbuses	disksim_ctlr.h	/^   int          numinbuses;$/;"	m	struct:controller
numinbuses	disksim_disk.h	/^  int          numinbuses;$/;"	m	struct:disk
numinbuses	disksim_simpledisk.c	/^   int numinbuses;$/;"	m	struct:simpledisk	file:
numinbuses	disksim_simpleflash.c	/^   int numinbuses;$/;"	m	struct:simpleflash	file:
numiodrivers	disksim_iodriver.h	/^   int numiodrivers;$/;"	m	struct:iodriver_info
numiodrivers	disksim_iodriver.h	185;"	d
numiodrivers	syssim_driver2.c	253;"	d	file:
numlocal	disksim_logorg.h	/^   int		numlocal;$/;"	m	struct:__anon22
numout	disksim_logorg.h	/^   int    numout;$/;"	m	struct:__anon23
numoutbuses	disksim_ctlr.h	/^   int          numoutbuses;$/;"	m	struct:controller
numoutbuses	disksim_iodriver.h	/^   int		numoutbuses;$/;"	m	struct:iodriver
numoutstanding	disksim_ioqueue.c	/^   int		numoutstanding;$/;"	m	struct:subq	file:
numoutstanding	disksim_iosim.h	/^   int		numoutstanding;$/;"	m	struct:__anon20
numreads	disksim_ioqueue.c	/^   int		numreads;$/;"	m	struct:subq	file:
numreqs	disksim_logorg.h	/^   int    numreqs;$/;"	m	struct:os
numsegs	disksim_cachemem.c	/^   int numsegs;					\/* for S-LRU *\/$/;"	m	struct:cache_def	file:
numsegs	disksim_disk.h	/^  int		numsegs;$/;"	m	struct:disk
numsimpledisks	disksim_simpledisk.c	/^   int numsimpledisks;$/;"	m	struct:simpledisk_info	file:
numsimpledisks	disksim_simpledisk.c	159;"	d	file:
numsimpleflashs	disksim_simpleflash.c	/^   int numsimpleflashs;$/;"	m	struct:simpleflash_info	file:
numsimpleflashs	disksim_simpleflash.c	182;"	d	file:
numslots	disksim_bus.c	/^  int           numslots;$/;"	m	struct:bus	file:
numsurfaces	syssim_driver2.c	/^static int numsurfaces;$/;"	v	file:
numsyncsets	disksim_disk.h	/^   int numsyncsets;$/;"	m	struct:disk_info
numsyncsets	disksim_disk.h	526;"	d
numsysorgs	disksim_iodriver.h	/^   int numsysorgs;$/;"	m	struct:iodriver_info
numsysorgs	disksim_iodriver.h	187;"	d
numwrites	disksim_ioqueue.c	/^   int		numwrites;$/;"	m	struct:subq	file:
numwritesegs	disksim_disk.h	/^  int		numwritesegs;$/;"	m	struct:disk
off_cyl_mult	syssim_driver2.c	/^static double off_cyl_mult = 1.0;$/;"	v	file:
old_flash_erase_num	ssd_interface.c	/^int old_flash_erase_num = 0;$/;"	v
old_flash_gc_read_num	ssd_interface.c	/^int old_flash_gc_read_num = 0;$/;"	v
old_merge_full_num	ssd_interface.c	/^int old_merge_full_num= 0;$/;"	v
old_merge_partial_num	ssd_interface.c	/^int old_merge_partial_num = 0;$/;"	v
old_merge_switch_num	ssd_interface.c	/^int old_merge_switch_num = 0;$/;"	v
old_req_arr	disksim_logorg.c	/^double old_req_arr = 0.0;$/;"	v
old_req_arr_time	disksim_logorg.c	/^double old_req_arr_time = 0.0;$/;"	v
oldstate	disksim_global.h	/^   int    oldstate;$/;"	m	struct:intr_ev
omap_dir	opagemap.h	/^struct omap_dir{$/;"	s
oneRotation	syssim_driver2.c	/^static float oneRotation;$/;"	v	file:
ongoing_requests	disksim_cachedev.c	/^   cache_event *ongoing_requests;$/;"	m	struct:cache_def	file:
onlyfourpass	syssim_driver2.c	/^static int onlyfourpass = 0;$/;"	v	file:
opagemap	opagemap.h	/^struct opm_entry *opagemap;$/;"	v	typeref:struct:opm_entry
opagemap_num	opagemap.h	/^sect_t opagemap_num;$/;"	v
opagemap_reset	opagemap.c	/^void opagemap_reset()$/;"	f
opagemap_reset	opagemap.youkim.c	/^void opagemap_reset()$/;"	f
opagemap_reset	opagemap_noopt.c	/^void opagemap_reset()$/;"	f
opagemap_reset	opagemap_opt.c	/^void opagemap_reset()$/;"	f
operation	cache.h	/^	int operation;$/;"	m	struct:outgoing_request
operation	cache.h	/^  int operation;$/;"	m	struct:induced_subevent
opid	disksim_global.h	/^   int    opid;$/;"	m	struct:ioreq_ev
opid	disksim_ioqueue.c	/^   int       opid;$/;"	m	struct:iob	file:
opid	disksim_logorg.h	/^   int    opid;$/;"	m	struct:logorg
opid	disksim_logorg.h	/^   int    opid;$/;"	m	struct:os
opm_end	opagemap.c	/^void opm_end()$/;"	f
opm_end	opagemap.youkim.c	/^void opm_end()$/;"	f
opm_end	opagemap_noopt.c	/^void opm_end()$/;"	f
opm_end	opagemap_opt.c	/^void opm_end()$/;"	f
opm_entry	opagemap.h	/^struct opm_entry {$/;"	s
opm_gc_cost_benefit	opagemap.c	/^_u32 opm_gc_cost_benefit()$/;"	f
opm_gc_cost_benefit	opagemap.youkim.c	/^_u32 opm_gc_cost_benefit()$/;"	f
opm_gc_cost_benefit	opagemap_noopt.c	/^_u32 opm_gc_cost_benefit()$/;"	f
opm_gc_cost_benefit	opagemap_opt.c	/^_u32 opm_gc_cost_benefit()$/;"	f
opm_gc_get_free_blk	opagemap.c	/^int opm_gc_get_free_blk(int small, int mapdir_flag)$/;"	f
opm_gc_get_free_blk	opagemap.youkim.c	/^int opm_gc_get_free_blk(int small, int mapdir_flag)$/;"	f
opm_gc_get_free_blk	opagemap_noopt.c	/^int opm_gc_get_free_blk(int small, int mapdir_flag)$/;"	f
opm_gc_get_free_blk	opagemap_opt.c	/^int opm_gc_get_free_blk(int small, int mapdir_flag)$/;"	f
opm_gc_run	opagemap.c	/^int opm_gc_run(int small, int mapdir_flag)$/;"	f
opm_gc_run	opagemap.youkim.c	/^int opm_gc_run(int small, int mapdir_flag)$/;"	f
opm_gc_run	opagemap_noopt.c	/^int opm_gc_run(int small, int mapdir_flag)$/;"	f
opm_gc_run	opagemap_opt.c	/^int opm_gc_run(int small, int mapdir_flag)$/;"	f
opm_init	opagemap.c	/^int opm_init(blk_t blk_num, blk_t extra_num)$/;"	f
opm_init	opagemap.youkim.c	/^int opm_init(blk_t blk_num, blk_t extra_num)$/;"	f
opm_init	opagemap_noopt.c	/^int opm_init(blk_t blk_num, blk_t extra_num)$/;"	f
opm_init	opagemap_opt.c	/^int opm_init(blk_t blk_num, blk_t extra_num)$/;"	f
opm_invalid	opagemap.c	/^int opm_invalid(int secno)$/;"	f
opm_operation	opagemap.c	/^struct ftl_operation opm_operation = {$/;"	v	typeref:struct:ftl_operation
opm_operation	opagemap.youkim.c	/^struct ftl_operation opm_operation = {$/;"	v	typeref:struct:ftl_operation
opm_operation	opagemap_noopt.c	/^struct ftl_operation opm_operation = {$/;"	v	typeref:struct:ftl_operation
opm_operation	opagemap_opt.c	/^struct ftl_operation opm_operation = {$/;"	v	typeref:struct:ftl_operation
opm_read	opagemap.c	/^size_t opm_read(sect_t lsn, sect_t size, int mapdir_flag)$/;"	f
opm_read	opagemap.youkim.c	/^size_t opm_read(sect_t lsn, sect_t size, int mapdir_flag)$/;"	f
opm_read	opagemap_noopt.c	/^size_t opm_read(sect_t lsn, sect_t size, int mapdir_flag)$/;"	f
opm_read	opagemap_opt.c	/^size_t opm_read(sect_t lsn, sect_t size, int mapdir_flag)$/;"	f
opm_setup	opagemap.c	/^struct ftl_operation * opm_setup()$/;"	f
opm_setup	opagemap.youkim.c	/^struct ftl_operation * opm_setup()$/;"	f
opm_setup	opagemap_noopt.c	/^struct ftl_operation * opm_setup()$/;"	f
opm_setup	opagemap_opt.c	/^struct ftl_operation * opm_setup()$/;"	f
opm_write	opagemap.c	/^size_t opm_write(sect_t lsn, sect_t size, int mapdir_flag)  $/;"	f
opm_write	opagemap.youkim.c	/^size_t opm_write(sect_t lsn, sect_t size, int mapdir_flag)  $/;"	f
opm_write	opagemap_noopt.c	/^size_t opm_write(sect_t lsn, sect_t size, int mapdir_flag)  $/;"	f
opm_write	opagemap_opt.c	/^size_t opm_write(sect_t lsn, sect_t size, int mapdir_flag)  $/;"	f
optcylno	disksim_ioqueue.c	/^   int		optcylno;$/;"	m	struct:subq	file:
optsurface	disksim_ioqueue.c	/^   int		optsurface;$/;"	m	struct:subq	file:
originalOrInduced	cache.h	/^	int originalOrInduced;$/;"	m	struct:outgoing_request
os	disksim_logorg.h	/^typedef struct os {$/;"	s
outbcount	disksim_disk.h	/^   int		outbcount;$/;"	m	struct:seg
outblkno	disksim_disk.h	/^   int			outblkno;$/;"	m	struct:diskreq_t
outbus	disksim_iodriver.h	/^   int		outbus;$/;"	m	struct:iodriver
outbuses	disksim_ctlr.h	/^   int          *outbuses;$/;"	m	struct:controller
outbusowned	disksim_ctlr.h	/^   int		outbusowned;$/;"	m	struct:controller
outgoing_request	cache.h	/^struct outgoing_request$/;"	s
outgoing_request_from_manager	cache.c	/^void outgoing_request_from_manager(double time, int diskOrFlash,int operation,int disk_id, unsigned long sectorid,int num_sectors, int originalOrInduced )$/;"	f
outios	disksim_global.h	/^   FILE * outios;$/;"	m	struct:disksim
outios	disksim_global.h	415;"	d
outiosfilename	disksim_global.h	/^   char   outiosfilename[256];$/;"	m	struct:disksim
outiosfileposition	disksim_global.h	/^   fpos_t outiosfileposition;$/;"	m	struct:disksim
outputfile	disksim_global.h	/^   FILE * outputfile;$/;"	m	struct:disksim
outputfile	disksim_global.h	414;"	d
outputfilename	disksim_global.h	/^   char   outputfilename[256];$/;"	m	struct:disksim
outputfileposition	disksim_global.h	/^   fpos_t outputfileposition;$/;"	m	struct:disksim
outputflags	syssim_driver2.c	/^  unsigned int outputflags;$/;"	m	struct:alg_args_s	file:
outr	cache.c	/^struct outgoing_request* outr = NULL;$/;"	v	typeref:struct:outgoing_request
outside	syssim_driver2.c	/^static int outside[MAXDISKS];$/;"	v	file:
outslot	disksim_ctlr.h	/^   int          outslot[MAXOUTBUSES];$/;"	m	struct:controller
outstand	disksim_logorg.h	/^} outstand;$/;"	t	typeref:struct:os
outstanding	disksim_logorg.h	/^   int		outstanding;$/;"	m	struct:__anon22
outstandqlen	disksim_logorg.h	/^   int    outstandqlen;$/;"	m	struct:logorg
outstate	disksim_disk.h	/^   disk_buffer_state_t outstate;$/;"	m	struct:seg
outstate	disksim_disk.h	/^  disk_state_t outstate;$/;"	m	struct:disk
outtime	disksim_logorg.h	/^   double	outtime;$/;"	m	struct:__anon22
outtimestats	disksim_ioqueue.c	/^   statgen	outtimestats;$/;"	m	struct:subq	file:
outwait	disksim_disk.h	/^  ioreq_event *outwait;$/;"	m	struct:disk
overallqueue	disksim_iodriver.h	/^   struct ioq *overallqueue;$/;"	m	struct:iodriver_info	typeref:struct:iodriver_info::ioq
overallqueue	disksim_iodriver.h	189;"	d
overhead	disksim_disk.h	/^  double       overhead;$/;"	m	struct:disk
overhead	disksim_simpledisk.c	/^   double overhead;$/;"	m	struct:simpledisk	file:
overhead	disksim_simpleflash.c	/^   double overhead;$/;"	m	struct:simpleflash	file:
overhead_command_readhit_afterread	disksim_disk.h	/^  double	overhead_command_readhit_afterread;$/;"	m	struct:disk
overhead_command_readhit_afterwrite	disksim_disk.h	/^  double	overhead_command_readhit_afterwrite;$/;"	m	struct:disk
overhead_command_readmiss_afterread	disksim_disk.h	/^  double	overhead_command_readmiss_afterread;$/;"	m	struct:disk
overhead_command_readmiss_afterwrite	disksim_disk.h	/^  double	overhead_command_readmiss_afterwrite;$/;"	m	struct:disk
overhead_command_writehit_afterread	disksim_disk.h	/^  double	overhead_command_writehit_afterread;$/;"	m	struct:disk
overhead_command_writehit_afterwrite	disksim_disk.h	/^  double	overhead_command_writehit_afterwrite;$/;"	m	struct:disk
overhead_command_writemiss_afterread	disksim_disk.h	/^  double	overhead_command_writemiss_afterread;$/;"	m	struct:disk
overhead_command_writemiss_afterwrite	disksim_disk.h	/^  double	overhead_command_writemiss_afterwrite;$/;"	m	struct:disk
overhead_complete_read	disksim_disk.h	/^  double	overhead_complete_read;$/;"	m	struct:disk
overhead_complete_write	disksim_disk.h	/^  double	overhead_complete_write;$/;"	m	struct:disk
overhead_data_prep	disksim_disk.h	/^  double	overhead_data_prep;$/;"	m	struct:disk
overhead_disconnect_read_afterread	disksim_disk.h	/^  double	overhead_disconnect_read_afterread;$/;"	m	struct:disk
overhead_disconnect_read_afterwrite	disksim_disk.h	/^  double	overhead_disconnect_read_afterwrite;$/;"	m	struct:disk
overhead_disconnect_write	disksim_disk.h	/^  double	overhead_disconnect_write;$/;"	m	struct:disk
overhead_done	disksim_disk.h	/^   double		overhead_done;$/;"	m	struct:diskreq_t
overhead_reselect_first	disksim_disk.h	/^  double	overhead_reselect_first;$/;"	m	struct:disk
overhead_reselect_other	disksim_disk.h	/^  double	overhead_reselect_other;$/;"	m	struct:disk
overlapscombed	disksim_ioqueue.c	/^   int		overlapscombed;$/;"	m	struct:ioq	file:
overrides	disksim_global.h	/^   char **overrides;$/;"	m	struct:disksim
overrides_len	disksim_global.h	/^   int overrides_len;$/;"	m	struct:disksim
oversized	disksim_iosim.h	/^   ioreq_event *oversized;$/;"	m	struct:__anon20
ovrhd_complete	disksim_ctlr.h	/^   double	ovrhd_complete;$/;"	m	struct:controller
ovrhd_disconnect	disksim_ctlr.h	/^   double	ovrhd_disconnect;$/;"	m	struct:controller
ovrhd_disk_complete	disksim_ctlr.h	/^   double	ovrhd_disk_complete;$/;"	m	struct:controller
ovrhd_disk_disconnect	disksim_ctlr.h	/^   double	ovrhd_disk_disconnect;$/;"	m	struct:controller
ovrhd_disk_ready	disksim_ctlr.h	/^   double	ovrhd_disk_ready;$/;"	m	struct:controller
ovrhd_disk_reconnect	disksim_ctlr.h	/^   double	ovrhd_disk_reconnect;$/;"	m	struct:controller
ovrhd_disk_request	disksim_ctlr.h	/^   double	ovrhd_disk_request;$/;"	m	struct:controller
ovrhd_ready	disksim_ctlr.h	/^   double	ovrhd_ready;$/;"	m	struct:controller
ovrhd_reconnect	disksim_ctlr.h	/^   double	ovrhd_reconnect;$/;"	m	struct:controller
ovrhd_reset	disksim_ctlr.h	/^   double	ovrhd_reset;$/;"	m	struct:controller
owners	disksim_bus.c	/^  bus_event    *owners;$/;"	m	struct:bus	file:
page_num_for_2nd_map_table	ssd_interface.c	/^ int page_num_for_2nd_map_table;$/;"	v
page_num_for_2nd_map_table	ssd_interface_opt.c	/^ int page_num_for_2nd_map_table;$/;"	v
page_status	nand.h	/^  int page_status[PAGE_NUM_PER_BLK];$/;"	m	struct:nand_blk_info
pagemap	pagemap.h	/^struct pm_entry *pagemap;$/;"	v	typeref:struct:pm_entry
pagemap	pagemap_aayush.c	/^static struct pm_entry *pagemap;$/;"	v	typeref:struct:pm_entry	file:
pagemap_num	pagemap.h	/^sect_t pagemap_num;$/;"	v
pagemap_num	pagemap_aayush.c	/^static sect_t pagemap_num;$/;"	v	file:
pagemap_reset	pagemap.c	/^void pagemap_reset()$/;"	f
pageno	heap.h	/^  int pageno;                     $/;"	m	struct:__anon36
panic	syssim_driver.c	/^panic(const char *s)$/;"	f
panic	syssim_driver2.c	/^void panic(const char *s)$/;"	f
pareto	disksim_synthio.c	/^double pareto(double a, double b)$/;"	f
pareto	pareto2.c	/^double pareto(double a, double b)$/;"	f
parfile	disksim_global.h	/^   FILE * parfile;$/;"	m	struct:disksim
parityunit	disksim_logorg.h	/^   int    parityunit;$/;"	m	struct:logorg
parthits	disksim_disk.h	/^   int     parthits;$/;"	m	struct:__anon12
partial_merge	disksim_synthio.c	/^int partial_merge = 0;$/;"	v
partsperstripe	disksim_logorg.h	/^   int    partsperstripe;$/;"	m	struct:logorg
partwrites	disksim_cachemem.c	/^   cache_event *partwrites;$/;"	m	struct:cache_def	file:
pb_size	nand.c	/^_u8  pb_size;$/;"	v
pb_size	nand_aayush.c	/^_u8  pb_size;$/;"	v
pbn	blockmap.c	/^	_u32	pbn[MAX_ASSGN_BLK_NUM];	\/\/ physical block number$/;"	m	struct:blockmap_entry	file:
pbn	blockmap_aayush.c	/^	_u32	pbn[MAX_ASSGN_BLK_NUM];	\/\/ physical block number$/;"	m	struct:blockmap_entry	file:
pbn	fast.c	/^    int pbn; \/\/ physical blk no of the log block $/;"	m	struct:LogMap	file:
pbn	fast.youkim.c	/^    int pbn; \/\/ physical blk no of the log block $/;"	m	struct:LogMap	file:
pbn	fast_bk.c	/^    int pbn; \/\/ physical blk no of the log block $/;"	m	struct:LogMap	file:
pbn	last.c	/^    int pbn; \/\/ physical blk no of the log block $/;"	m	struct:LogMap	file:
pend	disksim_ioqueue.c	/^      } pend;$/;"	m	union:iob::__anon17	typeref:struct:iob::__anon17::__anon18	file:
pendio	disksim_iosim.h	/^   ioreq_event *pendio;$/;"	m	struct:__anon20
pendio	disksim_synthio.c	/^   ioreq_event *  pendio;$/;"	m	struct:gen	file:
pendiolist	disksim_pfsim.h	/^   ioreq_event *pendiolist;$/;"	m	struct:pf_info
pendiolist	disksim_pfsim.h	295;"	d
pendxfer	disksim_disk.h	/^  diskreq     *pendxfer;$/;"	m	struct:disk
perm	disksim_ioqueue.c	/^static void perm(iobuf **array,$/;"	f	file:
pf_add_cswitch_event	disksim_pfsim.c	/^static void pf_add_cswitch_event (process *procp, process *newprocp, cpu_event *cpu_ev)$/;"	f	file:
pf_add_false_idle_time	disksim_pfsim.c	/^static double pf_add_false_idle_time (double length)$/;"	f	file:
pf_add_to_intrp_eventlist	disksim_pfsim.c	/^static void pf_add_to_intrp_eventlist (intr_event *intrp, event *new)$/;"	f	file:
pf_add_to_pendiolist	disksim_pfsim.c	/^static void pf_add_to_pendiolist (process *procp, ioreq_event *curr)$/;"	f	file:
pf_add_to_process_eventlist	disksim_pfsim.c	/^static void pf_add_to_process_eventlist (process *procp, event *new)$/;"	f	file:
pf_allocate_process_structs	disksim_pfsim.c	/^static void pf_allocate_process_structs()$/;"	f	file:
pf_cleanstats	disksim_pfsim.c	/^void pf_cleanstats()$/;"	f
pf_clock_interrupt_complete	disksim_pfsim.c	/^static void pf_clock_interrupt_complete (intr_event *intrp)$/;"	f	file:
pf_cpu_initialize	disksim_pfsim.c	/^static void pf_cpu_initialize()$/;"	f	file:
pf_cpu_resetstats	disksim_pfsim.c	/^static void pf_cpu_resetstats()$/;"	f	file:
pf_disp_get_from_sleep_queue	disksim_pfdisp.c	/^process *pf_disp_get_from_sleep_queue (void *chan)$/;"	f
pf_disp_get_specific_from_sleep_queue	disksim_pfdisp.c	/^process *pf_disp_get_specific_from_sleep_queue (u_int pid)$/;"	f
pf_disp_put_at_end_of_queue	disksim_pfdisp.c	/^static void pf_disp_put_at_end_of_queue(process *procp)$/;"	f	file:
pf_disp_put_on_sleep_queue	disksim_pfdisp.c	/^void pf_disp_put_on_sleep_queue (process *procp)$/;"	f
pf_disp_sleep	disksim_pfdisp.c	/^process * pf_disp_sleep (process *procp)$/;"	f
pf_disp_wakeup	disksim_pfdisp.c	/^void pf_disp_wakeup (process *procp)$/;"	f
pf_dispatch	disksim_pfdisp.c	/^process *pf_dispatch (int cpunum)$/;"	f
pf_dispatcher_init	disksim_pfdisp.c	/^void pf_dispatcher_init (process *startprocs)$/;"	f
pf_dispq	disksim_pfsim.h	/^   process *pf_dispq;$/;"	m	struct:pf_info
pf_dispq	disksim_pfsim.h	310;"	d
pf_get_time_to_next_intr_event	disksim_pfsim.c	/^static double pf_get_time_to_next_intr_event (intr_event *intrp)$/;"	f	file:
pf_get_time_to_next_process_event	disksim_pfsim.c	/^static double pf_get_time_to_next_process_event (process *procp)$/;"	f	file:
pf_getfromextra_process_q	disksim_pfsim.c	/^process *pf_getfromextra_process_q()$/;"	f
pf_handle_clock_intr_arrive	disksim_pfsim.c	/^static void pf_handle_clock_intr_arrive (intr_event *intrp, cpu_event *cpu_ev)$/;"	f	file:
pf_handle_cpu_event	disksim_pfsim.c	/^static void pf_handle_cpu_event (cpu_event *curr)$/;"	f	file:
pf_handle_cswitch_event	disksim_pfsim.c	/^static void pf_handle_cswitch_event (cswitch_event *curr, cpu_event *cpu_ev)$/;"	f	file:
pf_handle_event	disksim_pfsim.c	/^static void pf_handle_event (event *curr, cpu_event *cpu_ev)$/;"	f	file:
pf_handle_idleloop_event	disksim_pfsim.c	/^static void pf_handle_idleloop_event (idleloop_event *curr, cpu_event *cpu_ev)$/;"	f	file:
pf_handle_intend_event	disksim_pfsim.c	/^static void pf_handle_intend_event (intend_event *curr, cpu_event *cpu_ev)$/;"	f	file:
pf_handle_intr_event	disksim_pfsim.c	/^void pf_handle_intr_event (intr_event *intrp, int cpunum)$/;"	f
pf_handle_io_internal_event	disksim_pfsim.c	/^static void pf_handle_io_internal_event (ioreq_event *curr, cpu_event *cpu_ev)$/;"	f	file:
pf_handle_io_intr_arrive	disksim_pfsim.c	/^static void pf_handle_io_intr_arrive (intr_event *intrp, cpu_event *cpu_ev)$/;"	f	file:
pf_handle_ioacc_event	disksim_pfsim.c	/^static void pf_handle_ioacc_event (ioreq_event *curr, cpu_event *cpu_ev)$/;"	f	file:
pf_handle_ioreq_event	disksim_pfsim.c	/^static void pf_handle_ioreq_event (ioreq_event *curr, cpu_event *cpu_ev)$/;"	f	file:
pf_handle_sleep_event	disksim_pfsim.c	/^static void pf_handle_sleep_event (sleep_event *curr, cpu_event *cpu_ev)$/;"	f	file:
pf_handle_synthio_event	disksim_pfsim.c	/^static void pf_handle_synthio_event (event *curr, cpu_event *cpu_ev)$/;"	f	file:
pf_handle_wakeup_event	disksim_pfsim.c	/^static void pf_handle_wakeup_event(wakeup_event *curr, cpu_event *cpu_ev)$/;"	f	file:
pf_how_many_cpus	disksim_pfsim.c	/^int pf_how_many_cpus()$/;"	f
pf_idle_cpu_recheck_dispq	disksim_pfsim.c	/^void pf_idle_cpu_recheck_dispq (int cpunum)$/;"	f
pf_info	disksim_global.h	/^   struct pf_info *pf_info;$/;"	m	struct:disksim	typeref:struct:disksim::pf_info
pf_info	disksim_pfsim.h	/^typedef struct pf_info {$/;"	s
pf_info_t	disksim_pfsim.h	/^} pf_info_t;$/;"	t	typeref:struct:pf_info
pf_initialize	disksim_pfsim.c	/^void pf_initialize (int seedvalue)$/;"	f
pf_internal_event	disksim_pfsim.c	/^void pf_internal_event (event *curr)$/;"	f
pf_io_done_notify	disksim_pfsim.c	/^event * pf_io_done_notify (ioreq_event *curr)$/;"	f
pf_iowait	disksim_pfsim.c	/^static int pf_iowait (void *chan, process *procp)$/;"	f	file:
pf_new_process	disksim_pfsim.c	/^process * pf_new_process()$/;"	f
pf_print_interrupt_stats	disksim_pfsim.c	/^static void pf_print_interrupt_stats (int startcpu, int stopcpu)$/;"	f	file:
pf_print_intrstats	disksim_pfsim.h	/^   int pf_print_intrstats;$/;"	m	struct:pf_info
pf_print_intrstats	disksim_pfsim.h	308;"	d
pf_print_percpu_stats	disksim_pfsim.c	/^static void pf_print_percpu_stats()$/;"	f	file:
pf_print_percpustats	disksim_pfsim.h	/^   int pf_print_percpustats;$/;"	m	struct:pf_info
pf_print_percpustats	disksim_pfsim.h	307;"	d
pf_print_perprocessstats	disksim_pfsim.h	/^   int pf_print_perprocessstats;$/;"	m	struct:pf_info
pf_print_perprocessstats	disksim_pfsim.h	306;"	d
pf_print_pf_stats	disksim_pfsim.c	/^static void pf_print_pf_stats (int startcpu, int stopcpu)$/;"	f	file:
pf_print_process_stats	disksim_pfsim.c	/^static void pf_print_process_stats()$/;"	f	file:
pf_print_sleep_stats	disksim_pfsim.c	/^static void pf_print_sleep_stats()$/;"	f	file:
pf_print_sleepstats	disksim_pfsim.h	/^   int pf_print_sleepstats;$/;"	m	struct:pf_info
pf_print_sleepstats	disksim_pfsim.h	309;"	d
pf_printhack	disksim_pfsim.h	/^   int pf_printhack;$/;"	m	struct:pf_info
pf_printhack	disksim_pfsim.h	302;"	d
pf_printstats	disksim_pfsim.c	/^void pf_printstats()$/;"	f
pf_resetstats	disksim_pfsim.c	/^void pf_resetstats()$/;"	f
pf_setcallbacks	disksim_pfsim.c	/^void pf_setcallbacks()$/;"	f
pfflags	disksim_pfsim.h	/^   u_int pfflags;$/;"	m	struct:process
pfscale	disksim_pfsim.h	/^   double  pfscale;$/;"	m	struct:pf_info
pfscale	disksim_pfsim.h	298;"	d
phase_flag	disksim_synthio.c	/^int phase_flag = 1;$/;"	v
pickup_demand_blocks	syssim_driver2.c	/^static int pickup_demand_blocks = 0;$/;"	v	file:
pickup_free_blocks	syssim_driver2.c	/^void pickup_free_blocks(unsigned short cylinder, $/;"	f
pid	disksim_pfsim.h	/^   int pid;$/;"	m	struct:process
pin	blockmap.c	/^	_u32 	pin[PAGE_NUM_PER_BLK];	\/\/ page index (point to the index of a block with up-to-date page, they should be initialized with 0$/;"	m	struct:blockmap_entry	file:
pin	blockmap_aayush.c	/^	_u32 	pin[PAGE_NUM_PER_BLK];	\/\/ page index (point to the index of a block with up-to-date page, they should be initialized with 0$/;"	m	struct:blockmap_entry	file:
pm_end	pagemap.c	/^void pm_end()$/;"	f
pm_end	pagemap_aayush.c	/^void pm_end()$/;"	f
pm_entry	pagemap.h	/^struct pm_entry {$/;"	s
pm_entry	pagemap_aayush.c	/^struct pm_entry {$/;"	s	file:
pm_evict	pagemap_aayush.c	/^size_t pm_evict(sect_t lsn, sect_t size)$/;"	f
pm_gc_cost_benefit	pagemap.c	/^_u32 pm_gc_cost_benefit()$/;"	f
pm_gc_cost_benefit	pagemap_aayush.c	/^_u32 pm_gc_cost_benefit()$/;"	f
pm_gc_get_free_blk	pagemap.c	/^int pm_gc_get_free_blk(int small, int mapdir_flag)$/;"	f
pm_gc_get_free_blk	pagemap_aayush.c	/^int pm_gc_get_free_blk(small)$/;"	f
pm_gc_run	pagemap.c	/^int pm_gc_run(int small, int mapdir_flag)$/;"	f
pm_gc_run	pagemap_aayush.c	/^int pm_gc_run(int small)$/;"	f
pm_init	pagemap.c	/^int pm_init(blk_t blk_num, blk_t extra_num)$/;"	f
pm_init	pagemap_aayush.c	/^int pm_init(blk_t blk_num, blk_t extra_num)$/;"	f
pm_invalid	pagemap.c	/^int pm_invalid(int secno)$/;"	f
pm_operation	pagemap.c	/^struct ftl_operation pm_operation = {$/;"	v	typeref:struct:ftl_operation
pm_operation	pagemap_aayush.c	/^struct ftl_operation pm_operation = {$/;"	v	typeref:struct:ftl_operation
pm_read	pagemap.c	/^size_t pm_read(sect_t lsn, sect_t size, int mapdir_flag)$/;"	f
pm_read	pagemap_aayush.c	/^size_t pm_read(sect_t lsn, sect_t size)$/;"	f
pm_setup	pagemap.c	/^struct ftl_operation * pm_setup()$/;"	f
pm_setup	pagemap_aayush.c	/^struct ftl_operation * pm_setup()$/;"	f
pm_write	pagemap.c	/^size_t pm_write(sect_t lsn, sect_t size, int mapdir_flag)  $/;"	f
pm_write	pagemap_aayush.c	/^size_t pm_write(sect_t lsn, sect_t size)$/;"	f
popwriteblocks	disksim_cachedev.c	/^   int popwriteblocks;$/;"	m	struct:__anon2	file:
popwrites	disksim_cachedev.c	/^   int popwrites;$/;"	m	struct:__anon2	file:
possible	syssim_driver2.c	/^  unsigned char possible;$/;"	m	struct:node_s	file:
possible_rotate	syssim_driver2.c	/^  unsigned char possible_rotate;$/;"	m	struct:node_s	file:
possible_seek	syssim_driver2.c	/^  unsigned char possible_seek;$/;"	m	struct:cyl_node_s	file:
postimestats	disksim_disk.h	/^   statgen postimestats;$/;"	m	struct:__anon12
ppn	opagemap.h	/^  _u32 ppn   : 31;$/;"	m	struct:opm_entry
ppn	opagemap.h	/^  unsigned int ppn;$/;"	m	struct:omap_dir
ppn	pagemap.h	/^  _u32 ppn   : 31;$/;"	m	struct:pm_entry
ppn	pagemap.h	/^  unsigned int ppn;$/;"	m	struct:map_dir
prefetch_waitfor_locks	disksim_cachemem.c	/^   int prefetch_waitfor_locks;$/;"	m	struct:cache_def	file:
prependhits	disksim_disk.h	/^   int     prependhits;$/;"	m	struct:__anon12
preseeking	disksim_disk.h	/^  int		preseeking;$/;"	m	struct:disk
prev	disksim_bus.c	/^   struct bus_ev *prev;$/;"	m	struct:bus_ev	typeref:struct:bus_ev::bus_ev	file:
prev	disksim_cachedev.c	/^   struct cacheevent *prev;$/;"	m	struct:cacheevent	typeref:struct:cacheevent::cacheevent	file:
prev	disksim_cachemem.c	/^   struct cacheevent *prev;$/;"	m	struct:cacheevent	typeref:struct:cacheevent::cacheevent	file:
prev	disksim_disk.h	/^   struct seg  *prev;$/;"	m	struct:seg	typeref:struct:seg::seg
prev	disksim_global.h	/^   struct ev *prev;$/;"	m	struct:ev	typeref:struct:ev::ev
prev	disksim_global.h	/^   struct ev *prev;$/;"	m	struct:foo	typeref:struct:foo::ev
prev	disksim_global.h	/^   struct intr_ev * prev;$/;"	m	struct:intr_ev	typeref:struct:intr_ev::intr_ev
prev	disksim_global.h	/^   struct ioreq_ev *prev;$/;"	m	struct:ioreq_ev	typeref:struct:ioreq_ev::ioreq_ev
prev	disksim_global.h	/^   struct timer_ev *prev;$/;"	m	struct:timer_ev	typeref:struct:timer_ev::timer_ev
prev	disksim_ioqueue.c	/^   struct iob *prev;$/;"	m	struct:iob	typeref:struct:iob::iob	file:
prev	disksim_logorg.h	/^   struct os *prev;$/;"	m	struct:os	typeref:struct:os::os
prev	disksim_pfsim.h	/^   event      *prev;$/;"	m	struct:__anon25
prev	disksim_pfsim.h	/^   event * prev;$/;"	m	struct:__anon27
prev	disksim_pfsim.h	/^   event * prev;$/;"	m	struct:__anon28
prev	disksim_pfsim.h	/^   event * prev;$/;"	m	struct:__anon29
prev	disksim_pfsim.h	/^   event * prev;$/;"	m	struct:__anon30
prev	disksim_pfsim.h	/^   event * prev;$/;"	m	struct:__anon31
prev_acctime	disksim_diskctlr2.c	/^double prev_acctime[MAX_DEVICE_NUM];$/;"	v
prev_bcount	disksim_logorg.c	/^int prev_bcount = 0;$/;"	v
prev_blkno	disksim_logorg.c	/^int prev_blkno = 0;$/;"	v
prev_readahead_min	disksim_disk.h	/^  int		prev_readahead_min;$/;"	m	struct:disk
prev_seektime	disksim_diskctlr2.c	/^double prev_seektime[MAX_DEVICE_NUM];		\/\/ last I\/O seek time $/;"	v
prev_time	disksim_diskctlr2.c	/^double prev_time[MAX_DEVICE_NUM];			\/\/ last I\/O req. time $/;"	v
pri_scheme	disksim_ioqueue.c	/^   int		pri_scheme;$/;"	m	struct:ioq	file:
prime_simulation	disksim.c	/^static void prime_simulation ()$/;"	f	file:
printWearout	ssd_interface.c	/^void printWearout()$/;"	f
printWearout	ssd_interface_noopt.c	/^void printWearout()$/;"	f
printWearout	ssd_interface_opt.c	/^void printWearout()$/;"	f
print_flash_cache_containers	cache.c	/^void print_flash_cache_containers(struct flash_cache_container* ds, unsigned long arr_len)$/;"	f
print_ftl_statistics	disksim_main.c	/^void print_ftl_statistics()$/;"	f
print_statistics	syssim_driver.c	/^print_statistics(Stat *s, const char *title)$/;"	f
print_statistics	syssim_driver2.c	/^void print_statistics(Stat *s, const char *title)$/;"	f
print_tracefile_header	hplcomb.c	/^int print_tracefile_header = FALSE;$/;"	v
printblockingstats	disksim_logorg.h	/^   int    printblockingstats;$/;"	m	struct:logorg
printcritstats	disksim_ioqueue.c	/^   int		printcritstats;$/;"	m	struct:ioq	file:
printidlestats	disksim_ioqueue.c	/^   int		printidlestats;$/;"	m	struct:ioq	file:
printidlestats	disksim_logorg.h	/^   int    printidlestats;$/;"	m	struct:logorg
printintarrstats	disksim_ioqueue.c	/^   int		printintarrstats;$/;"	m	struct:ioq	file:
printintarrstats	disksim_logorg.h	/^   int    printintarrstats;$/;"	m	struct:logorg
printinterferestats	disksim_logorg.h	/^   int    printinterferestats;$/;"	m	struct:logorg
printlocalitystats	disksim_logorg.h	/^   int    printlocalitystats;$/;"	m	struct:logorg
printqueuestats	disksim_ioqueue.c	/^   int		printqueuestats;$/;"	m	struct:ioq	file:
printsizestats	disksim_ioqueue.c	/^   int		printsizestats;$/;"	m	struct:ioq	file:
printsizestats	disksim_logorg.h	/^   int    printsizestats;$/;"	m	struct:logorg
printstampstats	disksim_logorg.h	/^   int    printstampstats;$/;"	m	struct:logorg
printstats	disksim_bus.c	/^  int		printstats;$/;"	m	struct:bus	file:
printstats	disksim_ctlr.h	/^   int          printstats;$/;"	m	struct:controller
printstats	disksim_disk.h	/^  int          printstats;$/;"	m	struct:disk
printstats	disksim_simpledisk.c	/^   int printstats;$/;"	m	struct:simpledisk	file:
printstats	disksim_simpleflash.c	/^   int printstats;$/;"	m	struct:simpleflash	file:
printstreakstats	disksim_logorg.h	/^   int    printstreakstats;$/;"	m	struct:logorg
prior	disksim_ioqueue.c	/^   int		prior;$/;"	m	struct:subq	file:
priority	disksim_ioqueue.c	/^   subqueue	priority;$/;"	m	struct:ioq	file:
priority_mix	disksim_ioqueue.c	/^   int          priority_mix;$/;"	m	struct:ioq	file:
probloc	disksim_synthio.c	/^   double         probloc;$/;"	m	struct:gen	file:
probpercyl	syssim_driver2.c	/^static double *probpercyl;$/;"	v	file:
probread	disksim_synthio.c	/^   double         probread;$/;"	m	struct:gen	file:
probseq	disksim_synthio.c	/^   double         probseq;$/;"	m	struct:gen	file:
probtmcrit	disksim_synthio.c	/^   double         probtmcrit;$/;"	m	struct:gen	file:
probtmlim	disksim_synthio.c	/^   double         probtmlim;$/;"	m	struct:gen	file:
process	disksim_pfsim.h	/^typedef struct process {$/;"	s
process	disksim_pfsim.h	/^} process;$/;"	t	typeref:struct:process
process_livelist	disksim_pfsim.h	/^   process *process_livelist;$/;"	m	struct:pf_info
process_livelist	disksim_pfsim.h	291;"	d
procp	disksim_pfsim.h	/^   process    *procp;$/;"	m	struct:__anon25
psn	pagemap_aayush.c	/^  _u32 psn   : 31;$/;"	m	struct:pm_entry	file:
ptr	disksim_global.h	/^   void  *ptr;$/;"	m	struct:timer_ev
qdelete	cache.c	/^void qdelete(request **front, request **rear)$/;"	f
qinsert	cache.c	/^void qinsert(request **front, request**rear, request *temp)$/;"	f
qtimestats	disksim_ioqueue.c	/^   statgen	qtimestats;$/;"	m	struct:subq	file:
queue	disksim_ctlr.h	/^   struct ioq *	queue;$/;"	m	struct:controller	typeref:struct:controller::ioq
queue	disksim_disk.h	/^  struct ioq  *queue;	       $/;"	m	struct:disk	typeref:struct:disk::ioq
queue	disksim_iodriver.h	/^   struct ioq *	queue;$/;"	m	struct:iodriver	typeref:struct:iodriver::ioq
queue	disksim_iosim.h	/^   struct ioq   *queue;$/;"	m	struct:__anon21	typeref:struct:__anon21::ioq
queue	disksim_logorg.h	/^   struct ioq * queue;$/;"	m	struct:__anon23	typeref:struct:__anon23::ioq
queue	disksim_simpledisk.c	/^   struct ioq *queue;$/;"	m	struct:simpledisk	typeref:struct:simpledisk::ioq	file:
queue	disksim_simpleflash.c	/^   struct ioq *queue;$/;"	m	struct:simpleflash	typeref:struct:simpleflash::ioq	file:
queuectlr	disksim_iosim.h	/^   int		queuectlr;$/;"	m	struct:__anon21
queuefind	disksim_cachedev.c	/^   struct ioq * (**queuefind)(void *,int);	\/* to get ioqueue ptr for dev*\/$/;"	m	struct:cache_def	typeref:struct:cache_def::queuefind	file:
queuefind	disksim_cachemem.c	/^   struct ioq * (**queuefind)(void *,int);	\/* to get ioqueue ptr for dev*\/$/;"	m	struct:cache_def	typeref:struct:cache_def::queuefind	file:
queuefind_ctlrsmart	disksim_global.h	/^   struct ioq * (*queuefind_ctlrsmart)     (void *, int);$/;"	m	struct:disksim	typeref:struct:disksim::queuefind_ctlrsmart
queuefindparam	disksim_cachedev.c	/^   void *queuefindparam;			\/* first param for queuefind *\/$/;"	m	struct:cache_def	file:
queuefindparam	disksim_cachemem.c	/^   void *queuefindparam;			\/* first param for queuefind *\/$/;"	m	struct:cache_def	file:
queuelen	disksim_hptrace.h	/^   u_int32_t       queuelen;   \/* length of the queue *\/$/;"	m	struct:__anon16
rand48_info	disksim_global.h	/^   struct rand48_info *rand48_info;$/;"	m	struct:disksim	typeref:struct:disksim::rand48_info
rand48_info	disksim_rand48.c	/^typedef struct rand48_info {$/;"	s	file:
rand48_into_t	disksim_rand48.c	/^} rand48_into_t;$/;"	t	typeref:struct:rand48_info	file:
randfrac	disksim_synthio.c	/^inline double randfrac() { return DISKSIM_drand48(); }$/;"	f
randfrac	pareto2.c	/^inline double randfrac() { return drand48(); }$/;"	f
read	ftl.h	/^  size_t (*read) (sect_t lsn, size_t size, int map_flag);$/;"	m	struct:ftl_operation
read_cache_hit	opagemap.h	/^int read_cache_hit;$/;"	v
read_cache_hit	pagemap.h	/^int read_cache_hit;$/;"	v
read_count	ssd_interface.h	/^int read_count;$/;"	v
read_direct_to_buffer	disksim_disk.h	/^  int		read_direct_to_buffer;$/;"	m	struct:disk
read_line_by_line	disksim_cachemem.c	/^   int read_line_by_line;$/;"	m	struct:cache_def	file:
read_prefetch_type	disksim_cachemem.c	/^   int read_prefetch_type;$/;"	m	struct:cache_def	file:
read_raw_layout	raw_layout.c	/^read_raw_layout(disk *currdisk,char *rlfilename) {$/;"	f
read_write	disksim_simos_interface.h	/^  char read_write;		\/* 'R' denotes read; 'W' denotes write *\/$/;"	m	struct:__anon32
readaheadifidle	disksim_disk.h	/^  int		readaheadifidle;$/;"	m	struct:disk
readanyfreeblocks	disksim_disk.h	/^  int		readanyfreeblocks;$/;"	m	struct:disk
readatoms	disksim_cachemem.c	/^   int readatoms;$/;"	m	struct:__anon3	file:
readblktranstime	disksim_bus.c	/^  double        readblktranstime;$/;"	m	struct:bus	file:
readblocks	disksim_cachedev.c	/^   int readblocks;$/;"	m	struct:__anon2	file:
readdelay	disksim_ioqueue.c	/^   double	readdelay;$/;"	m	struct:ioq	file:
readfraction	syssim_driver2.c	/^static double readfraction = 2.0 \/ 3.0;$/;"	v	file:
readhitsback	disksim_cachemem.c	/^   int readhitsback;$/;"	m	struct:__anon3	file:
readhitsfront	disksim_cachemem.c	/^   int readhitsfront;$/;"	m	struct:__anon3	file:
readhitsfull	disksim_cachedev.c	/^   int readhitsfull;$/;"	m	struct:__anon2	file:
readhitsfull	disksim_cachemem.c	/^   int readhitsfull;$/;"	m	struct:__anon3	file:
readhitsmiddle	disksim_cachemem.c	/^   int readhitsmiddle;$/;"	m	struct:__anon3	file:
readhitsonwritedata	disksim_disk.h	/^  int		readhitsonwritedata;$/;"	m	struct:disk
reading_buffer_partial_servtime	disksim_disk.h	/^   double reading_buffer_partial_servtime;$/;"	m	struct:disk_info
reading_buffer_partial_servtime	disksim_disk.h	548;"	d
reading_buffer_whole_servtime	disksim_disk.h	/^   double reading_buffer_whole_servtime;$/;"	m	struct:disk_info
reading_buffer_whole_servtime	disksim_disk.h	550;"	d
readinghits	disksim_disk.h	/^   int     readinghits;$/;"	m	struct:__anon12
readintarrstats	disksim_ioqueue.c	/^   statgen	readintarrstats;$/;"	m	struct:ioq	file:
readintarrstats	disksim_logorg.h	/^   statgen      readintarrstats;$/;"	m	struct:__anon22
readlen	disksim_ioqueue.c	/^   int		readlen;$/;"	m	struct:subq	file:
readlocks	disksim_cachemem.c	/^   cache_lockholders *readlocks;$/;"	m	struct:cacheatom	file:
readmisses	disksim_cachedev.c	/^   int readmisses;$/;"	m	struct:__anon2	file:
readmisses	disksim_cachemem.c	/^   int readmisses;$/;"	m	struct:__anon3	file:
readmisses	disksim_disk.h	/^   int     readmisses;$/;"	m	struct:__anon12
readmisslimitstats	disksim_pfsim.h	/^   statgen readmisslimitstats;$/;"	m	struct:process
readoutstanding	disksim_logorg.h	/^   int		readoutstanding;$/;"	m	struct:__anon22
readoverlapscombed	disksim_ioqueue.c	/^   int		readoverlapscombed;$/;"	m	struct:ioq	file:
reads	disksim_cachedev.c	/^   int reads;$/;"	m	struct:__anon2	file:
reads	disksim_cachemem.c	/^   int reads;$/;"	m	struct:__anon3	file:
reads	disksim_logorg.h	/^   int		reads;$/;"	m	struct:__anon22
readsizestats	disksim_ioqueue.c	/^   statgen	readsizestats;$/;"	m	struct:ioq	file:
readsizestats	disksim_logorg.h	/^   statgen	readsizestats;$/;"	m	struct:__anon22
readtimelimitstats	disksim_pfsim.h	/^   statgen readtimelimitstats;$/;"	m	struct:process
readwater	disksim_disk.h	/^  double	readwater;$/;"	m	struct:disk
realOrGhost	cache.h	/^ int realOrGhost; \/\/ If this is 0->real else belongs to ghost lines ..if this is -1 its in zombie state$/;"	m	struct:flash_cache_line
real_arr	ssd_interface.c	/^int real_arr[MAP_REAL_MAX_ENTRIES];$/;"	v
real_arr	ssd_interface_noopt.c	/^int real_arr[MAP_REAL_MAX_ENTRIES];$/;"	v
real_arr	ssd_interface_opt.c	/^int real_arr[MAP_REAL_MAX_ENTRIES];$/;"	v
real_devno	disksim_cachedev.c	/^   int real_devno;				\/* device for which cache is used *\/$/;"	m	struct:cache_def	file:
real_heap	heap.h	/^PacketHeap real_heap,ghost_heap;$/;"	v
real_max	ssd_interface.c	/^int real_max = 0;$/;"	v
real_max	ssd_interface_noopt.c	/^int real_max = 0;$/;"	v
real_max	ssd_interface_opt.c	/^int real_max = 0;$/;"	v
real_min	ssd_interface.c	/^int real_min = -1;$/;"	v
real_min	ssd_interface_noopt.c	/^int real_min = -1;$/;"	v
real_min	ssd_interface_opt.c	/^int real_min = -1;$/;"	v
rear	cache.c	/^request *rear = NULL;$/;"	v
rec_id	disksim_hptrace.h	/^   hpl_record_id   rec_id;$/;"	m	struct:__anon16
reconnect_reason	disksim_simpledisk.c	/^   int reconnect_reason;$/;"	m	struct:simpledisk	file:
reconnect_reason	disksim_simpleflash.c	/^   int reconnect_reason;$/;"	m	struct:simpleflash	file:
recyclereq	disksim_disk.h	/^   struct diskreq_t *recyclereq;        \/* diskreq to recycle this seg *\/$/;"	m	struct:seg	typeref:struct:seg::diskreq_t
redunsizes	disksim_logorg.h	/^   int   *redunsizes;$/;"	m	struct:logorg
reduntoggle	disksim_logorg.h	/^   int    reduntoggle;$/;"	m	struct:logorg
reduntype	disksim_logorg.h	/^   int    reduntype;$/;"	m	struct:logorg
remove_induced_subevent	cache.c	/^struct induced_subevent* remove_induced_subevent()$/;"	f
remove_tsps	disksim_ioqueue.c	/^static void remove_tsps(iobuf *tmp){$/;"	f	file:
removefromintq	disksim.c	/^INLINE int removefromintq (event *curr)$/;"	f
rempartsize	disksim_disk.h	/^   double  rempartsize;$/;"	m	struct:__anon12
remreadingsize	disksim_disk.h	/^   double  remreadingsize;$/;"	m	struct:__anon12
replacepolicy	disksim_cachemem.c	/^   int replacepolicy;$/;"	m	struct:cache_def	file:
report_free_blocks	syssim_driver2.c	/^void report_free_blocks(unsigned short devno)$/;"	f
req	disksim_cachedev.c	/^   ioreq_event *req;$/;"	m	struct:cacheevent	file:
req	disksim_cachemem.c	/^   ioreq_event *req;$/;"	m	struct:cacheevent	file:
req_count	disksim_synthio.c	/^int req_count = 0;$/;"	v
req_count	syssim_driver2.c	/^static int req_count=0;$/;"	v	file:
req_count_global	ssd_interface.c	/^int req_count_global = 0;$/;"	v
req_count_num	ssd_interface.c	/^int req_count_num = 1;$/;"	v
req_num	disksim_simpleflash.c	/^int req_num = 1;$/;"	v
req_size_term	disksim_logorg.c	/^double req_size_term;$/;"	v
reqcnt	disksim_ioqueue.c	/^   int       reqcnt;$/;"	m	struct:iob	file:
reqopid	disksim_logorg.h	/^   int    reqopid;$/;"	m	struct:os
reqoutstanding	disksim_ioqueue.c	/^   int		reqoutstanding;$/;"	m	struct:subq	file:
reqs_before_first_throttling	disksim_diskctlr2.c	/^  int reqs_before_first_throttling[MAX_DEVICE_NUM];$/;"	v
reqs_heating_time	disksim_diskctlr2.c	/^  int reqs_heating_time[MAX_DEVICE_NUM];$/;"	v
reqsizestats	disksim_ioqueue.c	/^   statgen	reqsizestats;$/;"	m	struct:ioq	file:
request	cache.h	/^typedef struct outgoing_request request; $/;"	t	typeref:struct:outgoing_request
requestedbus	disksim_disk.h	/^   double  requestedbus;$/;"	m	struct:__anon12
requestedbus	disksim_simpledisk.c	/^   double  requestedbus;$/;"	m	struct:__anon33	file:
requestedbus	disksim_simpleflash.c	/^   double  requestedbus;$/;"	m	struct:__anon34	file:
requests	disksim_ioqueue.c	/^static iobuf *requests[MAX_TSPS];$/;"	v	file:
reqwater	disksim_disk.h	/^  int		reqwater;$/;"	m	struct:disk
reset_flash_stat	ssd_interface.c	/^void reset_flash_stat()$/;"	f
reset_flash_stat	ssd_interface_noopt.c	/^void reset_flash_stat()$/;"	f
reset_flash_stat	ssd_interface_opt.c	/^void reset_flash_stat()$/;"	f
resetstats	disksim.c	/^void resetstats ()$/;"	f
resptimestats	disksim_logorg.h	/^   statgen      resptimestats;$/;"	m	struct:__anon22
rmwpoint	disksim_logorg.h	/^   int    rmwpoint;$/;"	m	struct:logorg
rotate_angle	syssim_driver2.c	/^  float rotate_angle;$/;"	m	struct:alg_args_s	file:
rotlatstats	disksim_disk.h	/^   statgen rotlatstats;$/;"	m	struct:__anon12
rottype	disksim_logorg.h	/^   int    rottype;$/;"	m	struct:logorg
rounduptomult	disksim_global.h	428;"	d
rqst_cnt	ssd_interface.c	/^int cache_hit, rqst_cnt;$/;"	v
run_induced_test	cache.c	/^void run_induced_test(double req_time)$/;"	f
runclockintrtime	disksim_pfsim.h	/^   double     runclockintrtime;$/;"	m	struct:__anon26
runcpu	disksim_pfsim.h	/^   u_int runcpu;$/;"	m	struct:process
runextintrtime	disksim_pfsim.h	/^   double     runextintrtime;$/;"	m	struct:__anon26
runidletime	disksim_bus.c	/^  double	runidletime;$/;"	m	struct:bus	file:
runintrtime	disksim_pfsim.h	/^   double     runintrtime;$/;"	m	struct:__anon26
runiointrtime	disksim_pfsim.h	/^   double     runiointrtime;$/;"	m	struct:__anon26
runiosleep	disksim_pfsim.h	/^   double runiosleep;$/;"	m	struct:process
runlistlen	disksim_ioqueue.c	/^   double	runlistlen;$/;"	m	struct:subq	file:
runoutstanding	disksim_ioqueue.c	/^   double	runoutstanding;$/;"	m	struct:subq	file:
runouttime	disksim_logorg.h	/^   double	runouttime;$/;"	m	struct:__anon22
runpartsize	disksim_disk.h	/^   double  runpartsize;$/;"	m	struct:__anon12
runpreempt	disksim_pfsim.h	/^   int        runpreempt;$/;"	m	struct:__anon26
runreadingsize	disksim_disk.h	/^   double  runreadingsize;$/;"	m	struct:__anon12
runreadlen	disksim_ioqueue.c	/^   double	runreadlen;$/;"	m	struct:subq	file:
runsleep	disksim_pfsim.h	/^   double runsleep;$/;"	m	struct:process
runsquares	disksim_stat.h	/^   double  runsquares;$/;"	m	struct:__anon35
runswitchtime	disksim_pfsim.h	/^   double     runswitchtime;$/;"	m	struct:__anon26
runtickintrtime	disksim_pfsim.h	/^   double     runtickintrtime;$/;"	m	struct:__anon26
runtime	disksim_global.h	/^   double runtime;$/;"	m	struct:intr_ev
runtime	disksim_pfsim.h	/^   double runtime;$/;"	m	struct:process
runval	disksim_stat.h	/^   double  runval;$/;"	m	struct:__anon35
s	disksim_disk.h	/^  struct dm_mech_state s;$/;"	m	struct:disk_currstate	typeref:struct:disk_currstate::dm_mech_state
save_count	opagemap.h	/^int save_count;$/;"	v
scale	disksim_iodriver.h	/^   double	scale;$/;"	m	struct:iodriver
scale	disksim_pfsim.h	/^   double     scale;$/;"	m	struct:__anon26
scale	disksim_stat.h	/^   int     scale;$/;"	m	struct:__anon35
scanparam_int	disksim.c	/^void scanparam_int (char *parline, char *parname, int *parptr,$/;"	f
sched_alg	disksim_ioqueue.c	/^   int		sched_alg;$/;"	m	struct:subq	file:
sched_count	disksim_ioqueue.c	/^static int sched_count=0;$/;"	v	file:
schedule_disk_access	disksim_iodriver.c	/^static void schedule_disk_access (iodriver *curriodriver, ioreq_event *curr)$/;"	f	file:
search_count_stat	syssim_driver2.c	/^static statgen *search_count_stat;$/;"	v	file:
search_table	ssd_interface.c	/^int search_table(int *arr, int size, int val) $/;"	f
search_table	ssd_interface_noopt.c	/^int search_table(int *arr, int size, int val) $/;"	f
search_table	ssd_interface_opt.c	/^int search_table(int *arr, int size, int val) $/;"	f
sec	disksim_hptrace.h	/^   u_int32_t sec;     \/* time of     *\/$/;"	m	struct:__anon15
sect	nand.h	/^  struct sect_state sect[SECT_NUM_PER_BLK]; \/\/ Logical Sector Number$/;"	m	struct:nand_blk_info	typeref:struct:nand_blk_info::sect_state
sect_state	nand.h	/^struct sect_state {$/;"	s
sect_t	fsim_types.h	/^typedef uint_fast32_t sect_t;$/;"	t
sectbysect	disksim_disk.h	/^  int		sectbysect;$/;"	m	struct:disk
sectionunit	disksim_logorg.h	/^   int    sectionunit;$/;"	m	struct:logorg
sectno	disksim_hptrace.h	/^   u_int32_t       sectno;     \/* sector number on disk addressed *\/$/;"	m	struct:__anon16
sector	syssim_driver2.c	/^  unsigned char sector;$/;"	m	struct:block_s	file:
sector	syssim_driver2.c	/^  unsigned char sector;$/;"	m	struct:node_s	file:
sector_angle	syssim_driver2.c	/^static float **sector_angle;$/;"	v	file:
sectorcount	syssim_driver.h	/^        int sectorcount;$/;"	m	struct:__anon41
sectorid	cache.h	/^	unsigned long sectorid;$/;"	m	struct:outgoing_request
sectorid	cache.h	/^  unsigned long sectorid;$/;"	m	struct:induced_subevent
sectorid	cache.h	/^ unsigned long sectorid;$/;"	m	struct:flash_cache_line
sectors_in_each_disk	cache.c	/^unsigned long sectors_in_each_disk = 262144;$/;"	v
sectors_rotate	syssim_driver2.c	/^  unsigned short sectors_rotate;$/;"	m	struct:node_s	file:
sectorspercyl	syssim_driver2.c	/^static int *sectorspercyl;$/;"	v	file:
sectpercyl	disksim_disk.h	/^  int	       sectpercyl;    $/;"	m	struct:disk
sectpercyl	disksim_ioqueue.c	/^   int		sectpercyl;$/;"	m	struct:ioq	file:
sectsperdisk	disksim_synthio.c	/^   int            sectsperdisk;$/;"	m	struct:gen	file:
seedval	disksim_global.h	/^   int    seedval;$/;"	m	struct:disksim
seek_angle	syssim_driver2.c	/^static float *seek_angle;$/;"	v	file:
seek_angles	syssim_driver2.c	/^inline void seek_angles(alg_args_t *args,$/;"	f
seek_dist_stat	syssim_driver2.c	/^static statgen **seek_dist_stat;$/;"	v	file:
seek_min	syssim_driver2.c	/^static float *seek_min;$/;"	v	file:
seekdistance	disksim_disk.h	/^   int     seekdistance;$/;"	m	struct:__anon12
seekdiststats	disksim_disk.h	/^   statgen seekdiststats;$/;"	m	struct:__anon12
seektime	disksim_disk.h	/^   double  seektime;$/;"	m	struct:__anon12
seektime	disksim_disk.h	/^  double          seektime;$/;"	m	struct:disk
seektimestats	disksim_disk.h	/^   statgen seektimestats;$/;"	m	struct:__anon12
seg	disksim_disk.h	/^   segment	       *seg;		\/* associated cache segment *\/$/;"	m	struct:diskreq_t
seg	disksim_disk.h	/^typedef struct seg {$/;"	s
seg_next	disksim_disk.h	/^   struct diskreq_t    *seg_next;	\/* list attached to a segment *\/$/;"	m	struct:diskreq_t	typeref:struct:diskreq_t::diskreq_t
seglist	disksim_disk.h	/^  segment      *seglist;$/;"	m	struct:disk
segment	disksim_disk.h	/^} segment;$/;"	t	typeref:struct:seg
segsize	disksim_disk.h	/^  int		segsize;$/;"	m	struct:disk
select_victim_blk	blockmap.c	/^_u32 select_victim_blk()$/;"	f
select_victim_blk	blockmap_aayush.c	/^_u32 select_victim_blk()$/;"	f
send_flash_request	ssd_interface.c	/^void send_flash_request(int start_blk_no, int block_cnt, int operation, int mapdir_flag)$/;"	f
send_flash_request	ssd_interface_noopt.c	/^void send_flash_request(int start_blk_no, int block_cnt, int operation, int mapdir_flag)$/;"	f
send_flash_request	ssd_interface_opt.c	/^void send_flash_request(int start_blk_no, int block_cnt, int operation, int mapdir_flag)$/;"	f
seq_blkno	syssim_driver2.c	/^static int seq_blkno[MAXDISKS];$/;"	v	file:
seq_flag	disksim_synthio.c	/^int seq_flag = 1;$/;"	v
seq_log_blk	fast.c	/^struct seq_log_blk{$/;"	s	file:
seq_log_blk	fast.youkim.c	/^struct seq_log_blk{$/;"	s	file:
seq_log_blk	fast_bk.c	/^struct seq_log_blk{$/;"	s	file:
seq_log_blk	last.c	/^struct seq_log_blk{$/;"	s	file:
seq_sectors	syssim_driver2.c	/^static int seq_sectors = 16;$/;"	v	file:
seq_term	disksim_logorg.c	/^double seq_term;$/;"	v
seqblkno	disksim_ioqueue.c	/^   int		seqblkno;$/;"	m	struct:ioq	file:
seqdiskswitches	disksim_logorg.h	/^   int		seqdiskswitches;$/;"	m	struct:__anon22
seqflags	disksim_ioqueue.c	/^   int		seqflags;$/;"	m	struct:ioq	file:
seqintr	disksim_synthio.c	/^   synthio_distr  seqintr;$/;"	m	struct:gen	file:
seqreads	disksim_ioqueue.c	/^   int		seqreads;$/;"	m	struct:ioq	file:
seqreads	disksim_logorg.h	/^   int		seqreads;$/;"	m	struct:__anon22
seqreads	disksim_logorg.h	/^   int    seqreads;$/;"	m	struct:__anon23
seqscheme	disksim_ioqueue.c	/^   int		seqscheme;$/;"	m	struct:ioq	file:
seqstreamdiff	disksim_ioqueue.c	/^   int 		seqstreamdiff;$/;"	m	struct:ioq	file:
seqwrites	disksim_ioqueue.c	/^   int		seqwrites;$/;"	m	struct:ioq	file:
seqwrites	disksim_logorg.h	/^   int		seqwrites;$/;"	m	struct:__anon22
seqwrites	disksim_logorg.h	/^   int    seqwrites;$/;"	m	struct:__anon23
service_time	disksim_ioqueue.c	/^service_time(unsigned int current_cyl,$/;"	f	file:
servicetime	syssim_driver2.c	/^static float servicetime = 0.0;$/;"	v	file:
servtime	syssim_driver2.c	/^static int servtime = 0;$/;"	v	file:
setEndian	disksim.c	/^static void setEndian(void) {$/;"	f	file:
set_depth	disksim_device.h	/^  int     (*set_depth)(int diskno, int inbusno, int depth, int slotno);$/;"	m	struct:device_header
setcallbacks	disksim.c	/^static void setcallbacks ()$/;"	f	file:
sfreq	raw_layout.c	/^typedef struct sfreq {$/;"	s	file:
sfreq_t	raw_layout.c	/^} sfreq_t;$/;"	t	typeref:struct:sfreq	file:
sharedreadlocks	disksim_cachemem.c	/^   int sharedreadlocks;$/;"	m	struct:cache_def	file:
sim_length	syssim_driver2.c	/^static double sim_length = 20000.0;$/;"	v	file:
simpledisk	disksim_simpledisk.c	/^typedef struct simpledisk {$/;"	s	file:
simpledisk_access_complete	disksim_simpledisk.c	/^static void simpledisk_access_complete (ioreq_event *curr)$/;"	f	file:
simpledisk_acctime_printstats	disksim_simpledisk.c	/^static void simpledisk_acctime_printstats (int *set, int setsize, char *prefix)$/;"	f	file:
simpledisk_add	disksim_simpledisk.c	/^int simpledisk_add(struct simpledisk *d) {$/;"	f
simpledisk_bus_delay_complete	disksim_simpledisk.c	/^void simpledisk_bus_delay_complete (int devno, ioreq_event *curr, int sentbusno)$/;"	f
simpledisk_bus_ownership_grant	disksim_simpledisk.c	/^void simpledisk_bus_ownership_grant (int devno, ioreq_event *curr, int busno, double arbdelay)$/;"	f
simpledisk_bustransfer_complete	disksim_simpledisk.c	/^static void simpledisk_bustransfer_complete (ioreq_event *curr)$/;"	f	file:
simpledisk_cleanstats	disksim_simpledisk.c	/^void simpledisk_cleanstats (void)$/;"	f
simpledisk_completion_done	disksim_simpledisk.c	/^static void simpledisk_completion_done (ioreq_event *curr)$/;"	f	file:
simpledisk_copy	disksim_simpledisk.c	/^struct simpledisk *simpledisk_copy(struct simpledisk *orig) {$/;"	f
simpledisk_disconnect_done	disksim_simpledisk.c	/^static void simpledisk_disconnect_done (ioreq_event *curr)$/;"	f	file:
simpledisk_event_arrive	disksim_simpledisk.c	/^void simpledisk_event_arrive (ioreq_event *curr)$/;"	f
simpledisk_get_acctime	disksim_simpledisk.c	/^double  simpledisk_get_acctime (int devno, ioreq_event *req, double maxtime)$/;"	f
simpledisk_get_avg_sectpercyl	disksim_simpledisk.c	/^int simpledisk_get_avg_sectpercyl (int devno)$/;"	f
simpledisk_get_blktranstime	disksim_simpledisk.c	/^double simpledisk_get_blktranstime (ioreq_event *curr)$/;"	f
simpledisk_get_busno	disksim_simpledisk.c	/^int simpledisk_get_busno (ioreq_event *curr)$/;"	f
simpledisk_get_depth	disksim_simpledisk.c	/^int simpledisk_get_depth (int devno)$/;"	f
simpledisk_get_distance	disksim_simpledisk.c	/^int simpledisk_get_distance (int devno, ioreq_event *req, int exact, int direction)$/;"	f
simpledisk_get_inbus	disksim_simpledisk.c	/^int simpledisk_get_inbus (int devno)$/;"	f
simpledisk_get_mapping	disksim_simpledisk.c	/^void simpledisk_get_mapping (int maptype, int devno, int blkno, int *cylptr, int *surfaceptr, int *blkptr)$/;"	f
simpledisk_get_maxoutstanding	disksim_simpledisk.c	/^int simpledisk_get_maxoutstanding (int devno)$/;"	f
simpledisk_get_number_of_blocks	disksim_simpledisk.c	/^int simpledisk_get_number_of_blocks (int devno)$/;"	f
simpledisk_get_numcyls	disksim_simpledisk.c	/^int simpledisk_get_numcyls (int devno)$/;"	f
simpledisk_get_numdisks	disksim_simpledisk.c	/^int simpledisk_get_numdisks (void)$/;"	f
simpledisk_get_seektime	disksim_simpledisk.c	/^double simpledisk_get_seektime (int devno, $/;"	f
simpledisk_get_servtime	disksim_simpledisk.c	/^double  simpledisk_get_servtime (int devno, ioreq_event *req, int checkcache, double maxtime)$/;"	f
simpledisk_get_slotno	disksim_simpledisk.c	/^int simpledisk_get_slotno (int devno)$/;"	f
simpledisk_hdr_initializer	disksim_simpledisk.c	/^struct device_header simpledisk_hdr_initializer = { $/;"	v	typeref:struct:device_header
simpledisk_info	disksim_simpledisk.c	/^typedef struct simpledisk_info {$/;"	s	file:
simpledisk_initialize	disksim_simpledisk.c	/^void simpledisk_initialize (void)$/;"	f
simpledisk_initialize_diskinfo	disksim_simpledisk.c	/^static void simpledisk_initialize_diskinfo ()$/;"	f	file:
simpledisk_interrupt_complete	disksim_simpledisk.c	/^static void simpledisk_interrupt_complete (ioreq_event *curr)$/;"	f	file:
simpledisk_other_printstats	disksim_simpledisk.c	/^static void simpledisk_other_printstats (int *set, int setsize, char *prefix)$/;"	f	file:
simpledisk_postpass	disksim_simpledisk.c	/^static void simpledisk_postpass (void)$/;"	f	file:
simpledisk_printsetstats	disksim_simpledisk.c	/^void simpledisk_printsetstats (int *set, int setsize, char *sourcestr)$/;"	f
simpledisk_printstats	disksim_simpledisk.c	/^void simpledisk_printstats (void)$/;"	f
simpledisk_reconnect_done	disksim_simpledisk.c	/^static void simpledisk_reconnect_done (ioreq_event *curr)$/;"	f	file:
simpledisk_request_arrive	disksim_simpledisk.c	/^static void simpledisk_request_arrive (ioreq_event *curr)$/;"	f	file:
simpledisk_request_complete	disksim_simpledisk.c	/^static void simpledisk_request_complete(ioreq_event *curr)$/;"	f	file:
simpledisk_resetstats	disksim_simpledisk.c	/^void simpledisk_resetstats (void)$/;"	f
simpledisk_send_event_up_path	disksim_simpledisk.c	/^static void simpledisk_send_event_up_path (ioreq_event *curr, double delay)$/;"	f	file:
simpledisk_set_depth	disksim_simpledisk.c	/^int simpledisk_set_depth (int devno, int inbusno, int depth, int slotno)$/;"	f
simpledisk_set_syncset	disksim_simpledisk.c	/^void simpledisk_set_syncset (int setstart, int setend)$/;"	f
simpledisk_setcallbacks	disksim_simpledisk.c	/^void simpledisk_setcallbacks ()$/;"	f
simpledisk_stat_t	disksim_simpledisk.c	/^} simpledisk_stat_t;$/;"	t	typeref:struct:__anon33	file:
simpledisk_statinit	disksim_simpledisk.c	/^static void simpledisk_statinit (int devno, int firsttime)$/;"	f	file:
simpledisk_t	disksim_simpledisk.c	/^} simpledisk_t;$/;"	t	typeref:struct:simpledisk	file:
simplediskinfo	disksim_global.h	/^   struct simpledisk_info *simplediskinfo;$/;"	m	struct:disksim	typeref:struct:disksim::simpledisk_info
simplediskinfo_t	disksim_simpledisk.c	/^} simplediskinfo_t;$/;"	t	typeref:struct:simpledisk_info	file:
simpledisks	disksim_simpledisk.c	/^   struct simpledisk **simpledisks;$/;"	m	struct:simpledisk_info	typeref:struct:simpledisk_info::simpledisk	file:
simpledisks_len	disksim_simpledisk.c	/^  int simpledisks_len; \/* allocated size of simpledisks *\/$/;"	m	struct:simpledisk_info	file:
simpleflash	disksim_simpleflash.c	/^typedef struct simpleflash {$/;"	s	file:
simpleflash_access_complete	disksim_simpleflash.c	/^static void simpleflash_access_complete (ioreq_event *curr)$/;"	f	file:
simpleflash_acctime_printstats	disksim_simpleflash.c	/^static void simpleflash_acctime_printstats (int *set, int setsize, char *prefix)$/;"	f	file:
simpleflash_add	disksim_simpleflash.c	/^int simpleflash_add(struct simpleflash *d) {$/;"	f
simpleflash_bus_delay_complete	disksim_simpleflash.c	/^void simpleflash_bus_delay_complete (int devno, ioreq_event *curr, int sentbusno)$/;"	f
simpleflash_bus_ownership_grant	disksim_simpleflash.c	/^void simpleflash_bus_ownership_grant (int devno, ioreq_event *curr, int busno, double arbdelay)$/;"	f
simpleflash_bustransfer_complete	disksim_simpleflash.c	/^static void simpleflash_bustransfer_complete (ioreq_event *curr)$/;"	f	file:
simpleflash_cleanstats	disksim_simpleflash.c	/^void simpleflash_cleanstats (void)$/;"	f
simpleflash_completion_done	disksim_simpleflash.c	/^static void simpleflash_completion_done (ioreq_event *curr)$/;"	f	file:
simpleflash_copy	disksim_simpleflash.c	/^struct simpleflash *simpleflash_copy(struct simpleflash *orig) {$/;"	f
simpleflash_disconnect_done	disksim_simpleflash.c	/^static void simpleflash_disconnect_done (ioreq_event *curr)$/;"	f	file:
simpleflash_event_arrive	disksim_simpleflash.c	/^void simpleflash_event_arrive (ioreq_event *curr)$/;"	f
simpleflash_get_acctime	disksim_simpleflash.c	/^double  simpleflash_get_acctime (int devno, unsigned int blkno, int bcount, int flags)$/;"	f
simpleflash_get_avg_sectpercyl	disksim_simpleflash.c	/^int simpleflash_get_avg_sectpercyl (int devno)$/;"	f
simpleflash_get_blktranstime	disksim_simpleflash.c	/^double simpleflash_get_blktranstime (ioreq_event *curr)$/;"	f
simpleflash_get_busno	disksim_simpleflash.c	/^int simpleflash_get_busno (ioreq_event *curr)$/;"	f
simpleflash_get_depth	disksim_simpleflash.c	/^int simpleflash_get_depth (int devno)$/;"	f
simpleflash_get_distance	disksim_simpleflash.c	/^int simpleflash_get_distance (int devno, ioreq_event *req, int exact, int direction)$/;"	f
simpleflash_get_inbus	disksim_simpleflash.c	/^int simpleflash_get_inbus (int devno)$/;"	f
simpleflash_get_mapping	disksim_simpleflash.c	/^void simpleflash_get_mapping (int maptype, int devno, int blkno, int *cylptr, int *surfaceptr, int *blkptr)$/;"	f
simpleflash_get_maxoutstanding	disksim_simpleflash.c	/^int simpleflash_get_maxoutstanding (int devno)$/;"	f
simpleflash_get_number_of_blocks	disksim_simpleflash.c	/^int simpleflash_get_number_of_blocks (int devno)$/;"	f
simpleflash_get_numcyls	disksim_simpleflash.c	/^int simpleflash_get_numcyls (int devno)$/;"	f
simpleflash_get_numdisks	disksim_simpleflash.c	/^int simpleflash_get_numdisks (void)$/;"	f
simpleflash_get_seektime	disksim_simpleflash.c	/^double simpleflash_get_seektime (int devno, $/;"	f
simpleflash_get_servtime	disksim_simpleflash.c	/^double  simpleflash_get_servtime (int devno, ioreq_event *req, int checkcache, double maxtime)$/;"	f
simpleflash_get_slotno	disksim_simpleflash.c	/^int simpleflash_get_slotno (int devno)$/;"	f
simpleflash_hdr_initializer	disksim_simpleflash.c	/^struct device_header simpleflash_hdr_initializer = { $/;"	v	typeref:struct:device_header
simpleflash_info	disksim_simpleflash.c	/^typedef struct simpleflash_info {$/;"	s	file:
simpleflash_initialize	disksim_simpleflash.c	/^void simpleflash_initialize (void)$/;"	f
simpleflash_initialize_diskinfo	disksim_simpleflash.c	/^static void simpleflash_initialize_diskinfo ()$/;"	f	file:
simpleflash_interrupt_complete	disksim_simpleflash.c	/^static void simpleflash_interrupt_complete (ioreq_event *curr)$/;"	f	file:
simpleflash_other_printstats	disksim_simpleflash.c	/^static void simpleflash_other_printstats (int *set, int setsize, char *prefix)$/;"	f	file:
simpleflash_postpass	disksim_simpleflash.c	/^static void simpleflash_postpass (void)$/;"	f	file:
simpleflash_printsetstats	disksim_simpleflash.c	/^void simpleflash_printsetstats (int *set, int setsize, char *sourcestr)$/;"	f
simpleflash_printstats	disksim_simpleflash.c	/^void simpleflash_printstats (void)$/;"	f
simpleflash_reconnect_done	disksim_simpleflash.c	/^static void simpleflash_reconnect_done (ioreq_event *curr)$/;"	f	file:
simpleflash_request_arrive	disksim_simpleflash.c	/^static void simpleflash_request_arrive (ioreq_event *curr)$/;"	f	file:
simpleflash_request_complete	disksim_simpleflash.c	/^static void simpleflash_request_complete(ioreq_event *curr)$/;"	f	file:
simpleflash_resetstats	disksim_simpleflash.c	/^void simpleflash_resetstats (void)$/;"	f
simpleflash_send_event_up_path	disksim_simpleflash.c	/^static void simpleflash_send_event_up_path (ioreq_event *curr, double delay)$/;"	f	file:
simpleflash_set_depth	disksim_simpleflash.c	/^int simpleflash_set_depth (int devno, int inbusno, int depth, int slotno)$/;"	f
simpleflash_set_syncset	disksim_simpleflash.c	/^void simpleflash_set_syncset (int setstart, int setend)$/;"	f
simpleflash_setcallbacks	disksim_simpleflash.c	/^void simpleflash_setcallbacks ()$/;"	f
simpleflash_stat_t	disksim_simpleflash.c	/^} simpleflash_stat_t;$/;"	t	typeref:struct:__anon34	file:
simpleflash_statinit	disksim_simpleflash.c	/^static void simpleflash_statinit (int devno, int firsttime)$/;"	f	file:
simpleflash_t	disksim_simpleflash.c	/^} simpleflash_t;$/;"	t	typeref:struct:simpleflash	file:
simpleflashinfo	disksim_global.h	/^   struct simpleflash_info *simpleflashinfo;$/;"	m	struct:disksim	typeref:struct:disksim::simpleflash_info
simpleflashinfo_t	disksim_simpleflash.c	/^} simpleflashinfo_t;$/;"	t	typeref:struct:simpleflash_info	file:
simpleflashs	disksim_simpleflash.c	/^   struct simpleflash **simpleflashs;$/;"	m	struct:simpleflash_info	typeref:struct:simpleflash_info::simpleflash	file:
simpleflashs_len	disksim_simpleflash.c	/^  int simpleflashs_len; \/* allocated size of simpleflashs *\/$/;"	m	struct:simpleflash_info	file:
simtime	disksim_global.h	/^   double simtime;$/;"	m	struct:disksim
simtime	disksim_global.h	412;"	d
size	disksim_cachedev.c	/^   int size;					\/* in 512B blks  *\/$/;"	m	struct:cache_def	file:
size	disksim_cachemem.c	/^   int size;					\/* in 512B blks  *\/$/;"	m	struct:cache_def	file:
size	disksim_disk.h	/^   int          size;$/;"	m	struct:seg
size	disksim_hptrace.h	/^   u_int32_t       size;       \/* size in bytes *\/$/;"	m	struct:__anon16
size	disksim_hptrace.h	/^   u_int32_t size;    \/* record size *\/$/;"	m	struct:__anon15
size	heap.h	/^  int size;$/;"	m	struct:__anon37
sizedist	disksim_synthio.c	/^   synthio_distr  sizedist;$/;"	m	struct:gen	file:
sizes	disksim_logorg.h	/^   int   *sizes;$/;"	m	struct:logorg
sizestats	disksim_logorg.h	/^   statgen      sizestats;$/;"	m	struct:__anon22
sleep_event	disksim_pfsim.h	/^} sleep_event;$/;"	t	typeref:struct:__anon30
sleepqueue	disksim_pfsim.h	/^   process *sleepqueue;$/;"	m	struct:pf_info
sleepqueue	disksim_pfsim.h	311;"	d
sleeps	disksim_pfsim.h	/^   int  sleeps;$/;"	m	struct:process
sleeptime	disksim_pfsim.h	/^   int    sleeptime;$/;"	m	struct:__anon30
slot	disksim_bus.c	/^} slot;$/;"	t	typeref:struct:__anon1	file:
slotno	disksim_bus.c	/^   int slotno;$/;"	m	struct:bus_ev	file:
slotno	disksim_cachemem.c	/^   int slotno;$/;"	m	struct:cacheatom	file:
slotno	disksim_ctlr.h	/^   int          slotno[MAXINBUSES];$/;"	m	struct:controller
slotno	disksim_disk.h	/^  int          slotno[MAXINBUSES];$/;"	m	struct:disk
slotno	disksim_global.h	/^   u_int  slotno;$/;"	m	struct:ioreq_ev
slotno	disksim_simpledisk.c	/^   int slotno[MAXINBUSES];$/;"	m	struct:simpledisk	file:
slotno	disksim_simpleflash.c	/^   int slotno[MAXINBUSES];$/;"	m	struct:simpleflash	file:
slotpath	disksim_iosim.h	/^   intchar      slotpath;$/;"	m	struct:__anon20
slotpath	disksim_iosim.h	/^   intchar      slotpath;$/;"	m	struct:__anon21
slots	disksim_bus.c	/^  slot         *slots;$/;"	m	struct:bus	file:
smalldistvals	disksim_stat.h	/^   int     smalldistvals[DISTSIZE];$/;"	m	struct:__anon35
sneakyfullreadhits	disksim_disk.h	/^  int		sneakyfullreadhits;$/;"	m	struct:disk
sneakyintermediatereadhits	disksim_disk.h	/^  int		sneakyintermediatereadhits;$/;"	m	struct:disk
sneakypartialreadhits	disksim_disk.h	/^  int		sneakypartialreadhits;$/;"	m	struct:disk
source_angle	syssim_driver2.c	/^  float source_angle;$/;"	m	struct:alg_args_s	file:
source_cyl	syssim_driver2.c	/^  unsigned short source_cyl;$/;"	m	struct:alg_args_s	file:
source_rotate	syssim_driver2.c	/^  float source_rotate;$/;"	m	struct:node_s	file:
source_seektime	syssim_driver2.c	/^  float source_seektime;$/;"	m	struct:cyl_node_s	file:
source_surface	syssim_driver2.c	/^  unsigned short source_surface;$/;"	m	struct:alg_args_s	file:
sourcecyl	syssim_driver2.c	/^static int sourcecyl[MAXDISKS];$/;"	v	file:
space	disksim_cachemem.c	/^   int space;$/;"	m	struct:__anon4	file:
space	disksim_disk.h	/^   char			space[20];$/;"	m	struct:diskreq_t
space	disksim_global.h	/^   char space[DISKSIM_EVENT_SPACESIZE];$/;"	m	struct:ev
space	disksim_hptrace.h	/^   char space[4];$/;"	m	struct:__anon16
space	disksim_pfsim.h	/^   char *space;$/;"	m	struct:process
space	disksim_stat.h	/^   char    space[4];$/;"	m	struct:__anon35
sqr	syssim_driver.c	/^  double sqr;$/;"	m	struct:__anon40	file:
sqr	syssim_driver2.c	/^	double sqr;$/;"	m	struct:__anon39	file:
squared	syssim_driver2.c	/^  float squared;$/;"	m	struct:touchmap_s	file:
sstfupdown	disksim_ioqueue.c	/^   int		sstfupdown;$/;"	m	struct:subq	file:
sstfupdowncnt	disksim_ioqueue.c	/^   int		sstfupdowncnt;$/;"	m	struct:subq	file:
st	syssim_driver.c	/^static Stat st;$/;"	v	file:
st	syssim_driver2.c	/^static Stat st;$/;"	v	file:
stampfile	disksim_logorg.h	/^   FILE * stampfile;$/;"	m	struct:logorg
stampinterval	disksim_logorg.h	/^   double stampinterval;$/;"	m	struct:logorg
stampstart	disksim_logorg.h	/^   double stampstart;$/;"	m	struct:logorg
stampstop	disksim_logorg.h	/^   double stampstop;$/;"	m	struct:logorg
start	disksim_hptrace.h	/^   u_int32_t       start;      \/* Start time of I\/O in usec from enqueue time *\/$/;"	m	struct:__anon16
start	disksim_simos_interface.h	/^  TICS start;$/;"	m	struct:__anon32
start	syssim_driver.h	/^        SysTime start;$/;"	m	struct:__anon41
start_line_sectorid	cache.h	/^unsigned long start_line_sectorid; $/;"	v
start_sector	syssim_driver2.c	/^  unsigned short start_sector;$/;"	m	struct:alg_args_s	file:
start_seq_cnt	disksim_logorg.c	/^int start_seq_cnt;$/;"	v
start_time	disksim_global.h	/^   double start_time;    \/* temporary; used for memulator timing *\/$/;"	m	struct:ioreq_ev
start_window_time	disksim_logorg.c	/^double start_window_time = 0.0;$/;"	v
startaddr	disksim_global.h	/^   void * startaddr;$/;"	m	struct:disksim
startallflushes	disksim_cachemem.c	/^   int startallflushes;$/;"	m	struct:cache_def	file:
startblkno	disksim_disk.h	/^   int          startblkno;$/;"	m	struct:seg
startblkno	disksim_logorg.h	/^   int    startblkno;$/;"	m	struct:__anon23
startdev	disksim_logorg.h	/^   int    startdev;$/;"	m	struct:logorg
starttime	disksim_ioqueue.c	/^   double    starttime;$/;"	m	struct:iob	file:
starttrans	disksim_disk.h	/^  double       starttrans;$/;"	m	struct:disk
stat	disksim_cachedev.c	/^   cache_stats stat;$/;"	m	struct:cache_def	file:
stat	disksim_cachemem.c	/^   cache_stats stat;$/;"	m	struct:cache_def	file:
stat	disksim_disk.h	/^  diskstat     stat;$/;"	m	struct:disk
stat	disksim_logorg.h	/^   logorgstat stat;$/;"	m	struct:logorg
stat	disksim_pfsim.h	/^   u_int stat;$/;"	m	struct:process
stat	disksim_simpledisk.c	/^   simpledisk_stat_t stat;$/;"	m	struct:simpledisk	file:
stat	disksim_simpleflash.c	/^   simpleflash_stat_t stat;$/;"	m	struct:simpleflash	file:
stat_erase_num	nand.h	/^_u32 stat_read_num, stat_write_num, stat_erase_num;$/;"	v
stat_erase_num	nand_aayush.c	/^_u32 stat_read_num, stat_write_num, stat_erase_num;$/;"	v
stat_gc_called_num	nand_aayush.c	/^int stat_gc_called_num;$/;"	v
stat_gc_called_num	opagemap.c	/^int stat_gc_called_num;$/;"	v
stat_gc_called_num	opagemap.youkim.c	/^int stat_gc_called_num;$/;"	v
stat_gc_called_num	opagemap_noopt.c	/^int stat_gc_called_num;$/;"	v
stat_gc_called_num	opagemap_opt.c	/^int stat_gc_called_num;$/;"	v
stat_gc_called_num	pagemap.c	/^int stat_gc_called_num;$/;"	v
stat_gc_called_num	pagemap_aayush.c	/^int stat_gc_called_num;$/;"	v
stat_gc_read_num	nand.h	/^_u32 stat_gc_read_num, stat_gc_write_num;$/;"	v
stat_gc_read_num	nand_aayush.c	/^_u32 stat_gc_read_num, stat_gc_write_num;$/;"	v
stat_gc_read_size	nand_aayush.c	/^_u32 stat_gc_read_size, stat_gc_write_size;$/;"	v
stat_gc_spare_size	nand_aayush.c	/^_u32 stat_gc_spare_size;$/;"	v
stat_gc_write_num	nand.h	/^_u32 stat_gc_read_num, stat_gc_write_num;$/;"	v
stat_gc_write_num	nand_aayush.c	/^_u32 stat_gc_read_num, stat_gc_write_num;$/;"	v
stat_gc_write_size	nand_aayush.c	/^_u32 stat_gc_read_size, stat_gc_write_size;$/;"	v
stat_get_count	disksim_stat.c	/^int stat_get_count (statgen *statptr)$/;"	f
stat_get_count_set	disksim_stat.c	/^int stat_get_count_set (statgen **statset, int statcnt)$/;"	f
stat_get_large_dist	disksim_stat.c	/^static void stat_get_large_dist (FILE *statdef_file, statgen *statptr, int buckets)$/;"	f	file:
stat_get_runval	disksim_stat.c	/^double stat_get_runval (statgen *statptr)$/;"	f
stat_initialize	disksim_stat.c	/^void stat_initialize (FILE *statdef_file, char *statdesc, statgen *statptr)$/;"	f
stat_oob_read_num	nand.h	/^_u32 stat_oob_read_num, stat_oob_write_num;$/;"	v
stat_oob_write_num	nand.h	/^_u32 stat_oob_read_num, stat_oob_write_num;$/;"	v
stat_print	disksim_stat.c	/^void stat_print (statgen *statptr, char *identstr)$/;"	f
stat_print_file	disksim_stat.c	/^void stat_print_file (statgen *statptr, char *identstr, FILE *outfile){$/;"	f
stat_print_large_dist	disksim_stat.c	/^static void stat_print_large_dist (statgen **statset, int statcnt, int count, char *identstr)$/;"	f	file:
stat_print_set	disksim_stat.c	/^void stat_print_set (statgen **statset, int statcnt, char *identstr)$/;"	f
stat_read_num	nand.h	/^_u32 stat_read_num, stat_write_num, stat_erase_num;$/;"	v
stat_read_num	nand_aayush.c	/^_u32 stat_read_num, stat_write_num, stat_erase_num;$/;"	v
stat_read_size	nand_aayush.c	/^_u32 stat_read_size, stat_write_size;$/;"	v
stat_reset	disksim_stat.c	/^void stat_reset (statgen *statptr)$/;"	f
stat_update	disksim_stat.c	/^void stat_update (statgen *statptr, double value)$/;"	f
stat_warmup_done	disksim.c	/^static void stat_warmup_done (timer_event *timer)$/;"	f	file:
stat_write_num	nand.h	/^_u32 stat_read_num, stat_write_num, stat_erase_num;$/;"	v
stat_write_num	nand_aayush.c	/^_u32 stat_read_num, stat_write_num, stat_erase_num;$/;"	v
stat_write_size	nand_aayush.c	/^_u32 stat_read_size, stat_write_size;$/;"	v
statdeffile	disksim_global.h	/^   FILE * statdeffile;$/;"	m	struct:disksim
statdeffile	disksim_global.h	413;"	d
statdesc	disksim_stat.h	/^   char   *statdesc;$/;"	m	struct:__anon35
statdesc_accstats	disksim_ioqueue.c	/^static char *statdesc_accstats		=	"Physical access time";$/;"	v	file:
statdesc_acctimestats	disksim_disk.c	/^static char *statdesc_acctimestats	=	"Access time";$/;"	v	file:
statdesc_acctimestats	disksim_simpledisk.c	/^static char *statdesc_acctimestats	=	"Access time";$/;"	v	file:
statdesc_acctimestats	disksim_simpleflash.c	/^static char *statdesc_acctimestats	=	"Access time";$/;"	v	file:
statdesc_emptyqueue	disksim_iodriver.c	/^static char *statdesc_emptyqueue	=  "Empty queue delay";$/;"	v	file:
statdesc_idles	disksim_logorg.c	/^static char *statdesc_idles =       "Idle period length";$/;"	v	file:
statdesc_idlestats	disksim_ioqueue.c	/^static char *statdesc_idlestats	=	"Idle period length";$/;"	v	file:
statdesc_infopenalty	disksim_ioqueue.c	/^static char *statdesc_infopenalty	=	"Sub-optimal mapping penalty";$/;"	v	file:
statdesc_initiatenext	disksim_iodriver.c	/^static char *statdesc_initiatenext	=  "Initiate next delay";$/;"	v	file:
statdesc_instqueuelen	disksim_ioqueue.c	/^static char *statdesc_instqueuelen	=	"Instantaneous queue length";$/;"	v	file:
statdesc_intarr	disksim_logorg.c	/^static char *statdesc_intarr =      "Inter-arrival time";$/;"	v	file:
statdesc_intarrstats	disksim_ioqueue.c	/^static char *statdesc_intarrstats	=	"Inter-arrival time";$/;"	v	file:
statdesc_locality	disksim_logorg.c	/^static char *statdesc_locality =    "Inter-request distance";$/;"	v	file:
statdesc_outtimestats	disksim_ioqueue.c	/^static char *statdesc_outtimestats	=	"Response time";$/;"	v	file:
statdesc_postimestats	disksim_disk.c	/^static char *statdesc_postimestats	=	"Positioning time";$/;"	v	file:
statdesc_qtimestats	disksim_ioqueue.c	/^static char *statdesc_qtimestats	=	"Queue time";$/;"	v	file:
statdesc_readintarr	disksim_logorg.c	/^static char *statdesc_readintarr =  "Read inter-arrival";$/;"	v	file:
statdesc_readintarrstats	disksim_ioqueue.c	/^static char *statdesc_readintarrstats	=	"Read inter-arrival";$/;"	v	file:
statdesc_readsize	disksim_logorg.c	/^static char *statdesc_readsize =    "Read request size";$/;"	v	file:
statdesc_readsizestats	disksim_ioqueue.c	/^static char *statdesc_readsizestats	=	"Read request size";$/;"	v	file:
statdesc_reqsize	disksim_logorg.c	/^static char *statdesc_reqsize =     "Request size";$/;"	v	file:
statdesc_reqsizestats	disksim_ioqueue.c	/^static char *statdesc_reqsizestats	=	"Request size";$/;"	v	file:
statdesc_resptime	disksim_logorg.c	/^static char *statdesc_resptime =    "Response time";$/;"	v	file:
statdesc_rotlatstats	disksim_disk.c	/^static char *statdesc_rotlatstats	=	"Rotational latency";$/;"	v	file:
statdesc_seekdiststats	disksim_disk.c	/^static char *statdesc_seekdiststats	=	"Seek distance";$/;"	v	file:
statdesc_seektimestats	disksim_disk.c	/^static char *statdesc_seektimestats	=	"Seek time";$/;"	v	file:
statdesc_streak	disksim_logorg.c	/^static char *statdesc_streak =      "Streak length";$/;"	v	file:
statdesc_traceaccdiffstats	disksim_iosim.c	/^static char *statdesc_traceaccdiffstats =	"Trace access diff time";$/;"	v	file:
statdesc_traceaccdiffwritestats	disksim_iosim.c	/^static char *statdesc_traceaccdiffwritestats =	"Trace write access diff time";$/;"	v	file:
statdesc_traceaccstats	disksim_iosim.c	/^static char *statdesc_traceaccstats =		"Trace access time";$/;"	v	file:
statdesc_traceaccwritestats	disksim_iosim.c	/^static char *statdesc_traceaccwritestats =	"Trace write access time";$/;"	v	file:
statdesc_tracenoqstats	disksim_iosim.c	/^static char *statdesc_tracenoqstats =		"Trace non-queue time";$/;"	v	file:
statdesc_traceqlenstats	disksim_iosim.c	/^static char *statdesc_traceqlenstats =		"Trace queue length";$/;"	v	file:
statdesc_tracequeuestats	disksim_iosim.c	/^static char *statdesc_tracequeuestats =		"Trace queue time";$/;"	v	file:
statdesc_tracerespstats	disksim_iosim.c	/^static char *statdesc_tracerespstats =		"Trace response time";$/;"	v	file:
statdesc_writeintarr	disksim_logorg.c	/^static char *statdesc_writeintarr = "Write inter-arrival";$/;"	v	file:
statdesc_writeintarrstats	disksim_ioqueue.c	/^static char *statdesc_writeintarrstats	=	"Write inter-arrival";$/;"	v	file:
statdesc_writesize	disksim_logorg.c	/^static char *statdesc_writesize =   "Write request size";$/;"	v	file:
statdesc_writesizestats	disksim_ioqueue.c	/^static char *statdesc_writesizestats	=	"Write request size";$/;"	v	file:
statdesc_xfertimestats	disksim_disk.c	/^static char *statdesc_xfertimestats	=	"Transfer time";$/;"	v	file:
state	disksim_bus.c	/^  int           state;$/;"	m	struct:bus	file:
state	disksim_cachemem.c	/^   int state;$/;"	m	struct:cacheatom	file:
state	disksim_ctlr.h	/^   int          state;$/;"	m	struct:controller
state	disksim_disk.h	/^   disk_buffer_state_t state;$/;"	m	struct:seg
state	disksim_ioqueue.c	/^   int       state;$/;"	m	struct:iob	file:
state	disksim_pfsim.h	/^   int        state;$/;"	m	struct:__anon26
state	nand.h	/^  struct blk_state state;                   \/\/ Erase Conunter$/;"	m	struct:nand_blk_info	typeref:struct:nand_blk_info::blk_state
statfile	disksim_stat.h	/^   FILE   *statfile;$/;"	m	struct:__anon35
statgen	disksim_stat.h	/^} statgen;$/;"	t	typeref:struct:__anon35
stop	disksim_hptrace.h	/^   u_int32_t       stop;       \/* Stop time of I\/O in usec from enqueue time *\/$/;"	m	struct:__anon16
stop_sim	disksim_global.h	/^   int    stop_sim;$/;"	m	struct:disksim
stopinsector	disksim_disk.h	/^  int		stopinsector;$/;"	m	struct:disk
storing_num_sectors	cache.h	/^int storing_num_sectors;$/;"	v
storing_sector_id	cache.h	/^unsigned long storing_sector_id;$/;"	v
streakstats	disksim_logorg.h	/^   statgen streakstats;$/;"	m	struct:__anon23
stripeunit	disksim_logorg.h	/^   int    stripeunit;$/;"	m	struct:logorg
subq	disksim_ioqueue.c	/^typedef struct subq {$/;"	s	file:
subqueue	disksim_ioqueue.c	/^} subqueue;$/;"	t	typeref:struct:subq	file:
sum	syssim_driver.c	/^  double sum;$/;"	m	struct:__anon40	file:
sum	syssim_driver2.c	/^	double sum;$/;"	m	struct:__anon39	file:
sum_of_queue_time	ssd_interface.c	/^double sum_of_queue_time = 0.0;$/;"	v
sum_of_queue_time	ssd_interface_noopt.c	/^double sum_of_queue_time = 0.0;$/;"	v
sum_of_queue_time	ssd_interface_opt.c	/^double sum_of_queue_time = 0.0;$/;"	v
sum_of_response_time	ssd_interface.c	/^double sum_of_response_time = 0.0;$/;"	v
sum_of_response_time	ssd_interface_noopt.c	/^double sum_of_response_time = 0.0;$/;"	v
sum_of_response_time	ssd_interface_opt.c	/^double sum_of_response_time = 0.0;$/;"	v
sum_of_service_time	ssd_interface.c	/^double sum_of_service_time = 0.0;$/;"	v
sum_of_service_time	ssd_interface_noopt.c	/^double sum_of_service_time = 0.0;$/;"	v
sum_of_service_time	ssd_interface_opt.c	/^double sum_of_service_time = 0.0;$/;"	v
surface	disksim_ioqueue.c	/^   int       surface;$/;"	m	struct:iob	file:
surface	syssim_driver2.c	/^  unsigned short surface;$/;"	m	struct:alg_args_s	file:
surfoverforw	disksim_ioqueue.c	/^   int		surfoverforw;$/;"	m	struct:subq	file:
susflags	disksim_hptrace.h	/^   u_int32_t       susflags;   \/* flags indicating error (for suspectIO) *\/$/;"	m	struct:__anon16
swap_forward_only	disksim_disk.h	/^   int swap_forward_only;$/;"	m	struct:disk_info
swap_forward_only	disksim_disk.h	530;"	d
switch_merge	disksim_synthio.c	/^int switch_merge =0;$/;"	v
switches	disksim_ioqueue.c	/^   int		switches;$/;"	m	struct:subq	file:
syncreads	disksim_iotrace.h	/^   int syncreads;$/;"	m	struct:iotrace_info
syncreads	disksim_iotrace.h	97;"	d
syncset	disksim_disk.h	/^  int          syncset;$/;"	m	struct:disk
syncwrites	disksim_iotrace.h	/^   int syncwrites;$/;"	m	struct:iotrace_info
syncwrites	disksim_iotrace.h	98;"	d
synthgen	disksim_global.h	/^   int    synthgen;$/;"	m	struct:disksim
synthio_appendio	disksim_synthio.c	/^static void synthio_appendio (process *procp, ioreq_event *tmp)$/;"	f	file:
synthio_cleanstats	disksim_synthio.c	/^void synthio_cleanstats()$/;"	f
synthio_distr	disksim_synthio.c	/^} synthio_distr;$/;"	t	typeref:struct:dist	file:
synthio_distrcopy	disksim_synthio.c	/^static void synthio_distrcopy (synthio_distr *distr1, synthio_distr *distr2)$/;"	f	file:
synthio_endiocnt	disksim_synthio.c	/^   int    synthio_endiocnt;$/;"	m	struct:synthio_info	file:
synthio_endiocnt	disksim_synthio.c	188;"	d	file:
synthio_endtime	disksim_synthio.c	/^   double synthio_endtime;$/;"	m	struct:synthio_info	file:
synthio_endtime	disksim_synthio.c	189;"	d	file:
synthio_gencnt	disksim_synthio.c	/^   int    synthio_gencnt;$/;"	m	struct:synthio_info	file:
synthio_gencnt	disksim_synthio.c	186;"	d	file:
synthio_gencopy	disksim_synthio.c	/^static void synthio_gencopy (synthio_generator *gen1, synthio_generator *gen2)$/;"	f	file:
synthio_generate_io_activity	disksim_synthio.c	/^void synthio_generate_io_activity (process *procp)$/;"	f
synthio_generatenextio	disksim_synthio.c	/^static int synthio_generatenextio (synthio_generator *gen)$/;"	f	file:
synthio_generator	disksim_synthio.c	/^} synthio_generator;$/;"	t	typeref:struct:gen	file:
synthio_gens	disksim_synthio.c	/^   synthio_generator **synthio_gens;$/;"	m	struct:synthio_info	file:
synthio_gens	disksim_synthio.c	185;"	d	file:
synthio_gens_len	disksim_synthio.c	/^   int    synthio_gens_len; \/* allocated size of array *\/$/;"	m	struct:synthio_info	file:
synthio_get_exponential	disksim_synthio.c	/^static double synthio_get_exponential (synthio_distr *fromdistr)$/;"	f	file:
synthio_get_normal	disksim_synthio.c	/^static double synthio_get_normal (synthio_distr *fromdistr)$/;"	f	file:
synthio_get_pareto	disksim_synthio.c	/^static double synthio_get_pareto(synthio_distr *fromdistr)$/;"	f	file:
synthio_get_poisson	disksim_synthio.c	/^static double synthio_get_poisson (synthio_distr *fromdistr)$/;"	f	file:
synthio_get_twovalue	disksim_synthio.c	/^static double synthio_get_twovalue (synthio_distr *fromdistr)$/;"	f	file:
synthio_get_uniform	disksim_synthio.c	/^static double synthio_get_uniform (synthio_distr *fromdistr)$/;"	f	file:
synthio_getrand	disksim_synthio.c	/^static double synthio_getrand (synthio_distr *fromdistr)$/;"	f	file:
synthio_info	disksim_global.h	/^   struct synthio_info *synthio_info;$/;"	m	struct:disksim	typeref:struct:disksim::synthio_info
synthio_info	disksim_synthio.c	/^typedef struct synthio_info {$/;"	s	file:
synthio_info_t	disksim_synthio.c	/^} synthio_info_t;$/;"	t	typeref:struct:synthio_info	file:
synthio_initialize_generator	disksim_synthio.c	/^void synthio_initialize_generator (process *procp)$/;"	f
synthio_iocnt	disksim_synthio.c	/^   int    synthio_iocnt;$/;"	m	struct:synthio_info	file:
synthio_iocnt	disksim_synthio.c	187;"	d	file:
synthio_printstats	disksim_synthio.c	/^void synthio_printstats()$/;"	f
synthio_read_distr	disksim_synthio.c	/^static void synthio_read_distr (FILE *parfile, synthio_distr *newdistr, double mult)$/;"	f	file:
synthio_read_exponential	disksim_synthio.c	/^static void synthio_read_exponential (FILE *parfile, synthio_distr *newdistr, double mult)$/;"	f	file:
synthio_read_normal	disksim_synthio.c	/^static void synthio_read_normal (FILE *parfile, synthio_distr *newdistr, double mult)$/;"	f	file:
synthio_read_pareto	disksim_synthio.c	/^static void synthio_read_pareto(FILE *parfile, synthio_distr *newdistr, double mult)$/;"	f	file:
synthio_read_poisson	disksim_synthio.c	/^static void synthio_read_poisson (FILE *parfile, synthio_distr *newdistr, double mult)$/;"	f	file:
synthio_read_twovalue	disksim_synthio.c	/^static void synthio_read_twovalue (FILE *parfile, synthio_distr *newdistr, double mult)$/;"	f	file:
synthio_read_uniform	disksim_synthio.c	/^static void synthio_read_uniform (FILE *parfile, synthio_distr *newdistr, double mult)$/;"	f	file:
synthio_resetstats	disksim_synthio.c	/^void synthio_resetstats()$/;"	f
synthio_syscall_time	disksim_synthio.c	/^   double synthio_syscall_time;$/;"	m	struct:synthio_info	file:
synthio_syscall_time	disksim_synthio.c	191;"	d	file:
synthio_syscalls	disksim_synthio.c	/^   int    synthio_syscalls;$/;"	m	struct:synthio_info	file:
synthio_syscalls	disksim_synthio.c	190;"	d	file:
synthio_sysret_time	disksim_synthio.c	/^   double synthio_sysret_time;$/;"	m	struct:synthio_info	file:
synthio_sysret_time	disksim_synthio.c	192;"	d	file:
synthlist	disksim_pfsim.h	/^   process *synthlist;$/;"	m	struct:pf_info
synthlist	disksim_pfsim.h	297;"	d
sysorgs	disksim_iodriver.h	/^   struct logorg **sysorgs;$/;"	m	struct:iodriver_info	typeref:struct:iodriver_info::logorg
sysorgs	disksim_iodriver.h	188;"	d
sysorgs_len	disksim_iodriver.h	/^   int sysorgs_len;$/;"	m	struct:iodriver_info
syssim_deschedule_callback	syssim_driver.c	/^syssim_deschedule_callback(void (*f)())$/;"	f
syssim_deschedule_callback	syssim_driver2.c	/^void syssim_deschedule_callback(void (*f)())$/;"	f
syssim_report_completion	syssim_driver.c	/^syssim_report_completion(SysTime t, Request *r)$/;"	f
syssim_report_completion	syssim_driver2.c	/^void syssim_report_completion(SysTime current_time, Request *r)$/;"	f
syssim_schedule_callback	syssim_driver.c	/^syssim_schedule_callback(void (*f)(void *,double), SysTime t)$/;"	f
syssim_schedule_callback	syssim_driver2.c	/^void syssim_schedule_callback(void (*f)(void *,double), SysTime t)$/;"	f
t	disksim_disk.h	/^  dm_time_t t;$/;"	m	struct:disk_currstate
table	disksim_logorg.h	/^   tableentry *table;$/;"	m	struct:logorg
tableentry	disksim_logorg.h	/^} tableentry;$/;"	t	typeref:struct:__anon24
tablesize	disksim_logorg.h	/^   int    tablesize;$/;"	m	struct:logorg
tablestripes	disksim_logorg.h	/^   int    tablestripes;$/;"	m	struct:logorg
take_free_blocks	syssim_driver2.c	/^void take_free_blocks(unsigned short devno,$/;"	f
take_free_time_stat	syssim_driver2.c	/^static statgen **take_free_time_stat;$/;"	v	file:
target_cyl	syssim_driver2.c	/^  unsigned short target_cyl;$/;"	m	struct:alg_args_s	file:
temp	disksim_global.h	/^   int    temp;$/;"	m	struct:ev
temp	disksim_global.h	/^   int    temp;$/;"	m	struct:foo
tempint1	disksim_global.h	/^   int    tempint1;$/;"	m	struct:ioreq_ev
tempint2	disksim_global.h	/^   int    tempint2;$/;"	m	struct:ioreq_ev
tempptr1	disksim_global.h	/^   void  *tempptr1;$/;"	m	struct:ioreq_ev
tempptr2	disksim_global.h	/^   void  *tempptr2;$/;"	m	struct:ioreq_ev
test_flag	disksim_synthio.c	/^int test_flag = 1;$/;"	v
threshold	syssim_driver2.c	/^static double threshold = 1.0;$/;"	v	file:
tickintrs	disksim_pfsim.h	/^   int        tickintrs;$/;"	m	struct:__anon26
time	cache.h	/^	double time;$/;"	m	struct:outgoing_request
time	disksim_bus.c	/^   double time;$/;"	m	struct:bus_ev	file:
time	disksim_cachedev.c	/^   double time;$/;"	m	struct:cacheevent	file:
time	disksim_cachemem.c	/^   double time;$/;"	m	struct:cacheevent	file:
time	disksim_disk.h	/^   double       time;$/;"	m	struct:seg
time	disksim_global.h	/^   double time;$/;"	m	struct:ev
time	disksim_global.h	/^   double time;$/;"	m	struct:foo
time	disksim_global.h	/^   double time;$/;"	m	struct:intr_ev
time	disksim_global.h	/^   double time;$/;"	m	struct:ioreq_ev
time	disksim_global.h	/^   double time;$/;"	m	struct:timer_ev
time	disksim_ioqueue.c	/^      double time;$/;"	m	union:iob::__anon17	file:
time	disksim_pfsim.h	/^   double      time;$/;"	m	struct:__anon25
time	disksim_pfsim.h	/^   double time;$/;"	m	struct:__anon27
time	disksim_pfsim.h	/^   double time;$/;"	m	struct:__anon28
time	disksim_pfsim.h	/^   double time;$/;"	m	struct:__anon29
time	disksim_pfsim.h	/^   double time;$/;"	m	struct:__anon30
time	disksim_pfsim.h	/^   double time;$/;"	m	struct:__anon31
time_scale	syssim_driver2.c	/^long time_scale = 550000;$/;"	v
timecritrespstats	disksim_pfsim.h	/^   statgen timecritrespstats;$/;"	m	struct:pf_info
timecritrespstats	disksim_pfsim.h	303;"	d
timelimitrespstats	disksim_pfsim.h	/^   statgen timelimitrespstats;$/;"	m	struct:pf_info
timelimitrespstats	disksim_pfsim.h	304;"	d
timenoncritrespstats	disksim_pfsim.h	/^   statgen timenoncritrespstats;$/;"	m	struct:pf_info
timenoncritrespstats	disksim_pfsim.h	305;"	d
timeout	disksim_ioqueue.c	/^   subqueue	timeout;$/;"	m	struct:ioq	file:
timeoutreads	disksim_ioqueue.c	/^   int		timeoutreads;$/;"	m	struct:ioq	file:
timeouts	disksim_ioqueue.c	/^   int		timeouts;$/;"	m	struct:ioq	file:
timer_ev	disksim_global.h	/^typedef struct timer_ev {$/;"	s
timer_event	disksim_global.h	/^} timer_event;$/;"	t	typeref:struct:timer_ev
timerfunc_cachedev	disksim_global.h	/^   void         (*timerfunc_cachedev)      (timer_event *);$/;"	m	struct:disksim
timerfunc_cachemem	disksim_global.h	/^   void         (*timerfunc_cachemem)      (timer_event *);$/;"	m	struct:disksim
timerfunc_disksim	disksim_global.h	/^   void         (*timerfunc_disksim)       (timer_event *);$/;"	m	struct:disksim
timerfunc_ioqueue	disksim_global.h	/^   void         (*timerfunc_ioqueue)       (timer_event *);$/;"	m	struct:disksim
timescale	disksim_ctlr.h	/^   double	timescale;$/;"	m	struct:controller
timescale	disksim_disk.h	/^  double       timescale;$/;"	m	struct:disk
tmlimit	disksim_synthio.c	/^   synthio_distr  tmlimit;$/;"	m	struct:gen	file:
to_scheme	disksim_ioqueue.c	/^   int		to_scheme;$/;"	m	struct:ioq	file:
to_time	disksim_ioqueue.c	/^   int		to_time;$/;"	m	struct:ioq	file:
total_blk_num	fast.youkim.c	/^int total_blk_num;$/;"	v
total_blk_num	fast_bk.c	/^int total_blk_num;$/;"	v
total_blk_num	last.c	/^int total_blk_num;$/;"	v
total_blk_num	ssd_interface.h	/^blk_t total_blk_num;$/;"	v
total_er_cnt	ssd_interface.h	/^int total_er_cnt;$/;"	v
total_extr_blk_num	ssd_interface.h	/^int total_extr_blk_num;$/;"	v
total_extra_sect_num	disksim_global.h	/^int total_extra_sect_num;$/;"	v
total_gc_overhead_time	opagemap.c	/^double total_gc_overhead_time;$/;"	v
total_gc_overhead_time	opagemap.youkim.c	/^double total_gc_overhead_time;$/;"	v
total_gc_overhead_time	opagemap_noopt.c	/^double total_gc_overhead_time;$/;"	v
total_gc_overhead_time	opagemap_opt.c	/^double total_gc_overhead_time;$/;"	v
total_gc_overhead_time	pagemap.c	/^double total_gc_overhead_time;$/;"	v
total_gc_overhead_time	pagemap_aayush.c	/^double total_gc_overhead_time;$/;"	v
total_init_blk_num	ssd_interface.h	/^int total_init_blk_num;$/;"	v
total_latency_stat	syssim_driver2.c	/^static statgen *total_latency_stat;$/;"	v	file:
total_latency_stat_inst	syssim_driver2.c	/^static statgen *total_latency_stat_inst;$/;"	v	file:
total_log_blk_num	fast.c	/^int total_log_blk_num;$/;"	v
total_log_blk_num	fast.youkim.c	/^int total_log_blk_num;$/;"	v
total_log_blk_num	fast_bk.c	/^int total_log_blk_num;$/;"	v
total_log_blk_num	last.c	/^int total_log_blk_num;$/;"	v
total_num_of_req	ssd_interface.c	/^unsigned int total_num_of_req = 0;$/;"	v
total_num_of_req	ssd_interface_noopt.c	/^unsigned int total_num_of_req = 0;$/;"	v
total_num_of_req	ssd_interface_opt.c	/^unsigned int total_num_of_req = 0;$/;"	v
total_sect_num	disksim_global.h	/^int total_sect_num;$/;"	v
total_seek_stat	syssim_driver2.c	/^static statgen *total_seek_stat;$/;"	v	file:
total_seeks	syssim_driver2.c	/^static long total_seeks=0;$/;"	v	file:
total_timer	syssim_driver2.c	/^long total_timer;$/;"	v
total_touches	syssim_driver2.c	/^static int total_touches=0;$/;"	v	file:
total_transfer_stat	syssim_driver2.c	/^static statgen *total_transfer_stat;$/;"	v	file:
total_util_sect_num	disksim_global.h	/^int total_util_sect_num; $/;"	v
totallength	disksim_global.h	/^   int    totallength;$/;"	m	struct:disksim
totalreqs	disksim_global.h	/^   int    totalreqs;$/;"	m	struct:disksim
totalsize	disksim_ioqueue.c	/^   int       totalsize;$/;"	m	struct:iob	file:
touch	syssim_driver2.c	/^  float touch;$/;"	m	struct:touchmap_s	file:
touchmap	syssim_driver2.c	/^static touchmap_t ***touchmap;$/;"	v	file:
touchmap_s	syssim_driver2.c	/^typedef struct touchmap_s {$/;"	s	file:
touchmap_t	syssim_driver2.c	/^} touchmap_t;$/;"	t	typeref:struct:touchmap_s	file:
trace_batch_initialize	hplcomb.c	/^int trace_batch_initialize(batchfile, fileptr, tracefilename)$/;"	f
trace_mode	disksim_global.h	/^  enum { DISKSIM_MASTER, DISKSIM_SLAVE, DISKSIM_NONE } trace_mode;$/;"	m	struct:disksim	typeref:enum:disksim::__anon14
tracebasetime	disksim_iotrace.h	/^   double tracebasetime;$/;"	m	struct:iotrace_info
tracebasetime	disksim_iotrace.h	96;"	d
tracebatch	hplcomb.c	/^int tracebatch = FALSE;$/;"	v
tracecompress	hplcomb.c	/^int tracecompress = FALSE;$/;"	v
traceendian	disksim_global.h	/^   int    traceendian;$/;"	m	struct:disksim
traceendian	hplcomb.c	/^int traceendian = _LITTLE_ENDIAN;$/;"	v
tracefile	disksim_synthio.c	/^   FILE          *tracefile;$/;"	m	struct:gen	file:
tracefile	syssim_driver2.c	/^static FILE *tracefile;$/;"	v	file:
traceformat	disksim_global.h	/^   int    traceformat;$/;"	m	struct:disksim
traceformat	hplcomb.c	/^int traceformat = NCR_ASCII;$/;"	v
traceheader	disksim_global.h	/^   int    traceheader;$/;"	m	struct:disksim
tracemap	disksim_iosim.c	/^   int     tracemap[TRACEMAPPINGS];$/;"	m	struct:iosim_info	file:
tracemap	disksim_iosim.c	164;"	d	file:
tracemap1	disksim_iosim.c	/^   int     tracemap1[TRACEMAPPINGS];$/;"	m	struct:iosim_info	file:
tracemap1	disksim_iosim.c	165;"	d	file:
tracemap2	disksim_iosim.c	/^   int     tracemap2[TRACEMAPPINGS];$/;"	m	struct:iosim_info	file:
tracemap2	disksim_iosim.c	166;"	d	file:
tracemap3	disksim_iosim.c	/^   int     tracemap3[TRACEMAPPINGS];$/;"	m	struct:iosim_info	file:
tracemap3	disksim_iosim.c	167;"	d	file:
tracemap4	disksim_iosim.c	/^   int     tracemap4[TRACEMAPPINGS];$/;"	m	struct:iosim_info	file:
tracemap4	disksim_iosim.c	168;"	d	file:
tracemappings	disksim_iosim.c	/^   int     tracemappings;$/;"	m	struct:iosim_info	file:
tracemappings	disksim_iosim.c	163;"	d	file:
tracepipes	disksim_global.h	/^  int tracepipes[2];$/;"	m	struct:disksim
tracestats	disksim_iosim.c	/^   statgen *tracestats;$/;"	m	struct:iosim_info	file:
tracestats	disksim_iosim.c	169;"	d	file:
tracestats1	disksim_iosim.c	/^   statgen *tracestats1;$/;"	m	struct:iosim_info	file:
tracestats1	disksim_iosim.c	170;"	d	file:
tracestats2	disksim_iosim.c	/^   statgen *tracestats2;$/;"	m	struct:iosim_info	file:
tracestats2	disksim_iosim.c	171;"	d	file:
tracestats3	disksim_iosim.c	/^   statgen *tracestats3;$/;"	m	struct:iosim_info	file:
tracestats3	disksim_iosim.c	172;"	d	file:
tracestats4	disksim_iosim.c	/^   statgen *tracestats4;$/;"	m	struct:iosim_info	file:
tracestats4	disksim_iosim.c	173;"	d	file:
tracestats5	disksim_iosim.c	/^   statgen *tracestats5;$/;"	m	struct:iosim_info	file:
tracestats5	disksim_iosim.c	174;"	d	file:
type	disksim_bus.c	/^   int type;$/;"	m	struct:bus_ev	file:
type	disksim_bus.c	/^  int           type;$/;"	m	struct:bus	file:
type	disksim_cachedev.c	/^   int type;$/;"	m	struct:cacheevent	file:
type	disksim_cachemem.c	/^   int type;$/;"	m	struct:cacheevent	file:
type	disksim_ctlr.h	/^   int          type;$/;"	m	struct:controller
type	disksim_global.h	/^   int    type;$/;"	m	struct:intr_ev
type	disksim_global.h	/^   int    type;$/;"	m	struct:ioreq_ev
type	disksim_global.h	/^   int type;$/;"	m	struct:ev
type	disksim_global.h	/^   int type;$/;"	m	struct:foo
type	disksim_global.h	/^   int type;$/;"	m	struct:timer_ev
type	disksim_iodriver.h	/^   int		type;$/;"	m	struct:iodriver
type	disksim_logorg.h	/^   int    type;$/;"	m	struct:os
type	disksim_pfsim.h	/^   int         type;$/;"	m	struct:__anon25
type	disksim_pfsim.h	/^   int    type;$/;"	m	struct:__anon27
type	disksim_pfsim.h	/^   int    type;$/;"	m	struct:__anon28
type	disksim_pfsim.h	/^   int    type;$/;"	m	struct:__anon29
type	disksim_pfsim.h	/^   int    type;$/;"	m	struct:__anon30
type	disksim_pfsim.h	/^   int    type;$/;"	m	struct:__anon31
type	disksim_simpleflash.c	/^    int type; $/;"	m	struct:simpleflash	file:
type	disksim_synthio.c	/^   int    type;$/;"	m	struct:dist	file:
type	syssim_driver.h	/^        char type;		\/* 'R' denotes read; 'W' denotes write *\/$/;"	m	struct:__anon41
u_int	disksim_global.h	113;"	d
u_int32_t	disksim_global.h	119;"	d
u_int32_t	disksim_global.h	122;"	d
u_int32_t	hplcomb.c	49;"	d	file:
u_int64_t	disksim_global.h	114;"	d
unique_blk_num	ssd_interface.h	/^int unique_blk_num; $/;"	v
unique_log_blk_num	ssd_interface.h	/^int unique_log_blk_num;$/;"	v
update	opagemap.h	/^  int  update;$/;"	m	struct:opm_entry
update_cyl_position	syssim_driver2.c	/^inline int update_cyl_position(alg_args_t *args,$/;"	f
update_ec	nand.h	/^   int update_ec;$/;"	m	struct:blk_state
update_iodriver_statistics	disksim_iodriver.c	/^static void update_iodriver_statistics()$/;"	f	file:
update_key_metric	cache.c	/^void update_key_metric(struct flash_cache_line* fcl)$/;"	f
update_reqd	opagemap.h	/^int update_reqd;$/;"	v
usec	disksim_hptrace.h	/^   u_int32_t usec;    \/*       event *\/$/;"	m	struct:__anon15
usequeue	disksim_iodriver.h	/^   int		usequeue;$/;"	m	struct:iodriver
val	disksim_global.h	/^   int    val;$/;"	m	struct:timer_ev
valid	nand.h	/^  _u32 valid :  1;$/;"	m	struct:sect_state
validate_buffaction	disksim_iotrace.h	/^   char validate_buffaction[20];$/;"	m	struct:iotrace_info
validate_buffaction	disksim_iotrace.h	119;"	d
validate_lastbcount	disksim_iotrace.h	/^   int validate_lastbcount;$/;"	m	struct:iotrace_info
validate_lastbcount	disksim_iotrace.h	116;"	d
validate_lastblkno	disksim_iotrace.h	/^   int validate_lastblkno;$/;"	m	struct:iotrace_info
validate_lastblkno	disksim_iotrace.h	115;"	d
validate_lastread	disksim_iotrace.h	/^   int validate_lastread;$/;"	m	struct:iotrace_info
validate_lastread	disksim_iotrace.h	117;"	d
validate_lastserv	disksim_iotrace.h	/^   double validate_lastserv;$/;"	m	struct:iotrace_info
validate_lastserv	disksim_iotrace.h	114;"	d
validate_nextinter	disksim_iotrace.h	/^   double validate_nextinter;$/;"	m	struct:iotrace_info
validate_nextinter	disksim_iotrace.h	118;"	d
validatebuf	disksim_iosim.c	/^   int     validatebuf[10];$/;"	m	struct:iosim_info	file:
validatebuf	disksim_iosim.c	162;"	d	file:
validmap	disksim_cachedev.c	/^   bitstr_t *validmap;$/;"	m	struct:cache_def	file:
validpoint	disksim_cachedev.c	/^   int validpoint;$/;"	m	struct:cacheevent	file:
validpoint	disksim_cachemem.c	/^   int validpoint;$/;"	m	struct:cacheevent	file:
value	disksim_global.h	/^   u_int32_t	value;$/;"	m	union:__anon13
value	hplcomb.c	/^   int32_t	value;$/;"	m	union:__anon38	file:
var	disksim_synthio.c	/^   double var;$/;"	m	struct:dist	file:
vector	disksim_global.h	/^   int    vector;$/;"	m	struct:intr_ev
vector	disksim_pfsim.h	/^   int    vector;$/;"	m	struct:__anon27
verbosity	disksim_global.h	/^   int verbosity;$/;"	m	struct:disksim
vscan_cyls	disksim_ioqueue.c	/^   int		vscan_cyls;$/;"	m	struct:subq	file:
vscan_value	disksim_ioqueue.c	/^   double	vscan_value;$/;"	m	struct:subq	file:
wait_start	disksim_bus.c	/^   double wait_start;$/;"	m	struct:bus_ev	file:
waitees	disksim_cachedev.c	/^   struct cacheevent *waitees;$/;"	m	struct:cacheevent	typeref:struct:cacheevent::cacheevent	file:
waitees	disksim_cachemem.c	/^   struct cacheevent *waitees;$/;"	m	struct:cacheevent	typeref:struct:cacheevent::cacheevent	file:
waitingforbus	disksim_ctlr.h	/^   double	waitingforbus;$/;"	m	struct:controller
waitingforbus	disksim_disk.h	/^   double  waitingforbus;$/;"	m	struct:__anon12
waitingforbus	disksim_simpledisk.c	/^   double  waitingforbus;$/;"	m	struct:__anon33	file:
waitingforbus	disksim_simpleflash.c	/^   double  waitingforbus;$/;"	m	struct:__anon34	file:
waittime	disksim_ioqueue.c	/^ 	 int       waittime;$/;"	m	struct:iob::__anon17::__anon18	file:
wakeup_event	disksim_pfsim.h	/^} wakeup_event;$/;"	t	typeref:struct:__anon31
wakeupfunc	disksim_cachedev.c	/^   void (**wakeupfunc)(void *,struct cacheevent *);	\/* to re-activate slept proc *\/$/;"	m	struct:cache_def	file:
wakeupfunc	disksim_cachemem.c	/^   void (**wakeupfunc)(void *,struct cacheevent *);	\/* to re-activate slept proc *\/$/;"	m	struct:cache_def	file:
wakeupfunc_ctlrsmart	disksim_global.h	/^   void         (*wakeupfunc_ctlrsmart)    (void *, struct cacheevent *);$/;"	m	struct:disksim
wakeupparam	disksim_cachedev.c	/^   void *wakeupparam;				\/* first param for wakeupfunc *\/$/;"	m	struct:cache_def	file:
wakeupparam	disksim_cachemem.c	/^   void *wakeupparam;				\/* first param for wakeupfunc *\/$/;"	m	struct:cache_def	file:
warmFlash	disksim_main.c	/^void warmFlash(char *tname){$/;"	f
warmFlashsynth	disksim_main.c	/^void warmFlashsynth(){$/;"	f
warmFlashsynth1	disksim_iodriver.c	/^void warmFlashsynth1(){$/;"	f
warm_done	disksim_main.c	/^extern int warm_done = 0;  $/;"	v
warm_done	ssd_interface.h	/^int warm_done; $/;"	v
warmup_event	disksim_global.h	/^   timer_event *warmup_event;$/;"	m	struct:disksim
warmup_iocnt	disksim_global.h	/^   int    warmup_iocnt;$/;"	m	struct:disksim
warmuptime	disksim_global.h	/^   double warmuptime;$/;"	m	struct:disksim
warmuptime	disksim_global.h	411;"	d
watermark	disksim_disk.h	/^   int          	watermark;$/;"	m	struct:diskreq_t
wear_level	ssd_interface.c	/^void wear_level()$/;"	f
wear_level_flag	ssd_interface.h	/^int wear_level_flag[20000];$/;"	v
wear_level_hybrid_flag	ssd_interface.c	/^int wear_level_hybrid_flag = 0;$/;"	v
wear_level_test	disksim_main.c	/^void wear_level_test(char *tname){$/;"	f
wearleveling_starting_flag	ssd_interface.c	/^int wearleveling_starting_flag = 0;$/;"	v
wrap	disksim_global.h	424;"	d
write	ftl.h	/^  size_t (*write)(sect_t lsn, size_t size, int map_flag);$/;"	m	struct:ftl_operation
writeToLogBlock	fast.c	/^size_t writeToLogBlock(sect_t lsn, int lbn, int lpn)$/;"	f
writeToLogBlock	fast.youkim.c	/^size_t writeToLogBlock(sect_t lsn, int lbn, int lpn)$/;"	f
writeToLogBlock	fast_bk.c	/^size_t writeToLogBlock(sect_t lsn, int lbn, int lpn)$/;"	f
writeToLogBlock	last.c	/^size_t writeToLogBlock(sect_t lsn, int lbn, int lpn)$/;"	f
write_cache_hit	opagemap.h	/^int write_cache_hit;$/;"	v
write_cache_hit	pagemap.h	/^int write_cache_hit;$/;"	v
write_count	ssd_interface.h	/^int write_count;$/;"	v
write_hit_stop_readahead	disksim_disk.h	/^  int		write_hit_stop_readahead;$/;"	m	struct:disk
write_line_by_line	disksim_cachemem.c	/^   int write_line_by_line;$/;"	m	struct:cache_def	file:
write_req_cnt	disksim_logorg.c	/^int write_req_cnt = 0;$/;"	v
writeatoms	disksim_cachemem.c	/^   int writeatoms;$/;"	m	struct:__anon3	file:
writeblktranstime	disksim_bus.c	/^  double        writeblktranstime;$/;"	m	struct:bus	file:
writeblocks	disksim_cachedev.c	/^   int writeblocks;$/;"	m	struct:__anon2	file:
writecomb	disksim_disk.h	/^  int		writecomb;$/;"	m	struct:disk
writecombs	disksim_disk.h	/^   int     writecombs;$/;"	m	struct:__anon12
writedelay	disksim_ioqueue.c	/^   double	writedelay;$/;"	m	struct:ioq	file:
writefill_prefetch_type	disksim_cachemem.c	/^   int writefill_prefetch_type;$/;"	m	struct:cache_def	file:
writehitsclean	disksim_cachemem.c	/^   int writehitsclean;$/;"	m	struct:__anon3	file:
writehitsdirty	disksim_cachemem.c	/^   int writehitsdirty;$/;"	m	struct:__anon3	file:
writehitsfull	disksim_cachedev.c	/^   int writehitsfull;$/;"	m	struct:__anon2	file:
writeinducedfillatoms	disksim_cachemem.c	/^   int writeinducedfillatoms;$/;"	m	struct:__anon3	file:
writeinducedfills	disksim_cachemem.c	/^   int writeinducedfills;$/;"	m	struct:__anon3	file:
writeintarrstats	disksim_ioqueue.c	/^   statgen	writeintarrstats;$/;"	m	struct:ioq	file:
writeintarrstats	disksim_logorg.h	/^   statgen      writeintarrstats;$/;"	m	struct:__anon22
writelock	disksim_cachemem.c	/^   ioreq_event *writelock;$/;"	m	struct:cacheatom	file:
writemisses	disksim_cachedev.c	/^   int writemisses;$/;"	m	struct:__anon2	file:
writemisses	disksim_cachemem.c	/^   int writemisses;$/;"	m	struct:__anon3	file:
writemisses	disksim_disk.h	/^   int     writemisses;$/;"	m	struct:__anon12
writemisslimitstats	disksim_pfsim.h	/^   statgen writemisslimitstats;$/;"	m	struct:process
writeprebuffering	disksim_disk.h	/^  int		writeprebuffering;$/;"	m	struct:disk
writes	disksim_cachedev.c	/^   int writes;$/;"	m	struct:__anon2	file:
writes	disksim_cachemem.c	/^   int writes;$/;"	m	struct:__anon3	file:
writescheme	disksim_cachedev.c	/^   int writescheme;$/;"	m	struct:cache_def	file:
writescheme	disksim_cachemem.c	/^   int writescheme;$/;"	m	struct:cache_def	file:
writesizestats	disksim_ioqueue.c	/^   statgen	writesizestats;$/;"	m	struct:ioq	file:
writesizestats	disksim_logorg.h	/^   statgen	writesizestats;$/;"	m	struct:__anon22
writesync	disksim_logorg.h	/^   int    writesync;$/;"	m	struct:logorg
writetimelimitstats	disksim_pfsim.h	/^   statgen writetimelimitstats;$/;"	m	struct:process
writewater	disksim_disk.h	/^  double	writewater;$/;"	m	struct:disk
xfertime	disksim_disk.h	/^   double  xfertime;$/;"	m	struct:__anon12
xfertimestats	disksim_disk.h	/^   statgen xfertimestats;$/;"	m	struct:__anon12
zero	syssim_driver2.c	/^static int zero[MAXDISKS];$/;"	v	file:
zerolatency	disksim_disk.h	/^   int     zerolatency;$/;"	m	struct:__anon12
zeroseeks	disksim_disk.h	/^   int     zeroseeks;$/;"	m	struct:__anon12
